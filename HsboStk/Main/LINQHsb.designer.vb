'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="hsboStock")>  _
Partial Public Class LINQHsbDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertbuyerLocation(instance As buyerLocation)
    End Sub
  Partial Private Sub UpdatebuyerLocation(instance As buyerLocation)
    End Sub
  Partial Private Sub DeletebuyerLocation(instance As buyerLocation)
    End Sub
  Partial Private Sub InsertbuyerStore(instance As buyerStore)
    End Sub
  Partial Private Sub UpdatebuyerStore(instance As buyerStore)
    End Sub
  Partial Private Sub DeletebuyerStore(instance As buyerStore)
    End Sub
  Partial Private Sub Insertclient(instance As client)
    End Sub
  Partial Private Sub Updateclient(instance As client)
    End Sub
  Partial Private Sub Deleteclient(instance As client)
    End Sub
  Partial Private Sub Insertcrop(instance As crop)
    End Sub
  Partial Private Sub Updatecrop(instance As crop)
    End Sub
  Partial Private Sub Deletecrop(instance As crop)
    End Sub
  Partial Private Sub Insertunit(instance As unit)
    End Sub
  Partial Private Sub Updateunit(instance As unit)
    End Sub
  Partial Private Sub Deleteunit(instance As unit)
    End Sub
  Partial Private Sub Insertcar(instance As car)
    End Sub
  Partial Private Sub Updatecar(instance As car)
    End Sub
  Partial Private Sub Deletecar(instance As car)
    End Sub
  Partial Private Sub Insertdriver(instance As driver)
    End Sub
  Partial Private Sub Updatedriver(instance As driver)
    End Sub
  Partial Private Sub Deletedriver(instance As driver)
    End Sub
  Partial Private Sub InsertarivalLoc(instance As arivalLoc)
    End Sub
  Partial Private Sub UpdatearivalLoc(instance As arivalLoc)
    End Sub
  Partial Private Sub DeletearivalLoc(instance As arivalLoc)
    End Sub
  Partial Private Sub Insertproduct(instance As product)
    End Sub
  Partial Private Sub Updateproduct(instance As product)
    End Sub
  Partial Private Sub Deleteproduct(instance As product)
    End Sub
  Partial Private Sub Insertpeeler(instance As peeler)
    End Sub
  Partial Private Sub Updatepeeler(instance As peeler)
    End Sub
  Partial Private Sub Deletepeeler(instance As peeler)
    End Sub
  Partial Private Sub InsertpeelerStore(instance As peelerStore)
    End Sub
  Partial Private Sub UpdatepeelerStore(instance As peelerStore)
    End Sub
  Partial Private Sub DeletepeelerStore(instance As peelerStore)
    End Sub
  Partial Private Sub InsertprdStore(instance As prdStore)
    End Sub
  Partial Private Sub UpdateprdStore(instance As prdStore)
    End Sub
  Partial Private Sub DeleteprdStore(instance As prdStore)
    End Sub
  Partial Private Sub InsertarivalPrdStore(instance As arivalPrdStore)
    End Sub
  Partial Private Sub UpdatearivalPrdStore(instance As arivalPrdStore)
    End Sub
  Partial Private Sub DeletearivalPrdStore(instance As arivalPrdStore)
    End Sub
  Partial Private Sub InsertexportLoc(instance As exportLoc)
    End Sub
  Partial Private Sub UpdateexportLoc(instance As exportLoc)
    End Sub
  Partial Private Sub DeleteexportLoc(instance As exportLoc)
    End Sub
  Partial Private Sub InsertexportStore(instance As exportStore)
    End Sub
  Partial Private Sub UpdateexportStore(instance As exportStore)
    End Sub
  Partial Private Sub DeleteexportStore(instance As exportStore)
    End Sub
  Partial Private Sub Insertpay(instance As pay)
    End Sub
  Partial Private Sub Updatepay(instance As pay)
    End Sub
  Partial Private Sub Deletepay(instance As pay)
    End Sub
  Partial Private Sub InsertcropUnit(instance As cropUnit)
    End Sub
  Partial Private Sub UpdatecropUnit(instance As cropUnit)
    End Sub
  Partial Private Sub DeletecropUnit(instance As cropUnit)
    End Sub
  Partial Private Sub InsertprodUnit(instance As prodUnit)
    End Sub
  Partial Private Sub UpdateprodUnit(instance As prodUnit)
    End Sub
  Partial Private Sub DeleteprodUnit(instance As prodUnit)
    End Sub
  Partial Private Sub InsertunitExch(instance As unitExch)
    End Sub
  Partial Private Sub UpdateunitExch(instance As unitExch)
    End Sub
  Partial Private Sub DeleteunitExch(instance As unitExch)
    End Sub
  Partial Private Sub InsertarivalStore(instance As arivalStore)
    End Sub
  Partial Private Sub UpdatearivalStore(instance As arivalStore)
    End Sub
  Partial Private Sub DeletearivalStore(instance As arivalStore)
    End Sub
  Partial Private Sub InsertheadImg(instance As headImg)
    End Sub
  Partial Private Sub UpdateheadImg(instance As headImg)
    End Sub
  Partial Private Sub DeleteheadImg(instance As headImg)
    End Sub
  Partial Private Sub InsertwaterImg(instance As waterImg)
    End Sub
  Partial Private Sub UpdatewaterImg(instance As waterImg)
    End Sub
  Partial Private Sub DeletewaterImg(instance As waterImg)
    End Sub
  Partial Private Sub InsertclientAr(instance As clientAr)
    End Sub
  Partial Private Sub UpdateclientAr(instance As clientAr)
    End Sub
  Partial Private Sub DeleteclientAr(instance As clientAr)
    End Sub
  Partial Private Sub InsertclientCrp(instance As clientCrp)
    End Sub
  Partial Private Sub UpdateclientCrp(instance As clientCrp)
    End Sub
  Partial Private Sub DeleteclientCrp(instance As clientCrp)
    End Sub
  Partial Private Sub InsertprocessBuy(instance As processBuy)
    End Sub
  Partial Private Sub UpdateprocessBuy(instance As processBuy)
    End Sub
  Partial Private Sub DeleteprocessBuy(instance As processBuy)
    End Sub
  Partial Private Sub InsertprocessArv(instance As processArv)
    End Sub
  Partial Private Sub UpdateprocessArv(instance As processArv)
    End Sub
  Partial Private Sub DeleteprocessArv(instance As processArv)
    End Sub
  Partial Private Sub InsertprocessRcv(instance As processRcv)
    End Sub
  Partial Private Sub UpdateprocessRcv(instance As processRcv)
    End Sub
  Partial Private Sub DeleteprocessRcv(instance As processRcv)
    End Sub
  Partial Private Sub InsertprocessExp(instance As processExp)
    End Sub
  Partial Private Sub UpdateprocessExp(instance As processExp)
    End Sub
  Partial Private Sub DeleteprocessExp(instance As processExp)
    End Sub
  Partial Private Sub Insertbuy(instance As buy)
    End Sub
  Partial Private Sub Updatebuy(instance As buy)
    End Sub
  Partial Private Sub Deletebuy(instance As buy)
    End Sub
  Partial Private Sub InsertbuyDetail(instance As buyDetail)
    End Sub
  Partial Private Sub UpdatebuyDetail(instance As buyDetail)
    End Sub
  Partial Private Sub DeletebuyDetail(instance As buyDetail)
    End Sub
  Partial Private Sub Insertshipment(instance As shipment)
    End Sub
  Partial Private Sub Updateshipment(instance As shipment)
    End Sub
  Partial Private Sub Deleteshipment(instance As shipment)
    End Sub
  Partial Private Sub Insertarrive(instance As arrive)
    End Sub
  Partial Private Sub Updatearrive(instance As arrive)
    End Sub
  Partial Private Sub Deletearrive(instance As arrive)
    End Sub
  Partial Private Sub InsertaStoreReq(instance As aStoreReq)
    End Sub
  Partial Private Sub UpdateaStoreReq(instance As aStoreReq)
    End Sub
  Partial Private Sub DeleteaStoreReq(instance As aStoreReq)
    End Sub
  Partial Private Sub InsertaStoreDet(instance As aStoreDet)
    End Sub
  Partial Private Sub UpdateaStoreDet(instance As aStoreDet)
    End Sub
  Partial Private Sub DeleteaStoreDet(instance As aStoreDet)
    End Sub
  Partial Private Sub InsertoutPrd(instance As outPrd)
    End Sub
  Partial Private Sub UpdateoutPrd(instance As outPrd)
    End Sub
  Partial Private Sub DeleteoutPrd(instance As outPrd)
    End Sub
  Partial Private Sub InsertoutPrdDet(instance As outPrdDet)
    End Sub
  Partial Private Sub UpdateoutPrdDet(instance As outPrdDet)
    End Sub
  Partial Private Sub DeleteoutPrdDet(instance As outPrdDet)
    End Sub
  Partial Private Sub InserttoPrd(instance As toPrd)
    End Sub
  Partial Private Sub UpdatetoPrd(instance As toPrd)
    End Sub
  Partial Private Sub DeletetoPrd(instance As toPrd)
    End Sub
  Partial Private Sub InserttoPrdDet(instance As toPrdDet)
    End Sub
  Partial Private Sub UpdatetoPrdDet(instance As toPrdDet)
    End Sub
  Partial Private Sub DeletetoPrdDet(instance As toPrdDet)
    End Sub
  Partial Private Sub InsertsaleDet(instance As saleDet)
    End Sub
  Partial Private Sub UpdatesaleDet(instance As saleDet)
    End Sub
  Partial Private Sub DeletesaleDet(instance As saleDet)
    End Sub
  Partial Private Sub Insertreceive(instance As receive)
    End Sub
  Partial Private Sub Updatereceive(instance As receive)
    End Sub
  Partial Private Sub Deletereceive(instance As receive)
    End Sub
  Partial Private Sub InsertreceiveDet(instance As receiveDet)
    End Sub
  Partial Private Sub UpdatereceiveDet(instance As receiveDet)
    End Sub
  Partial Private Sub DeletereceiveDet(instance As receiveDet)
    End Sub
  Partial Private Sub InsertexpShip(instance As expShip)
    End Sub
  Partial Private Sub UpdateexpShip(instance As expShip)
    End Sub
  Partial Private Sub DeleteexpShip(instance As expShip)
    End Sub
  Partial Private Sub InsertreceiveClnt(instance As receiveClnt)
    End Sub
  Partial Private Sub UpdatereceiveClnt(instance As receiveClnt)
    End Sub
  Partial Private Sub DeletereceiveClnt(instance As receiveClnt)
    End Sub
  Partial Private Sub InsertrecvClntDet(instance As recvClntDet)
    End Sub
  Partial Private Sub UpdaterecvClntDet(instance As recvClntDet)
    End Sub
  Partial Private Sub DeleterecvClntDet(instance As recvClntDet)
    End Sub
  Partial Private Sub InsertarriveExp(instance As arriveExp)
    End Sub
  Partial Private Sub UpdatearriveExp(instance As arriveExp)
    End Sub
  Partial Private Sub DeletearriveExp(instance As arriveExp)
    End Sub
  Partial Private Sub InsertexpStock(instance As expStock)
    End Sub
  Partial Private Sub UpdateexpStock(instance As expStock)
    End Sub
  Partial Private Sub DeleteexpStock(instance As expStock)
    End Sub
  Partial Private Sub InsertexpStockDet(instance As expStockDet)
    End Sub
  Partial Private Sub UpdateexpStockDet(instance As expStockDet)
    End Sub
  Partial Private Sub DeleteexpStockDet(instance As expStockDet)
    End Sub
  Partial Private Sub InsertshipDetail(instance As shipDetail)
    End Sub
  Partial Private Sub UpdateshipDetail(instance As shipDetail)
    End Sub
  Partial Private Sub DeleteshipDetail(instance As shipDetail)
    End Sub
  Partial Private Sub InsertarriveDetail(instance As arriveDetail)
    End Sub
  Partial Private Sub UpdatearriveDetail(instance As arriveDetail)
    End Sub
  Partial Private Sub DeletearriveDetail(instance As arriveDetail)
    End Sub
  Partial Private Sub InsertexpShipDet(instance As expShipDet)
    End Sub
  Partial Private Sub UpdateexpShipDet(instance As expShipDet)
    End Sub
  Partial Private Sub DeleteexpShipDet(instance As expShipDet)
    End Sub
  Partial Private Sub InsertarriveExpDet(instance As arriveExpDet)
    End Sub
  Partial Private Sub UpdatearriveExpDet(instance As arriveExpDet)
    End Sub
  Partial Private Sub DeletearriveExpDet(instance As arriveExpDet)
    End Sub
  Partial Private Sub Insertsale(instance As sale)
    End Sub
  Partial Private Sub Updatesale(instance As sale)
    End Sub
  Partial Private Sub Deletesale(instance As sale)
    End Sub
  Partial Private Sub InsertgoodShp(instance As goodShp)
    End Sub
  Partial Private Sub UpdategoodShp(instance As goodShp)
    End Sub
  Partial Private Sub DeletegoodShp(instance As goodShp)
    End Sub
  Partial Private Sub InsertgoodShpDet(instance As goodShpDet)
    End Sub
  Partial Private Sub UpdategoodShpDet(instance As goodShpDet)
    End Sub
  Partial Private Sub DeletegoodShpDet(instance As goodShpDet)
    End Sub
  Partial Private Sub InsertstrType(instance As strType)
    End Sub
  Partial Private Sub UpdatestrType(instance As strType)
    End Sub
  Partial Private Sub DeletestrType(instance As strType)
    End Sub
  Partial Private Sub Insertuser(instance As user)
    End Sub
  Partial Private Sub Updateuser(instance As user)
    End Sub
  Partial Private Sub Deleteuser(instance As user)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.HsboStk.Settings.Default.hsboStockConnectionString2, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property buyerLocations() As System.Data.Linq.Table(Of buyerLocation)
		Get
			Return Me.GetTable(Of buyerLocation)
		End Get
	End Property
	
	Public ReadOnly Property buyerStores() As System.Data.Linq.Table(Of buyerStore)
		Get
			Return Me.GetTable(Of buyerStore)
		End Get
	End Property
	
	Public ReadOnly Property clients() As System.Data.Linq.Table(Of client)
		Get
			Return Me.GetTable(Of client)
		End Get
	End Property
	
	Public ReadOnly Property crops() As System.Data.Linq.Table(Of crop)
		Get
			Return Me.GetTable(Of crop)
		End Get
	End Property
	
	Public ReadOnly Property units() As System.Data.Linq.Table(Of unit)
		Get
			Return Me.GetTable(Of unit)
		End Get
	End Property
	
	Public ReadOnly Property V_BuyerStores() As System.Data.Linq.Table(Of V_BuyerStore)
		Get
			Return Me.GetTable(Of V_BuyerStore)
		End Get
	End Property
	
	Public ReadOnly Property cars() As System.Data.Linq.Table(Of car)
		Get
			Return Me.GetTable(Of car)
		End Get
	End Property
	
	Public ReadOnly Property drivers() As System.Data.Linq.Table(Of driver)
		Get
			Return Me.GetTable(Of driver)
		End Get
	End Property
	
	Public ReadOnly Property arivalLocs() As System.Data.Linq.Table(Of arivalLoc)
		Get
			Return Me.GetTable(Of arivalLoc)
		End Get
	End Property
	
	Public ReadOnly Property V_ArivalStores() As System.Data.Linq.Table(Of V_ArivalStore)
		Get
			Return Me.GetTable(Of V_ArivalStore)
		End Get
	End Property
	
	Public ReadOnly Property tests() As System.Data.Linq.Table(Of test)
		Get
			Return Me.GetTable(Of test)
		End Get
	End Property
	
	Public ReadOnly Property products() As System.Data.Linq.Table(Of product)
		Get
			Return Me.GetTable(Of product)
		End Get
	End Property
	
	Public ReadOnly Property peelers() As System.Data.Linq.Table(Of peeler)
		Get
			Return Me.GetTable(Of peeler)
		End Get
	End Property
	
	Public ReadOnly Property peelerStores() As System.Data.Linq.Table(Of peelerStore)
		Get
			Return Me.GetTable(Of peelerStore)
		End Get
	End Property
	
	Public ReadOnly Property V_PeelerStores() As System.Data.Linq.Table(Of V_PeelerStore)
		Get
			Return Me.GetTable(Of V_PeelerStore)
		End Get
	End Property
	
	Public ReadOnly Property prdStores() As System.Data.Linq.Table(Of prdStore)
		Get
			Return Me.GetTable(Of prdStore)
		End Get
	End Property
	
	Public ReadOnly Property arivalPrdStores() As System.Data.Linq.Table(Of arivalPrdStore)
		Get
			Return Me.GetTable(Of arivalPrdStore)
		End Get
	End Property
	
	Public ReadOnly Property V_Peelers() As System.Data.Linq.Table(Of V_Peeler)
		Get
			Return Me.GetTable(Of V_Peeler)
		End Get
	End Property
	
	Public ReadOnly Property V_Products() As System.Data.Linq.Table(Of V_Product)
		Get
			Return Me.GetTable(Of V_Product)
		End Get
	End Property
	
	Public ReadOnly Property exportLocs() As System.Data.Linq.Table(Of exportLoc)
		Get
			Return Me.GetTable(Of exportLoc)
		End Get
	End Property
	
	Public ReadOnly Property exportStores() As System.Data.Linq.Table(Of exportStore)
		Get
			Return Me.GetTable(Of exportStore)
		End Get
	End Property
	
	Public ReadOnly Property V_ExportStores() As System.Data.Linq.Table(Of V_ExportStore)
		Get
			Return Me.GetTable(Of V_ExportStore)
		End Get
	End Property
	
	Public ReadOnly Property pays() As System.Data.Linq.Table(Of pay)
		Get
			Return Me.GetTable(Of pay)
		End Get
	End Property
	
	Public ReadOnly Property V_ShipmentDets() As System.Data.Linq.Table(Of V_ShipmentDet)
		Get
			Return Me.GetTable(Of V_ShipmentDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RepBuyCrps() As System.Data.Linq.Table(Of V_RepBuyCrp)
		Get
			Return Me.GetTable(Of V_RepBuyCrp)
		End Get
	End Property
	
	Public ReadOnly Property cropUnits() As System.Data.Linq.Table(Of cropUnit)
		Get
			Return Me.GetTable(Of cropUnit)
		End Get
	End Property
	
	Public ReadOnly Property prodUnits() As System.Data.Linq.Table(Of prodUnit)
		Get
			Return Me.GetTable(Of prodUnit)
		End Get
	End Property
	
	Public ReadOnly Property unitExches() As System.Data.Linq.Table(Of unitExch)
		Get
			Return Me.GetTable(Of unitExch)
		End Get
	End Property
	
	Public ReadOnly Property V_unitExches() As System.Data.Linq.Table(Of V_unitExch)
		Get
			Return Me.GetTable(Of V_unitExch)
		End Get
	End Property
	
	Public ReadOnly Property arivalStores() As System.Data.Linq.Table(Of arivalStore)
		Get
			Return Me.GetTable(Of arivalStore)
		End Get
	End Property
	
	Public ReadOnly Property V_ShpDets() As System.Data.Linq.Table(Of V_ShpDet)
		Get
			Return Me.GetTable(Of V_ShpDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RptShpDets() As System.Data.Linq.Table(Of V_RptShpDet)
		Get
			Return Me.GetTable(Of V_RptShpDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RptArvDets() As System.Data.Linq.Table(Of V_RptArvDet)
		Get
			Return Me.GetTable(Of V_RptArvDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RepAStrDets() As System.Data.Linq.Table(Of V_RepAStrDet)
		Get
			Return Me.GetTable(Of V_RepAStrDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RepOutPrds() As System.Data.Linq.Table(Of V_RepOutPrd)
		Get
			Return Me.GetTable(Of V_RepOutPrd)
		End Get
	End Property
	
	Public ReadOnly Property V_RepToPrds() As System.Data.Linq.Table(Of V_RepToPrd)
		Get
			Return Me.GetTable(Of V_RepToPrd)
		End Get
	End Property
	
	Public ReadOnly Property V_RepRecvDets() As System.Data.Linq.Table(Of V_RepRecvDet)
		Get
			Return Me.GetTable(Of V_RepRecvDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RepExShpDets() As System.Data.Linq.Table(Of V_RepExShpDet)
		Get
			Return Me.GetTable(Of V_RepExShpDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RepArExDets() As System.Data.Linq.Table(Of V_RepArExDet)
		Get
			Return Me.GetTable(Of V_RepArExDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RepExpStks() As System.Data.Linq.Table(Of V_RepExpStk)
		Get
			Return Me.GetTable(Of V_RepExpStk)
		End Get
	End Property
	
	Public ReadOnly Property V_RepGoods() As System.Data.Linq.Table(Of V_RepGood)
		Get
			Return Me.GetTable(Of V_RepGood)
		End Get
	End Property
	
	Public ReadOnly Property V_expDetOfShps() As System.Data.Linq.Table(Of V_expDetOfShp)
		Get
			Return Me.GetTable(Of V_expDetOfShp)
		End Get
	End Property
	
	Public ReadOnly Property V_FinalStocks() As System.Data.Linq.Table(Of V_FinalStock)
		Get
			Return Me.GetTable(Of V_FinalStock)
		End Get
	End Property
	
	Public ReadOnly Property V_FinalOutStks() As System.Data.Linq.Table(Of V_FinalOutStk)
		Get
			Return Me.GetTable(Of V_FinalOutStk)
		End Get
	End Property
	
	Public ReadOnly Property V_ArvStks() As System.Data.Linq.Table(Of V_ArvStk)
		Get
			Return Me.GetTable(Of V_ArvStk)
		End Get
	End Property
	
	Public ReadOnly Property V_BuyStks() As System.Data.Linq.Table(Of V_BuyStk)
		Get
			Return Me.GetTable(Of V_BuyStk)
		End Get
	End Property
	
	Public ReadOnly Property V_FstExpShipStks() As System.Data.Linq.Table(Of V_FstExpShipStk)
		Get
			Return Me.GetTable(Of V_FstExpShipStk)
		End Get
	End Property
	
	Public ReadOnly Property V_PrdStks() As System.Data.Linq.Table(Of V_PrdStk)
		Get
			Return Me.GetTable(Of V_PrdStk)
		End Get
	End Property
	
	Public ReadOnly Property headImgs() As System.Data.Linq.Table(Of headImg)
		Get
			Return Me.GetTable(Of headImg)
		End Get
	End Property
	
	Public ReadOnly Property waterImgs() As System.Data.Linq.Table(Of waterImg)
		Get
			Return Me.GetTable(Of waterImg)
		End Get
	End Property
	
	Public ReadOnly Property V_FinalToStks() As System.Data.Linq.Table(Of V_FinalToStk)
		Get
			Return Me.GetTable(Of V_FinalToStk)
		End Get
	End Property
	
	Public ReadOnly Property V_InPeelers() As System.Data.Linq.Table(Of V_InPeeler)
		Get
			Return Me.GetTable(Of V_InPeeler)
		End Get
	End Property
	
	Public ReadOnly Property V_ClientArLocs() As System.Data.Linq.Table(Of V_ClientArLoc)
		Get
			Return Me.GetTable(Of V_ClientArLoc)
		End Get
	End Property
	
	Public ReadOnly Property clientArs() As System.Data.Linq.Table(Of clientAr)
		Get
			Return Me.GetTable(Of clientAr)
		End Get
	End Property
	
	Public ReadOnly Property V_ArivalPrdStores() As System.Data.Linq.Table(Of V_ArivalPrdStore)
		Get
			Return Me.GetTable(Of V_ArivalPrdStore)
		End Get
	End Property
	
	Public ReadOnly Property V_PrdExps() As System.Data.Linq.Table(Of V_PrdExp)
		Get
			Return Me.GetTable(Of V_PrdExp)
		End Get
	End Property
	
	Public ReadOnly Property V_PrdSals() As System.Data.Linq.Table(Of V_PrdSal)
		Get
			Return Me.GetTable(Of V_PrdSal)
		End Get
	End Property
	
	Public ReadOnly Property V_StkGoods() As System.Data.Linq.Table(Of V_StkGood)
		Get
			Return Me.GetTable(Of V_StkGood)
		End Get
	End Property
	
	Public ReadOnly Property V_ClientLocs() As System.Data.Linq.Table(Of V_ClientLoc)
		Get
			Return Me.GetTable(Of V_ClientLoc)
		End Get
	End Property
	
	Public ReadOnly Property V_cropUnits() As System.Data.Linq.Table(Of V_cropUnit)
		Get
			Return Me.GetTable(Of V_cropUnit)
		End Get
	End Property
	
	Public ReadOnly Property V_prdUnits() As System.Data.Linq.Table(Of V_prdUnit)
		Get
			Return Me.GetTable(Of V_prdUnit)
		End Get
	End Property
	
	Public ReadOnly Property V_ExpDShps() As System.Data.Linq.Table(Of V_ExpDShp)
		Get
			Return Me.GetTable(Of V_ExpDShp)
		End Get
	End Property
	
	Public ReadOnly Property V_ClntCrpArvs() As System.Data.Linq.Table(Of V_ClntCrpArv)
		Get
			Return Me.GetTable(Of V_ClntCrpArv)
		End Get
	End Property
	
	Public ReadOnly Property clientCrps() As System.Data.Linq.Table(Of clientCrp)
		Get
			Return Me.GetTable(Of clientCrp)
		End Get
	End Property
	
	Public ReadOnly Property processBuys() As System.Data.Linq.Table(Of processBuy)
		Get
			Return Me.GetTable(Of processBuy)
		End Get
	End Property
	
	Public ReadOnly Property processArvs() As System.Data.Linq.Table(Of processArv)
		Get
			Return Me.GetTable(Of processArv)
		End Get
	End Property
	
	Public ReadOnly Property processRcvs() As System.Data.Linq.Table(Of processRcv)
		Get
			Return Me.GetTable(Of processRcv)
		End Get
	End Property
	
	Public ReadOnly Property processExps() As System.Data.Linq.Table(Of processExp)
		Get
			Return Me.GetTable(Of processExp)
		End Get
	End Property
	
	Public ReadOnly Property V_ExpShps() As System.Data.Linq.Table(Of V_ExpShp)
		Get
			Return Me.GetTable(Of V_ExpShp)
		End Get
	End Property
	
	Public ReadOnly Property V_ExpShpPlrs() As System.Data.Linq.Table(Of V_ExpShpPlr)
		Get
			Return Me.GetTable(Of V_ExpShpPlr)
		End Get
	End Property
	
	Public ReadOnly Property buys() As System.Data.Linq.Table(Of buy)
		Get
			Return Me.GetTable(Of buy)
		End Get
	End Property
	
	Public ReadOnly Property buyDetails() As System.Data.Linq.Table(Of buyDetail)
		Get
			Return Me.GetTable(Of buyDetail)
		End Get
	End Property
	
	Public ReadOnly Property V_buys() As System.Data.Linq.Table(Of V_buy)
		Get
			Return Me.GetTable(Of V_buy)
		End Get
	End Property
	
	Public ReadOnly Property V_buyDetails() As System.Data.Linq.Table(Of V_buyDetail)
		Get
			Return Me.GetTable(Of V_buyDetail)
		End Get
	End Property
	
	Public ReadOnly Property shipments() As System.Data.Linq.Table(Of shipment)
		Get
			Return Me.GetTable(Of shipment)
		End Get
	End Property
	
	Public ReadOnly Property V_Ships() As System.Data.Linq.Table(Of V_Ship)
		Get
			Return Me.GetTable(Of V_Ship)
		End Get
	End Property
	
	Public ReadOnly Property arrives() As System.Data.Linq.Table(Of arrive)
		Get
			Return Me.GetTable(Of arrive)
		End Get
	End Property
	
	Public ReadOnly Property V_Arrives() As System.Data.Linq.Table(Of V_Arrive)
		Get
			Return Me.GetTable(Of V_Arrive)
		End Get
	End Property
	
	Public ReadOnly Property aStoreReqs() As System.Data.Linq.Table(Of aStoreReq)
		Get
			Return Me.GetTable(Of aStoreReq)
		End Get
	End Property
	
	Public ReadOnly Property aStoreDets() As System.Data.Linq.Table(Of aStoreDet)
		Get
			Return Me.GetTable(Of aStoreDet)
		End Get
	End Property
	
	Public ReadOnly Property V_aStoreReqs() As System.Data.Linq.Table(Of V_aStoreReq)
		Get
			Return Me.GetTable(Of V_aStoreReq)
		End Get
	End Property
	
	Public ReadOnly Property V_ArvStrs() As System.Data.Linq.Table(Of V_ArvStr)
		Get
			Return Me.GetTable(Of V_ArvStr)
		End Get
	End Property
	
	Public ReadOnly Property outPrds() As System.Data.Linq.Table(Of outPrd)
		Get
			Return Me.GetTable(Of outPrd)
		End Get
	End Property
	
	Public ReadOnly Property outPrdDets() As System.Data.Linq.Table(Of outPrdDet)
		Get
			Return Me.GetTable(Of outPrdDet)
		End Get
	End Property
	
	Public ReadOnly Property V_OutPrds() As System.Data.Linq.Table(Of V_OutPrd)
		Get
			Return Me.GetTable(Of V_OutPrd)
		End Get
	End Property
	
	Public ReadOnly Property toPrds() As System.Data.Linq.Table(Of toPrd)
		Get
			Return Me.GetTable(Of toPrd)
		End Get
	End Property
	
	Public ReadOnly Property toPrdDets() As System.Data.Linq.Table(Of toPrdDet)
		Get
			Return Me.GetTable(Of toPrdDet)
		End Get
	End Property
	
	Public ReadOnly Property V_toPrdDets() As System.Data.Linq.Table(Of V_toPrdDet)
		Get
			Return Me.GetTable(Of V_toPrdDet)
		End Get
	End Property
	
	Public ReadOnly Property saleDets() As System.Data.Linq.Table(Of saleDet)
		Get
			Return Me.GetTable(Of saleDet)
		End Get
	End Property
	
	Public ReadOnly Property receives() As System.Data.Linq.Table(Of receive)
		Get
			Return Me.GetTable(Of receive)
		End Get
	End Property
	
	Public ReadOnly Property receiveDets() As System.Data.Linq.Table(Of receiveDet)
		Get
			Return Me.GetTable(Of receiveDet)
		End Get
	End Property
	
	Public ReadOnly Property V_Receives() As System.Data.Linq.Table(Of V_Receive)
		Get
			Return Me.GetTable(Of V_Receive)
		End Get
	End Property
	
	Public ReadOnly Property V_RecvDets() As System.Data.Linq.Table(Of V_RecvDet)
		Get
			Return Me.GetTable(Of V_RecvDet)
		End Get
	End Property
	
	Public ReadOnly Property expShips() As System.Data.Linq.Table(Of expShip)
		Get
			Return Me.GetTable(Of expShip)
		End Get
	End Property
	
	Public ReadOnly Property V_expShips() As System.Data.Linq.Table(Of V_expShip)
		Get
			Return Me.GetTable(Of V_expShip)
		End Get
	End Property
	
	Public ReadOnly Property receiveClnts() As System.Data.Linq.Table(Of receiveClnt)
		Get
			Return Me.GetTable(Of receiveClnt)
		End Get
	End Property
	
	Public ReadOnly Property recvClntDets() As System.Data.Linq.Table(Of recvClntDet)
		Get
			Return Me.GetTable(Of recvClntDet)
		End Get
	End Property
	
	Public ReadOnly Property V_RecvClnts() As System.Data.Linq.Table(Of V_RecvClnt)
		Get
			Return Me.GetTable(Of V_RecvClnt)
		End Get
	End Property
	
	Public ReadOnly Property V_RecvClntDets() As System.Data.Linq.Table(Of V_RecvClntDet)
		Get
			Return Me.GetTable(Of V_RecvClntDet)
		End Get
	End Property
	
	Public ReadOnly Property arriveExps() As System.Data.Linq.Table(Of arriveExp)
		Get
			Return Me.GetTable(Of arriveExp)
		End Get
	End Property
	
	Public ReadOnly Property V_arriveExps() As System.Data.Linq.Table(Of V_arriveExp)
		Get
			Return Me.GetTable(Of V_arriveExp)
		End Get
	End Property
	
	Public ReadOnly Property expStocks() As System.Data.Linq.Table(Of expStock)
		Get
			Return Me.GetTable(Of expStock)
		End Get
	End Property
	
	Public ReadOnly Property expStockDets() As System.Data.Linq.Table(Of expStockDet)
		Get
			Return Me.GetTable(Of expStockDet)
		End Get
	End Property
	
	Public ReadOnly Property V_expStocks() As System.Data.Linq.Table(Of V_expStock)
		Get
			Return Me.GetTable(Of V_expStock)
		End Get
	End Property
	
	Public ReadOnly Property V_ExpStkDets() As System.Data.Linq.Table(Of V_ExpStkDet)
		Get
			Return Me.GetTable(Of V_ExpStkDet)
		End Get
	End Property
	
	Public ReadOnly Property shipDetails() As System.Data.Linq.Table(Of shipDetail)
		Get
			Return Me.GetTable(Of shipDetail)
		End Get
	End Property
	
	Public ReadOnly Property V_shipDetails() As System.Data.Linq.Table(Of V_shipDetail)
		Get
			Return Me.GetTable(Of V_shipDetail)
		End Get
	End Property
	
	Public ReadOnly Property arriveDetails() As System.Data.Linq.Table(Of arriveDetail)
		Get
			Return Me.GetTable(Of arriveDetail)
		End Get
	End Property
	
	Public ReadOnly Property V_arriveDets() As System.Data.Linq.Table(Of V_arriveDet)
		Get
			Return Me.GetTable(Of V_arriveDet)
		End Get
	End Property
	
	Public ReadOnly Property V_expShipDets() As System.Data.Linq.Table(Of V_expShipDet)
		Get
			Return Me.GetTable(Of V_expShipDet)
		End Get
	End Property
	
	Public ReadOnly Property expShipDets() As System.Data.Linq.Table(Of expShipDet)
		Get
			Return Me.GetTable(Of expShipDet)
		End Get
	End Property
	
	Public ReadOnly Property arriveExpDets() As System.Data.Linq.Table(Of arriveExpDet)
		Get
			Return Me.GetTable(Of arriveExpDet)
		End Get
	End Property
	
	Public ReadOnly Property V_ArvExpDets() As System.Data.Linq.Table(Of V_ArvExpDet)
		Get
			Return Me.GetTable(Of V_ArvExpDet)
		End Get
	End Property
	
	Public ReadOnly Property sales() As System.Data.Linq.Table(Of sale)
		Get
			Return Me.GetTable(Of sale)
		End Get
	End Property
	
	Public ReadOnly Property V_Sales() As System.Data.Linq.Table(Of V_Sale)
		Get
			Return Me.GetTable(Of V_Sale)
		End Get
	End Property
	
	Public ReadOnly Property V_SaleDets() As System.Data.Linq.Table(Of V_SaleDet)
		Get
			Return Me.GetTable(Of V_SaleDet)
		End Get
	End Property
	
	Public ReadOnly Property goodShps() As System.Data.Linq.Table(Of goodShp)
		Get
			Return Me.GetTable(Of goodShp)
		End Get
	End Property
	
	Public ReadOnly Property V_goodShps() As System.Data.Linq.Table(Of V_goodShp)
		Get
			Return Me.GetTable(Of V_goodShp)
		End Get
	End Property
	
	Public ReadOnly Property goodShpDets() As System.Data.Linq.Table(Of goodShpDet)
		Get
			Return Me.GetTable(Of goodShpDet)
		End Get
	End Property
	
	Public ReadOnly Property V_gdShps() As System.Data.Linq.Table(Of V_gdShp)
		Get
			Return Me.GetTable(Of V_gdShp)
		End Get
	End Property
	
	Public ReadOnly Property V_ToPrds() As System.Data.Linq.Table(Of V_ToPrd)
		Get
			Return Me.GetTable(Of V_ToPrd)
		End Get
	End Property
	
	Public ReadOnly Property V_OutPrdDets() As System.Data.Linq.Table(Of V_OutPrdDet)
		Get
			Return Me.GetTable(Of V_OutPrdDet)
		End Get
	End Property
	
	Public ReadOnly Property strTypes() As System.Data.Linq.Table(Of strType)
		Get
			Return Me.GetTable(Of strType)
		End Get
	End Property
	
	Public ReadOnly Property users() As System.Data.Linq.Table(Of user)
		Get
			Return Me.GetTable(Of user)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ExportTotal")>  _
	Public Function ExportTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal exStkDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal exStkDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkExpLok As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkExpStore As System.Nullable(Of Integer)) As ISingleResult(Of ExportTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), exStkDate, exStkDate2, trkExpLok, trkExpStore)
		Return CType(result.ReturnValue,ISingleResult(Of ExportTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdArv")>  _
	Public Function PrdArv(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAPrdStr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of PrdArvResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, trkArival, trkAPrdStr, trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of PrdArvResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdPeeler")>  _
	Public Function PrdPeeler(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkToPrd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer)) As ISingleResult(Of PrdPeelerResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, trkToPrd, trkProd, trkClntCrp)
		Return CType(result.ReturnValue,ISingleResult(Of PrdPeelerResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdClntRcvPlr")>  _
	Public Function PrdClntRcvPlr(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkToPrd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer)) As ISingleResult(Of PrdClntRcvPlrResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, trkToPrd, trkArival, trkPeeler)
		Return CType(result.ReturnValue,ISingleResult(Of PrdClntRcvPlrResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ProceRecvClnt")>  _
	Public Function ProceRecvClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double)) As ISingleResult(Of ProceRecvClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, trkArival, trkPeeler, trkProd, trkClntCrp, tOne, tTwo)
		Return CType(result.ReturnValue,ISingleResult(Of ProceRecvClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CrpBuy")>  _
	Public Function CrpBuy(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal buyDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBuyLoc As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBStore As System.Nullable(Of Integer)) As ISingleResult(Of CrpBuyResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), buyDate, trkCrop, trkBuyLoc, trkBStore)
		Return CType(result.ReturnValue,ISingleResult(Of CrpBuyResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CrpStation")>  _
	Public Function CrpStation(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal arDate As System.Nullable(Of Date)) As ISingleResult(Of CrpStationResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkArival, trkCrop, arDate)
		Return CType(result.ReturnValue,ISingleResult(Of CrpStationResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ProduceRecv")>  _
	Public Function ProduceRecv(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double)) As ISingleResult(Of ProduceRecvResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, trkArival, trkPeeler, trkProd, tOne, tTwo)
		Return CType(result.ReturnValue,ISingleResult(Of ProduceRecvResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ProduceSale")>  _
	Public Function ProduceSale(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of ProduceSaleResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, trkArival, trkPeeler, trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of ProduceSaleResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ProduceExp")>  _
	Public Function ProduceExp(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double)) As ISingleResult(Of ProduceExpResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, trkArival, trkPeeler, trkProd, tOne, tTwo)
		Return CType(result.ReturnValue,ISingleResult(Of ProduceExpResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdClntPlr")>  _
	Public Function PrdClntPlr(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkToPrd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of PrdClntPlrResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, trkToPrd, trkArival, trkPeeler, trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of PrdClntPlrResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ProduceRecvClnt")>  _
	Public Function ProduceRecvClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkToPrd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double)) As ISingleResult(Of ProduceRecvClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, trkArival, trkPeeler, trkToPrd, trkProd, tOne, tTwo)
		Return CType(result.ReturnValue,ISingleResult(Of ProduceRecvClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdClntStr")>  _
	Public Function PrdClntStr(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkToPrd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAPrdStr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of PrdClntStrResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, trkToPrd, trkArival, trkAPrdStr, trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of PrdClntStrResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdClntRecv")>  _
	Public Function PrdClntRecv(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkToPrd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAPrdStr As System.Nullable(Of Integer)) As ISingleResult(Of PrdClntRecvResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, trkToPrd, trkArival, trkAPrdStr)
		Return CType(result.ReturnValue,ISingleResult(Of PrdClntRecvResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdStation")>  _
	Public Function PrdStation(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkExpLoc As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal arExpDate As System.Nullable(Of Date)) As ISingleResult(Of PrdStationResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkExpLoc, trkProd, arExpDate)
		Return CType(result.ReturnValue,ISingleResult(Of PrdStationResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdClntTotal")>  _
	Public Function PrdClntTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAPrdStr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of PrdClntTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, trkArival, trkAPrdStr, trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of PrdClntTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PrdGood")>  _
	Public Function PrdGood(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal arExpDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkExpLoc As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of PrdGoodResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), arExpDate, trkExpLoc, trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of PrdGoodResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CrpPeeler")>  _
	Public Function CrpPeeler(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal oPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isLocal As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer)) As ISingleResult(Of CrpPeelerResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), oPrdDate, trkArival, trkPeeler, trkCrop, isLocal, trkClntCrp)
		Return CType(result.ReturnValue,ISingleResult(Of CrpPeelerResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.BuyTotal")>  _
	Public Function BuyTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal buyDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal buyDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBuyLoc As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBStore As System.Nullable(Of Integer)) As ISingleResult(Of BuyTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), buyDate, buyDate2, trkBuyLoc, trkBStore)
		Return CType(result.ReturnValue,ISingleResult(Of BuyTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ArrivalTotal")>  _
	Public Function ArrivalTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SArDate", DbType:="Date")> ByVal sArDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SArDate2", DbType:="Date")> ByVal sArDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBuyLoc As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBStore As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isLocal As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer)) As ISingleResult(Of ArrivalTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), sArDate, sArDate2, trkBuyLoc, trkBStore, isLocal, trkClntCrp)
		Return CType(result.ReturnValue,ISingleResult(Of ArrivalTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ArvlTotalNoClnt")>  _
	Public Function ArvlTotalNoClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SArDate", DbType:="Date")> ByVal sArDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SArDate2", DbType:="Date")> ByVal sArDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBuyLoc As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkBStore As System.Nullable(Of Integer)) As ISingleResult(Of ArvlTotalNoClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), sArDate, sArDate2, trkBuyLoc, trkBStore)
		Return CType(result.ReturnValue,ISingleResult(Of ArvlTotalNoClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PeelerClntTotal")>  _
	Public Function PeelerClntTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer)) As ISingleResult(Of PeelerClntTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, toPrdDate2, trkArival, trkPeeler, trkClntCrp)
		Return CType(result.ReturnValue,ISingleResult(Of PeelerClntTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.RecvTotalClnt")>  _
	Public Function RecvTotalClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer)) As ISingleResult(Of RecvTotalClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, recvDate2, trkArival, trkPeeler, trkProd, tOne, tTwo, trkClntCrp)
		Return CType(result.ReturnValue,ISingleResult(Of RecvTotalClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PeelerTotal")>  _
	Public Function PeelerTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer)) As ISingleResult(Of PeelerTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, toPrdDate2, trkArival, trkPeeler)
		Return CType(result.ReturnValue,ISingleResult(Of PeelerTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.RecvTotal")>  _
	Public Function RecvTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isLocal As System.Nullable(Of Boolean)) As ISingleResult(Of RecvTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, recvDate2, trkArival, trkPeeler, trkProd, tOne, tTwo, isLocal)
		Return CType(result.ReturnValue,ISingleResult(Of RecvTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ExpTotal")>  _
	Public Function ExpTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal expShipDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal expShipDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double)) As ISingleResult(Of ExpTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), expShipDate, expShipDate2, trkArival, trkPeeler, trkProd, tOne, tTwo)
		Return CType(result.ReturnValue,ISingleResult(Of ExpTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PlrNoClntTotal")>  _
	Public Function PlrNoClntTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer)) As ISingleResult(Of PlrNoClntTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, toPrdDate2, trkArival, trkPeeler)
		Return CType(result.ReturnValue,ISingleResult(Of PlrNoClntTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ArrivalPrdTotal")>  _
	Public Function ArrivalPrdTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAPrdStr As System.Nullable(Of Integer)) As ISingleResult(Of ArrivalPrdTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), recvDate, recvDate2, trkArival, trkAPrdStr)
		Return CType(result.ReturnValue,ISingleResult(Of ArrivalPrdTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ArvlPrdTotalClnt")>  _
	Public Function ArvlPrdTotalClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAPrdStr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate2 As System.Nullable(Of Date)) As ISingleResult(Of ArvlPrdTotalClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkArival, trkAPrdStr, trkClntCrp, recvDate, recvDate2)
		Return CType(result.ReturnValue,ISingleResult(Of ArvlPrdTotalClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.ArvlPrdAllClnt")>  _
	Public Function ArvlPrdAllClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAPrdStr As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal recvDate2 As System.Nullable(Of Date)) As ISingleResult(Of ArvlPrdAllClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkArival, trkAPrdStr, recvDate, recvDate2)
		Return CType(result.ReturnValue,ISingleResult(Of ArvlPrdAllClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindCrpBuy")>  _
	Public Function FindCrpBuy(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer)) As ISingleResult(Of FindCrpBuyResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkCrop)
		Return CType(result.ReturnValue,ISingleResult(Of FindCrpBuyResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.CrpArv")>  _
	Public Function CrpArv(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SArDate", DbType:="Date")> ByVal sArDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkAStore As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isLocal As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer)) As ISingleResult(Of CrpArvResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), sArDate, trkArival, trkAStore, trkCrop, isLocal, trkClntCrp)
		Return CType(result.ReturnValue,ISingleResult(Of CrpArvResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindCrpArv")>  _
	Public Function FindCrpArv(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer)) As ISingleResult(Of FindCrpArvResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkCrop)
		Return CType(result.ReturnValue,ISingleResult(Of FindCrpArvResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindCrpClnt")>  _
	Public Function FindCrpClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer)) As ISingleResult(Of FindCrpClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkCrop)
		Return CType(result.ReturnValue,ISingleResult(Of FindCrpClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PlrFindCrp")>  _
	Public Function PlrFindCrp(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer)) As ISingleResult(Of PlrFindCrpResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkCrop)
		Return CType(result.ReturnValue,ISingleResult(Of PlrFindCrpResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PlrFindCrpClnt")>  _
	Public Function PlrFindCrpClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkCrop As System.Nullable(Of Integer)) As ISingleResult(Of PlrFindCrpClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkCrop)
		Return CType(result.ReturnValue,ISingleResult(Of PlrFindCrpClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindPrdArv")>  _
	Public Function FindPrdArv(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of FindPrdArvResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of FindPrdArvResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindPrdArvClnt")>  _
	Public Function FindPrdArvClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of FindPrdArvClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of FindPrdArvClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PeelerCrpTotal")>  _
	Public Function PeelerCrpTotal(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isLocal As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkClntCrp As System.Nullable(Of Integer)) As ISingleResult(Of PeelerCrpTotalResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, toPrdDate2, trkArival, trkPeeler, isLocal, trkClntCrp)
		Return CType(result.ReturnValue,ISingleResult(Of PeelerCrpTotalResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.PeelerCrpNoClnt")>  _
	Public Function PeelerCrpNoClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Date")> ByVal toPrdDate2 As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer)) As ISingleResult(Of PeelerCrpNoClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), toPrdDate, toPrdDate2, trkArival, trkPeeler)
		Return CType(result.ReturnValue,ISingleResult(Of PeelerCrpNoClntResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindRecv")>  _
	Public Function FindRecv(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal isLocal As System.Nullable(Of Boolean)) As ISingleResult(Of FindRecvResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkArival, trkPeeler, trkProd, tOne, tTwo, isLocal)
		Return CType(result.ReturnValue,ISingleResult(Of FindRecvResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindExp")>  _
	Public Function FindExp(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkArival As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkPeeler As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TOne", DbType:="Float")> ByVal tOne As System.Nullable(Of Double), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TTwo", DbType:="Float")> ByVal tTwo As System.Nullable(Of Double)) As ISingleResult(Of FindExpResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkArival, trkPeeler, trkProd, tOne, tTwo)
		Return CType(result.ReturnValue,ISingleResult(Of FindExpResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindPrdPlr")>  _
	Public Function FindPrdPlr(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of FindPrdPlrResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of FindPrdPlrResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.FindPrdPlrClnt")>  _
	Public Function FindPrdPlrClnt(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal trkProd As System.Nullable(Of Integer)) As ISingleResult(Of FindPrdPlrClntResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), trkProd)
		Return CType(result.ReturnValue,ISingleResult(Of FindPrdPlrClntResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.buyerLocation")>  _
Partial Public Class buyerLocation
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkBuyLoc As Decimal
	
	Private _buyLoc As String
	
	Private _delL As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkBuyLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyLocChanged()
    End Sub
    Partial Private Sub OnbuyLocChanging(value As String)
    End Sub
    Partial Private Sub OnbuyLocChanged()
    End Sub
    Partial Private Sub OndelLChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me.OntrkBuyLocChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyLoc = value
				Me.SendPropertyChanged("trkBuyLoc")
				Me.OntrkBuyLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me.OnbuyLocChanging(value)
				Me.SendPropertyChanging
				Me._buyLoc = value
				Me.SendPropertyChanged("buyLoc")
				Me.OnbuyLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delL", DbType:="Bit")>  _
	Public Property delL() As System.Nullable(Of Boolean)
		Get
			Return Me._delL
		End Get
		Set
			If (Me._delL.Equals(value) = false) Then
				Me.OndelLChanging(value)
				Me.SendPropertyChanging
				Me._delL = value
				Me.SendPropertyChanged("delL")
				Me.OndelLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.buyerStore")>  _
Partial Public Class buyerStore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkBStore As Decimal
	
	Private _bStore As String
	
	Private _trkBuyLoc As Decimal
	
	Private _delSL As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkBStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBStoreChanged()
    End Sub
    Partial Private Sub OnbStoreChanging(value As String)
    End Sub
    Partial Private Sub OnbStoreChanged()
    End Sub
    Partial Private Sub OntrkBuyLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyLocChanged()
    End Sub
    Partial Private Sub OndelSLChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelSLChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me.OntrkBStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkBStore = value
				Me.SendPropertyChanged("trkBStore")
				Me.OntrkBStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me.OnbStoreChanging(value)
				Me.SendPropertyChanging
				Me._bStore = value
				Me.SendPropertyChanged("bStore")
				Me.OnbStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me.OntrkBuyLocChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyLoc = value
				Me.SendPropertyChanged("trkBuyLoc")
				Me.OntrkBuyLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSL", DbType:="Bit")>  _
	Public Property delSL() As System.Nullable(Of Boolean)
		Get
			Return Me._delSL
		End Get
		Set
			If (Me._delSL.Equals(value) = false) Then
				Me.OndelSLChanging(value)
				Me.SendPropertyChanging
				Me._delSL = value
				Me.SendPropertyChanged("delSL")
				Me.OndelSLChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.client")>  _
Partial Public Class client
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkClient As Decimal
	
	Private _clientName As String
	
	Private _trkBuyLoc As Decimal
	
	Private _clientTel As System.Nullable(Of Decimal)
	
	Private _clientInfo As String
	
	Private _delClient As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkClientChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkClientChanged()
    End Sub
    Partial Private Sub OnclientNameChanging(value As String)
    End Sub
    Partial Private Sub OnclientNameChanged()
    End Sub
    Partial Private Sub OntrkBuyLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyLocChanged()
    End Sub
    Partial Private Sub OnclientTelChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnclientTelChanged()
    End Sub
    Partial Private Sub OnclientInfoChanging(value As String)
    End Sub
    Partial Private Sub OnclientInfoChanged()
    End Sub
    Partial Private Sub OndelClientChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelClientChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClient", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkClient() As Decimal
		Get
			Return Me._trkClient
		End Get
		Set
			If ((Me._trkClient = value)  _
						= false) Then
				Me.OntrkClientChanging(value)
				Me.SendPropertyChanging
				Me._trkClient = value
				Me.SendPropertyChanged("trkClient")
				Me.OntrkClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clientName() As String
		Get
			Return Me._clientName
		End Get
		Set
			If (String.Equals(Me._clientName, value) = false) Then
				Me.OnclientNameChanging(value)
				Me.SendPropertyChanging
				Me._clientName = value
				Me.SendPropertyChanged("clientName")
				Me.OnclientNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me.OntrkBuyLocChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyLoc = value
				Me.SendPropertyChanged("trkBuyLoc")
				Me.OntrkBuyLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientTel", DbType:="Decimal(18,0)")>  _
	Public Property clientTel() As System.Nullable(Of Decimal)
		Get
			Return Me._clientTel
		End Get
		Set
			If (Me._clientTel.Equals(value) = false) Then
				Me.OnclientTelChanging(value)
				Me.SendPropertyChanging
				Me._clientTel = value
				Me.SendPropertyChanged("clientTel")
				Me.OnclientTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientInfo", DbType:="NVarChar(MAX)")>  _
	Public Property clientInfo() As String
		Get
			Return Me._clientInfo
		End Get
		Set
			If (String.Equals(Me._clientInfo, value) = false) Then
				Me.OnclientInfoChanging(value)
				Me.SendPropertyChanging
				Me._clientInfo = value
				Me.SendPropertyChanged("clientInfo")
				Me.OnclientInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delClient", DbType:="Bit")>  _
	Public Property delClient() As System.Nullable(Of Boolean)
		Get
			Return Me._delClient
		End Get
		Set
			If (Me._delClient.Equals(value) = false) Then
				Me.OndelClientChanging(value)
				Me.SendPropertyChanging
				Me._delClient = value
				Me.SendPropertyChanged("delClient")
				Me.OndelClientChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.crop")>  _
Partial Public Class crop
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _delCrop As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OncropNameChanging(value As String)
    End Sub
    Partial Private Sub OncropNameChanged()
    End Sub
    Partial Private Sub OndelCropChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelCropChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me.OncropNameChanging(value)
				Me.SendPropertyChanging
				Me._cropName = value
				Me.SendPropertyChanged("cropName")
				Me.OncropNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delCrop", DbType:="Bit")>  _
	Public Property delCrop() As System.Nullable(Of Boolean)
		Get
			Return Me._delCrop
		End Get
		Set
			If (Me._delCrop.Equals(value) = false) Then
				Me.OndelCropChanging(value)
				Me.SendPropertyChanging
				Me._delCrop = value
				Me.SendPropertyChanged("delCrop")
				Me.OndelCropChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.unit")>  _
Partial Public Class unit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _delUn As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnunitNameChanging(value As String)
    End Sub
    Partial Private Sub OnunitNameChanged()
    End Sub
    Partial Private Sub OndelUnChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelUnChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me.OnunitNameChanging(value)
				Me.SendPropertyChanging
				Me._unitName = value
				Me.SendPropertyChanged("unitName")
				Me.OnunitNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delUn", DbType:="Bit")>  _
	Public Property delUn() As System.Nullable(Of Boolean)
		Get
			Return Me._delUn
		End Get
		Set
			If (Me._delUn.Equals(value) = false) Then
				Me.OndelUnChanging(value)
				Me.SendPropertyChanging
				Me._delUn = value
				Me.SendPropertyChanged("delUn")
				Me.OndelUnChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_BuyerStore")>  _
Partial Public Class V_BuyerStore
	
	Private _trkBStore As Decimal
	
	Private _bStore As String
	
	Private _trkBuyLoc As Decimal
	
	Private _buyLoc As String
	
	Private _theLst As String
	
	Private _delSL As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me._bStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_theLst", DbType:="NVarChar(103) NOT NULL", CanBeNull:=false)>  _
	Public Property theLst() As String
		Get
			Return Me._theLst
		End Get
		Set
			If (String.Equals(Me._theLst, value) = false) Then
				Me._theLst = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSL", DbType:="Bit")>  _
	Public Property delSL() As System.Nullable(Of Boolean)
		Get
			Return Me._delSL
		End Get
		Set
			If (Me._delSL.Equals(value) = false) Then
				Me._delSL = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.car")>  _
Partial Public Class car
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkCar As Decimal
	
	Private _carNo As String
	
	Private _delC As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkCarChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCarChanged()
    End Sub
    Partial Private Sub OncarNoChanging(value As String)
    End Sub
    Partial Private Sub OncarNoChanged()
    End Sub
    Partial Private Sub OndelCChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelCChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCar", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkCar() As Decimal
		Get
			Return Me._trkCar
		End Get
		Set
			If ((Me._trkCar = value)  _
						= false) Then
				Me.OntrkCarChanging(value)
				Me.SendPropertyChanging
				Me._trkCar = value
				Me.SendPropertyChanged("trkCar")
				Me.OntrkCarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_carNo", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property carNo() As String
		Get
			Return Me._carNo
		End Get
		Set
			If (String.Equals(Me._carNo, value) = false) Then
				Me.OncarNoChanging(value)
				Me.SendPropertyChanging
				Me._carNo = value
				Me.SendPropertyChanged("carNo")
				Me.OncarNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delC", DbType:="Bit")>  _
	Public Property delC() As System.Nullable(Of Boolean)
		Get
			Return Me._delC
		End Get
		Set
			If (Me._delC.Equals(value) = false) Then
				Me.OndelCChanging(value)
				Me.SendPropertyChanging
				Me._delC = value
				Me.SendPropertyChanged("delC")
				Me.OndelCChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.driver")>  _
Partial Public Class driver
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkDriver As Decimal
	
	Private _driverName As String
	
	Private _driverTel As System.Nullable(Of Decimal)
	
	Private _driverInfo As String
	
	Private _delD As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkDriverChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkDriverChanged()
    End Sub
    Partial Private Sub OndriverNameChanging(value As String)
    End Sub
    Partial Private Sub OndriverNameChanged()
    End Sub
    Partial Private Sub OndriverTelChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OndriverTelChanged()
    End Sub
    Partial Private Sub OndriverInfoChanging(value As String)
    End Sub
    Partial Private Sub OndriverInfoChanged()
    End Sub
    Partial Private Sub OndelDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkDriver", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkDriver() As Decimal
		Get
			Return Me._trkDriver
		End Get
		Set
			If ((Me._trkDriver = value)  _
						= false) Then
				Me.OntrkDriverChanging(value)
				Me.SendPropertyChanging
				Me._trkDriver = value
				Me.SendPropertyChanged("trkDriver")
				Me.OntrkDriverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property driverName() As String
		Get
			Return Me._driverName
		End Get
		Set
			If (String.Equals(Me._driverName, value) = false) Then
				Me.OndriverNameChanging(value)
				Me.SendPropertyChanging
				Me._driverName = value
				Me.SendPropertyChanged("driverName")
				Me.OndriverNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverTel", DbType:="Decimal(18,0)")>  _
	Public Property driverTel() As System.Nullable(Of Decimal)
		Get
			Return Me._driverTel
		End Get
		Set
			If (Me._driverTel.Equals(value) = false) Then
				Me.OndriverTelChanging(value)
				Me.SendPropertyChanging
				Me._driverTel = value
				Me.SendPropertyChanged("driverTel")
				Me.OndriverTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverInfo", DbType:="NVarChar(MAX)")>  _
	Public Property driverInfo() As String
		Get
			Return Me._driverInfo
		End Get
		Set
			If (String.Equals(Me._driverInfo, value) = false) Then
				Me.OndriverInfoChanging(value)
				Me.SendPropertyChanging
				Me._driverInfo = value
				Me.SendPropertyChanged("driverInfo")
				Me.OndriverInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delD", DbType:="Bit")>  _
	Public Property delD() As System.Nullable(Of Boolean)
		Get
			Return Me._delD
		End Get
		Set
			If (Me._delD.Equals(value) = false) Then
				Me.OndelDChanging(value)
				Me.SendPropertyChanging
				Me._delD = value
				Me.SendPropertyChanged("delD")
				Me.OndelDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.arivalLoc")>  _
Partial Public Class arivalLoc
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _delAr As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OnarivalNameChanging(value As String)
    End Sub
    Partial Private Sub OnarivalNameChanged()
    End Sub
    Partial Private Sub OndelArChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelArChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me.OnarivalNameChanging(value)
				Me.SendPropertyChanging
				Me._arivalName = value
				Me.SendPropertyChanged("arivalName")
				Me.OnarivalNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAr", DbType:="Bit")>  _
	Public Property delAr() As System.Nullable(Of Boolean)
		Get
			Return Me._delAr
		End Get
		Set
			If (Me._delAr.Equals(value) = false) Then
				Me.OndelArChanging(value)
				Me.SendPropertyChanging
				Me._delAr = value
				Me.SendPropertyChanged("delAr")
				Me.OndelArChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ArivalStore")>  _
Partial Public Class V_ArivalStore
	
	Private _trkAStore As Decimal
	
	Private _AStore As String
	
	Private _trkArival As Decimal
	
	Private _delSa As System.Nullable(Of Boolean)
	
	Private _arivalName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me._trkAStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSa", DbType:="Bit")>  _
	Public Property delSa() As System.Nullable(Of Boolean)
		Get
			Return Me._delSa
		End Get
		Set
			If (Me._delSa.Equals(value) = false) Then
				Me._delSa = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.test")>  _
Partial Public Class test
	
	Private _cropName As String
	
	Private _storeAmount As Decimal
	
	Private _cropPrice As Decimal
	
	Private _trkUnit As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property storeAmount() As Decimal
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropPrice", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property cropPrice() As Decimal
		Get
			Return Me._cropPrice
		End Get
		Set
			If ((Me._cropPrice = value)  _
						= false) Then
				Me._cropPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.product")>  _
Partial Public Class product
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _trkCrop As Decimal
	
	Private _delPrd As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnprodNameChanging(value As String)
    End Sub
    Partial Private Sub OnprodNameChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OndelPrdChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelPrdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me.OnprodNameChanging(value)
				Me.SendPropertyChanging
				Me._prodName = value
				Me.SendPropertyChanged("prodName")
				Me.OnprodNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPrd", DbType:="Bit")>  _
	Public Property delPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delPrd
		End Get
		Set
			If (Me._delPrd.Equals(value) = false) Then
				Me.OndelPrdChanging(value)
				Me.SendPropertyChanging
				Me._delPrd = value
				Me.SendPropertyChanged("delPrd")
				Me.OndelPrdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.peeler")>  _
Partial Public Class peeler
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _trkArival As Decimal
	
	Private _delPe As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OnpeelerNameChanging(value As String)
    End Sub
    Partial Private Sub OnpeelerNameChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OndelPeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelPeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me.OnpeelerNameChanging(value)
				Me.SendPropertyChanging
				Me._peelerName = value
				Me.SendPropertyChanged("peelerName")
				Me.OnpeelerNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPe", DbType:="Bit")>  _
	Public Property delPe() As System.Nullable(Of Boolean)
		Get
			Return Me._delPe
		End Get
		Set
			If (Me._delPe.Equals(value) = false) Then
				Me.OndelPeChanging(value)
				Me.SendPropertyChanging
				Me._delPe = value
				Me.SendPropertyChanged("delPe")
				Me.OndelPeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.peelerStore")>  _
Partial Public Class peelerStore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPStore As Decimal
	
	Private _pStore As String
	
	Private _trkPeeler As Decimal
	
	Private _delSp As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPStoreChanged()
    End Sub
    Partial Private Sub OnpStoreChanging(value As String)
    End Sub
    Partial Private Sub OnpStoreChanged()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OndelSpChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelSpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPStore", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPStore() As Decimal
		Get
			Return Me._trkPStore
		End Get
		Set
			If ((Me._trkPStore = value)  _
						= false) Then
				Me.OntrkPStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkPStore = value
				Me.SendPropertyChanged("trkPStore")
				Me.OntrkPStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property pStore() As String
		Get
			Return Me._pStore
		End Get
		Set
			If (String.Equals(Me._pStore, value) = false) Then
				Me.OnpStoreChanging(value)
				Me.SendPropertyChanging
				Me._pStore = value
				Me.SendPropertyChanged("pStore")
				Me.OnpStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSp", DbType:="Bit NOT NULL")>  _
	Public Property delSp() As Boolean
		Get
			Return Me._delSp
		End Get
		Set
			If ((Me._delSp = value)  _
						= false) Then
				Me.OndelSpChanging(value)
				Me.SendPropertyChanging
				Me._delSp = value
				Me.SendPropertyChanged("delSp")
				Me.OndelSpChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PeelerStore")>  _
Partial Public Class V_PeelerStore
	
	Private _trkPStore As Decimal
	
	Private _pStore As String
	
	Private _trkPeeler As Decimal
	
	Private _delSp As Boolean
	
	Private _peelerName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPStore() As Decimal
		Get
			Return Me._trkPStore
		End Get
		Set
			If ((Me._trkPStore = value)  _
						= false) Then
				Me._trkPStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property pStore() As String
		Get
			Return Me._pStore
		End Get
		Set
			If (String.Equals(Me._pStore, value) = false) Then
				Me._pStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSp", DbType:="Bit NOT NULL")>  _
	Public Property delSp() As Boolean
		Get
			Return Me._delSp
		End Get
		Set
			If ((Me._delSp = value)  _
						= false) Then
				Me._delSp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.prdStore")>  _
Partial Public Class prdStore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPStr As Decimal
	
	Private _PrdStr As String
	
	Private _delPrdStr As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPStrChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPStrChanged()
    End Sub
    Partial Private Sub OnPrdStrChanging(value As String)
    End Sub
    Partial Private Sub OnPrdStrChanged()
    End Sub
    Partial Private Sub OndelPrdStrChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelPrdStrChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPStr", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPStr() As Decimal
		Get
			Return Me._trkPStr
		End Get
		Set
			If ((Me._trkPStr = value)  _
						= false) Then
				Me.OntrkPStrChanging(value)
				Me.SendPropertyChanging
				Me._trkPStr = value
				Me.SendPropertyChanged("trkPStr")
				Me.OntrkPStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrdStr", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property PrdStr() As String
		Get
			Return Me._PrdStr
		End Get
		Set
			If (String.Equals(Me._PrdStr, value) = false) Then
				Me.OnPrdStrChanging(value)
				Me.SendPropertyChanging
				Me._PrdStr = value
				Me.SendPropertyChanged("PrdStr")
				Me.OnPrdStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPrdStr", DbType:="Bit NOT NULL")>  _
	Public Property delPrdStr() As Boolean
		Get
			Return Me._delPrdStr
		End Get
		Set
			If ((Me._delPrdStr = value)  _
						= false) Then
				Me.OndelPrdStrChanging(value)
				Me.SendPropertyChanging
				Me._delPrdStr = value
				Me.SendPropertyChanged("delPrdStr")
				Me.OndelPrdStrChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.arivalPrdStore")>  _
Partial Public Class arivalPrdStore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkAPrdStr As Decimal
	
	Private _APrdStr As String
	
	Private _trkArival As Decimal
	
	Private _delAPrd As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkAPrdStrChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkAPrdStrChanged()
    End Sub
    Partial Private Sub OnAPrdStrChanging(value As String)
    End Sub
    Partial Private Sub OnAPrdStrChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OndelAPrdChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelAPrdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me.OntrkAPrdStrChanging(value)
				Me.SendPropertyChanging
				Me._trkAPrdStr = value
				Me.SendPropertyChanged("trkAPrdStr")
				Me.OntrkAPrdStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me.OnAPrdStrChanging(value)
				Me.SendPropertyChanging
				Me._APrdStr = value
				Me.SendPropertyChanged("APrdStr")
				Me.OnAPrdStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAPrd", DbType:="Bit NOT NULL")>  _
	Public Property delAPrd() As Boolean
		Get
			Return Me._delAPrd
		End Get
		Set
			If ((Me._delAPrd = value)  _
						= false) Then
				Me.OndelAPrdChanging(value)
				Me.SendPropertyChanging
				Me._delAPrd = value
				Me.SendPropertyChanged("delAPrd")
				Me.OndelAPrdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Peeler")>  _
Partial Public Class V_Peeler
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _arivalName As String
	
	Private _delPe As System.Nullable(Of Boolean)
	
	Private _trkArival As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPe", DbType:="Bit")>  _
	Public Property delPe() As System.Nullable(Of Boolean)
		Get
			Return Me._delPe
		End Get
		Set
			If (Me._delPe.Equals(value) = false) Then
				Me._delPe = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Product")>  _
Partial Public Class V_Product
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _cropName As String
	
	Private _delPrd As System.Nullable(Of Boolean)
	
	Private _trkCrop As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPrd", DbType:="Bit")>  _
	Public Property delPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delPrd
		End Get
		Set
			If (Me._delPrd.Equals(value) = false) Then
				Me._delPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.exportLoc")>  _
Partial Public Class exportLoc
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkExpLoc As Decimal
	
	Private _expName As String
	
	Private _delExp As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkExpLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpLocChanged()
    End Sub
    Partial Private Sub OnexpNameChanging(value As String)
    End Sub
    Partial Private Sub OnexpNameChanged()
    End Sub
    Partial Private Sub OndelExpChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelExpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me.OntrkExpLocChanging(value)
				Me.SendPropertyChanging
				Me._trkExpLoc = value
				Me.SendPropertyChanged("trkExpLoc")
				Me.OntrkExpLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me.OnexpNameChanging(value)
				Me.SendPropertyChanging
				Me._expName = value
				Me.SendPropertyChanged("expName")
				Me.OnexpNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExp", DbType:="Bit NOT NULL")>  _
	Public Property delExp() As Boolean
		Get
			Return Me._delExp
		End Get
		Set
			If ((Me._delExp = value)  _
						= false) Then
				Me.OndelExpChanging(value)
				Me.SendPropertyChanging
				Me._delExp = value
				Me.SendPropertyChanged("delExp")
				Me.OndelExpChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.exportStore")>  _
Partial Public Class exportStore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkExpStore As Decimal
	
	Private _expStore As String
	
	Private _trkExpLoc As Decimal
	
	Private _delSExp As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkExpStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpStoreChanged()
    End Sub
    Partial Private Sub OnexpStoreChanging(value As String)
    End Sub
    Partial Private Sub OnexpStoreChanged()
    End Sub
    Partial Private Sub OntrkExpLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpLocChanged()
    End Sub
    Partial Private Sub OndelSExpChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelSExpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStore", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkExpStore() As Decimal
		Get
			Return Me._trkExpStore
		End Get
		Set
			If ((Me._trkExpStore = value)  _
						= false) Then
				Me.OntrkExpStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkExpStore = value
				Me.SendPropertyChanged("trkExpStore")
				Me.OntrkExpStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expStore() As String
		Get
			Return Me._expStore
		End Get
		Set
			If (String.Equals(Me._expStore, value) = false) Then
				Me.OnexpStoreChanging(value)
				Me.SendPropertyChanging
				Me._expStore = value
				Me.SendPropertyChanged("expStore")
				Me.OnexpStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me.OntrkExpLocChanging(value)
				Me.SendPropertyChanging
				Me._trkExpLoc = value
				Me.SendPropertyChanged("trkExpLoc")
				Me.OntrkExpLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSExp", DbType:="Bit NOT NULL")>  _
	Public Property delSExp() As Boolean
		Get
			Return Me._delSExp
		End Get
		Set
			If ((Me._delSExp = value)  _
						= false) Then
				Me.OndelSExpChanging(value)
				Me.SendPropertyChanging
				Me._delSExp = value
				Me.SendPropertyChanged("delSExp")
				Me.OndelSExpChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ExportStore")>  _
Partial Public Class V_ExportStore
	
	Private _trkExpStore As Decimal
	
	Private _expStore As String
	
	Private _trkExpLoc As Decimal
	
	Private _delSExp As Boolean
	
	Private _expName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStore() As Decimal
		Get
			Return Me._trkExpStore
		End Get
		Set
			If ((Me._trkExpStore = value)  _
						= false) Then
				Me._trkExpStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expStore() As String
		Get
			Return Me._expStore
		End Get
		Set
			If (String.Equals(Me._expStore, value) = false) Then
				Me._expStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me._trkExpLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSExp", DbType:="Bit NOT NULL")>  _
	Public Property delSExp() As Boolean
		Get
			Return Me._delSExp
		End Get
		Set
			If ((Me._delSExp = value)  _
						= false) Then
				Me._delSExp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.pay")>  _
Partial Public Class pay
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPay As Decimal
	
	Private _payName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPayChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPayChanged()
    End Sub
    Partial Private Sub OnpayNameChanging(value As String)
    End Sub
    Partial Private Sub OnpayNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPay", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPay() As Decimal
		Get
			Return Me._trkPay
		End Get
		Set
			If ((Me._trkPay = value)  _
						= false) Then
				Me.OntrkPayChanging(value)
				Me.SendPropertyChanging
				Me._trkPay = value
				Me.SendPropertyChanged("trkPay")
				Me.OntrkPayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payName", DbType:="NChar(10)")>  _
	Public Property payName() As String
		Get
			Return Me._payName
		End Get
		Set
			If (String.Equals(Me._payName, value) = false) Then
				Me.OnpayNameChanging(value)
				Me.SendPropertyChanging
				Me._payName = value
				Me.SendPropertyChanged("payName")
				Me.OnpayNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ShipmentDet")>  _
Partial Public Class V_ShipmentDet
	
	Private _trkShipDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As Decimal
	
	Private _trkUnit As String
	
	Private _waight As String
	
	Private _trkDriver As Decimal
	
	Private _trkCar As Decimal
	
	Private _trkShip As Decimal
	
	Private _delSD As System.Nullable(Of Boolean)
	
	Private _unitName As String
	
	Private _driverName As String
	
	Private _carNo As String
	
	Private _cropName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShipDet() As Decimal
		Get
			Return Me._trkShipDet
		End Get
		Set
			If ((Me._trkShipDet = value)  _
						= false) Then
				Me._trkShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property storeAmount() As Decimal
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property trkUnit() As String
		Get
			Return Me._trkUnit
		End Get
		Set
			If (String.Equals(Me._trkUnit, value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_waight", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property waight() As String
		Get
			Return Me._waight
		End Get
		Set
			If (String.Equals(Me._waight, value) = false) Then
				Me._waight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkDriver", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkDriver() As Decimal
		Get
			Return Me._trkDriver
		End Get
		Set
			If ((Me._trkDriver = value)  _
						= false) Then
				Me._trkDriver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCar", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCar() As Decimal
		Get
			Return Me._trkCar
		End Get
		Set
			If ((Me._trkCar = value)  _
						= false) Then
				Me._trkCar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShip() As Decimal
		Get
			Return Me._trkShip
		End Get
		Set
			If ((Me._trkShip = value)  _
						= false) Then
				Me._trkShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSD", DbType:="Bit")>  _
	Public Property delSD() As System.Nullable(Of Boolean)
		Get
			Return Me._delSD
		End Get
		Set
			If (Me._delSD.Equals(value) = false) Then
				Me._delSD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property driverName() As String
		Get
			Return Me._driverName
		End Get
		Set
			If (String.Equals(Me._driverName, value) = false) Then
				Me._driverName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_carNo", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property carNo() As String
		Get
			Return Me._carNo
		End Get
		Set
			If (String.Equals(Me._carNo, value) = false) Then
				Me._carNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepBuyCrp")>  _
Partial Public Class V_RepBuyCrp
	
	Private _trkBuyClient As Decimal
	
	Private _buyDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _delBuy As System.Nullable(Of Boolean)
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As Decimal
	
	Private _cropPrice As Decimal
	
	Private _trkClient As Decimal
	
	Private _delBDet As System.Nullable(Of Boolean)
	
	Private _cropName As String
	
	Private _buyLoc As String
	
	Private _totalPrice As System.Nullable(Of Decimal)
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _clientName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyClient() As Decimal
		Get
			Return Me._trkBuyClient
		End Get
		Set
			If ((Me._trkBuyClient = value)  _
						= false) Then
				Me._trkBuyClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyDate", DbType:="Date NOT NULL")>  _
	Public Property buyDate() As Date
		Get
			Return Me._buyDate
		End Get
		Set
			If ((Me._buyDate = value)  _
						= false) Then
				Me._buyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delBuy", DbType:="Bit")>  _
	Public Property delBuy() As System.Nullable(Of Boolean)
		Get
			Return Me._delBuy
		End Get
		Set
			If (Me._delBuy.Equals(value) = false) Then
				Me._delBuy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property storeAmount() As Decimal
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropPrice", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property cropPrice() As Decimal
		Get
			Return Me._cropPrice
		End Get
		Set
			If ((Me._cropPrice = value)  _
						= false) Then
				Me._cropPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClient() As Decimal
		Get
			Return Me._trkClient
		End Get
		Set
			If ((Me._trkClient = value)  _
						= false) Then
				Me._trkClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delBDet", DbType:="Bit")>  _
	Public Property delBDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delBDet
		End Get
		Set
			If (Me._delBDet.Equals(value) = false) Then
				Me._delBDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalPrice", DbType:="Decimal(37,0)")>  _
	Public Property totalPrice() As System.Nullable(Of Decimal)
		Get
			Return Me._totalPrice
		End Get
		Set
			If (Me._totalPrice.Equals(value) = false) Then
				Me._totalPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clientName() As String
		Get
			Return Me._clientName
		End Get
		Set
			If (String.Equals(Me._clientName, value) = false) Then
				Me._clientName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cropUnit")>  _
Partial Public Class cropUnit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trk As Decimal
	
	Private _trkCrop As System.Nullable(Of Decimal)
	
	Private _trkUnit As System.Nullable(Of Decimal)
	
	Private _delCU As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OndelCUChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelCUChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trk", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trk() As Decimal
		Get
			Return Me._trk
		End Get
		Set
			If ((Me._trk = value)  _
						= false) Then
				Me.OntrkChanging(value)
				Me.SendPropertyChanging
				Me._trk = value
				Me.SendPropertyChanged("trk")
				Me.OntrkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0)")>  _
	Public Property trkCrop() As System.Nullable(Of Decimal)
		Get
			Return Me._trkCrop
		End Get
		Set
			If (Me._trkCrop.Equals(value) = false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0)")>  _
	Public Property trkUnit() As System.Nullable(Of Decimal)
		Get
			Return Me._trkUnit
		End Get
		Set
			If (Me._trkUnit.Equals(value) = false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delCU", DbType:="Bit")>  _
	Public Property delCU() As System.Nullable(Of Boolean)
		Get
			Return Me._delCU
		End Get
		Set
			If (Me._delCU.Equals(value) = false) Then
				Me.OndelCUChanging(value)
				Me.SendPropertyChanging
				Me._delCU = value
				Me.SendPropertyChanged("delCU")
				Me.OndelCUChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.prodUnit")>  _
Partial Public Class prodUnit
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trk As Decimal
	
	Private _trkProd As System.Nullable(Of Decimal)
	
	Private _trkUnit As System.Nullable(Of Decimal)
	
	Private _delPU As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OndelPUChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelPUChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trk", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trk() As Decimal
		Get
			Return Me._trk
		End Get
		Set
			If ((Me._trk = value)  _
						= false) Then
				Me.OntrkChanging(value)
				Me.SendPropertyChanging
				Me._trk = value
				Me.SendPropertyChanged("trk")
				Me.OntrkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0)")>  _
	Public Property trkProd() As System.Nullable(Of Decimal)
		Get
			Return Me._trkProd
		End Get
		Set
			If (Me._trkProd.Equals(value) = false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0)")>  _
	Public Property trkUnit() As System.Nullable(Of Decimal)
		Get
			Return Me._trkUnit
		End Get
		Set
			If (Me._trkUnit.Equals(value) = false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPU", DbType:="Bit")>  _
	Public Property delPU() As System.Nullable(Of Boolean)
		Get
			Return Me._delPU
		End Get
		Set
			If (Me._delPU.Equals(value) = false) Then
				Me.OndelPUChanging(value)
				Me.SendPropertyChanging
				Me._delPU = value
				Me.SendPropertyChanged("delPU")
				Me.OndelPUChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.unitExch")>  _
Partial Public Class unitExch
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkUntEx As Decimal
	
	Private _trkFstUnt As Decimal
	
	Private _trkSecUnt As Decimal
	
	Private _exchgVal As Decimal
	
	Private _delUnEx As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkUntExChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUntExChanged()
    End Sub
    Partial Private Sub OntrkFstUntChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkFstUntChanged()
    End Sub
    Partial Private Sub OntrkSecUntChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkSecUntChanged()
    End Sub
    Partial Private Sub OnexchgValChanging(value As Decimal)
    End Sub
    Partial Private Sub OnexchgValChanged()
    End Sub
    Partial Private Sub OndelUnExChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelUnExChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUntEx", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkUntEx() As Decimal
		Get
			Return Me._trkUntEx
		End Get
		Set
			If ((Me._trkUntEx = value)  _
						= false) Then
				Me.OntrkUntExChanging(value)
				Me.SendPropertyChanging
				Me._trkUntEx = value
				Me.SendPropertyChanged("trkUntEx")
				Me.OntrkUntExChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkFstUnt", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkFstUnt() As Decimal
		Get
			Return Me._trkFstUnt
		End Get
		Set
			If ((Me._trkFstUnt = value)  _
						= false) Then
				Me.OntrkFstUntChanging(value)
				Me.SendPropertyChanging
				Me._trkFstUnt = value
				Me.SendPropertyChanged("trkFstUnt")
				Me.OntrkFstUntChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSecUnt", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkSecUnt() As Decimal
		Get
			Return Me._trkSecUnt
		End Get
		Set
			If ((Me._trkSecUnt = value)  _
						= false) Then
				Me.OntrkSecUntChanging(value)
				Me.SendPropertyChanging
				Me._trkSecUnt = value
				Me.SendPropertyChanged("trkSecUnt")
				Me.OntrkSecUntChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exchgVal", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property exchgVal() As Decimal
		Get
			Return Me._exchgVal
		End Get
		Set
			If ((Me._exchgVal = value)  _
						= false) Then
				Me.OnexchgValChanging(value)
				Me.SendPropertyChanging
				Me._exchgVal = value
				Me.SendPropertyChanged("exchgVal")
				Me.OnexchgValChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delUnEx", DbType:="Bit NOT NULL")>  _
	Public Property delUnEx() As Boolean
		Get
			Return Me._delUnEx
		End Get
		Set
			If ((Me._delUnEx = value)  _
						= false) Then
				Me.OndelUnExChanging(value)
				Me.SendPropertyChanging
				Me._delUnEx = value
				Me.SendPropertyChanged("delUnEx")
				Me.OndelUnExChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_unitExch")>  _
Partial Public Class V_unitExch
	
	Private _trkUntEx As Decimal
	
	Private _trkFstUnt As Decimal
	
	Private _trkSecUnt As Decimal
	
	Private _exchgVal As Decimal
	
	Private _delUnEx As Boolean
	
	Private _fstUnt As String
	
	Private _secUnt As String
	
	Private _exUn As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUntEx", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUntEx() As Decimal
		Get
			Return Me._trkUntEx
		End Get
		Set
			If ((Me._trkUntEx = value)  _
						= false) Then
				Me._trkUntEx = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkFstUnt", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkFstUnt() As Decimal
		Get
			Return Me._trkFstUnt
		End Get
		Set
			If ((Me._trkFstUnt = value)  _
						= false) Then
				Me._trkFstUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSecUnt", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkSecUnt() As Decimal
		Get
			Return Me._trkSecUnt
		End Get
		Set
			If ((Me._trkSecUnt = value)  _
						= false) Then
				Me._trkSecUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exchgVal", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property exchgVal() As Decimal
		Get
			Return Me._exchgVal
		End Get
		Set
			If ((Me._exchgVal = value)  _
						= false) Then
				Me._exchgVal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delUnEx", DbType:="Bit NOT NULL")>  _
	Public Property delUnEx() As Boolean
		Get
			Return Me._delUnEx
		End Get
		Set
			If ((Me._delUnEx = value)  _
						= false) Then
				Me._delUnEx = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fstUnt", DbType:="NVarChar(50)")>  _
	Public Property fstUnt() As String
		Get
			Return Me._fstUnt
		End Get
		Set
			If (String.Equals(Me._fstUnt, value) = false) Then
				Me._fstUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_secUnt", DbType:="NVarChar(50)")>  _
	Public Property secUnt() As String
		Get
			Return Me._secUnt
		End Get
		Set
			If (String.Equals(Me._secUnt, value) = false) Then
				Me._secUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exUn", DbType:="NVarChar(65)")>  _
	Public Property exUn() As String
		Get
			Return Me._exUn
		End Get
		Set
			If (String.Equals(Me._exUn, value) = false) Then
				Me._exUn = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.arivalStore")>  _
Partial Public Class arivalStore
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkAStore As Decimal
	
	Private _AStore As String
	
	Private _trkArival As Decimal
	
	Private _delSa As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkAStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkAStoreChanged()
    End Sub
    Partial Private Sub OnAStoreChanging(value As String)
    End Sub
    Partial Private Sub OnAStoreChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OndelSaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelSaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me.OntrkAStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkAStore = value
				Me.SendPropertyChanged("trkAStore")
				Me.OntrkAStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me.OnAStoreChanging(value)
				Me.SendPropertyChanging
				Me._AStore = value
				Me.SendPropertyChanged("AStore")
				Me.OnAStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSa", DbType:="Bit")>  _
	Public Property delSa() As System.Nullable(Of Boolean)
		Get
			Return Me._delSa
		End Get
		Set
			If (Me._delSa.Equals(value) = false) Then
				Me.OndelSaChanging(value)
				Me.SendPropertyChanging
				Me._delSa = value
				Me.SendPropertyChanged("delSa")
				Me.OndelSaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ShpDet")>  _
Partial Public Class V_ShpDet
	
	Private _trkShipDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As System.Nullable(Of Double)
	
	Private _trkBuyLoc As Decimal
	
	Private _trkBStore As Decimal
	
	Private _trkShip As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShipDet() As Decimal
		Get
			Return Me._trkShipDet
		End Get
		Set
			If ((Me._trkShipDet = value)  _
						= false) Then
				Me._trkShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float")>  _
	Public Property storeAmount() As System.Nullable(Of Double)
		Get
			Return Me._storeAmount
		End Get
		Set
			If (Me._storeAmount.Equals(value) = false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShip() As Decimal
		Get
			Return Me._trkShip
		End Get
		Set
			If ((Me._trkShip = value)  _
						= false) Then
				Me._trkShip = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RptShpDet")>  _
Partial Public Class V_RptShpDet
	
	Private _trkShipDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As System.Nullable(Of Double)
	
	Private _trkUnit As String
	
	Private _weight As Double
	
	Private _trkDriver As Decimal
	
	Private _trkCar As Decimal
	
	Private _trkShip As Decimal
	
	Private _delSD As System.Nullable(Of Boolean)
	
	Private _unitName As String
	
	Private _cropName As String
	
	Private _driverName As String
	
	Private _carNo As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShipDet() As Decimal
		Get
			Return Me._trkShipDet
		End Get
		Set
			If ((Me._trkShipDet = value)  _
						= false) Then
				Me._trkShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float")>  _
	Public Property storeAmount() As System.Nullable(Of Double)
		Get
			Return Me._storeAmount
		End Get
		Set
			If (Me._storeAmount.Equals(value) = false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property trkUnit() As String
		Get
			Return Me._trkUnit
		End Get
		Set
			If (String.Equals(Me._trkUnit, value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkDriver", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkDriver() As Decimal
		Get
			Return Me._trkDriver
		End Get
		Set
			If ((Me._trkDriver = value)  _
						= false) Then
				Me._trkDriver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCar", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCar() As Decimal
		Get
			Return Me._trkCar
		End Get
		Set
			If ((Me._trkCar = value)  _
						= false) Then
				Me._trkCar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShip() As Decimal
		Get
			Return Me._trkShip
		End Get
		Set
			If ((Me._trkShip = value)  _
						= false) Then
				Me._trkShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSD", DbType:="Bit")>  _
	Public Property delSD() As System.Nullable(Of Boolean)
		Get
			Return Me._delSD
		End Get
		Set
			If (Me._delSD.Equals(value) = false) Then
				Me._delSD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property driverName() As String
		Get
			Return Me._driverName
		End Get
		Set
			If (String.Equals(Me._driverName, value) = false) Then
				Me._driverName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_carNo", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property carNo() As String
		Get
			Return Me._carNo
		End Get
		Set
			If (String.Equals(Me._carNo, value) = false) Then
				Me._carNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RptArvDet")>  _
Partial Public Class V_RptArvDet
	
	Private _trkArDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As Double
	
	Private _trkUnit As String
	
	Private _weight As Double
	
	Private _trkDriver As Decimal
	
	Private _trkCar As Decimal
	
	Private _trkAr As Decimal
	
	Private _delAD As System.Nullable(Of Boolean)
	
	Private _cropName As String
	
	Private _unitName As String
	
	Private _driverName As String
	
	Private _carNo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArDet() As Decimal
		Get
			Return Me._trkArDet
		End Get
		Set
			If ((Me._trkArDet = value)  _
						= false) Then
				Me._trkArDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property trkUnit() As String
		Get
			Return Me._trkUnit
		End Get
		Set
			If (String.Equals(Me._trkUnit, value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkDriver", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkDriver() As Decimal
		Get
			Return Me._trkDriver
		End Get
		Set
			If ((Me._trkDriver = value)  _
						= false) Then
				Me._trkDriver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCar", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCar() As Decimal
		Get
			Return Me._trkCar
		End Get
		Set
			If ((Me._trkCar = value)  _
						= false) Then
				Me._trkCar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAr() As Decimal
		Get
			Return Me._trkAr
		End Get
		Set
			If ((Me._trkAr = value)  _
						= false) Then
				Me._trkAr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAD", DbType:="Bit")>  _
	Public Property delAD() As System.Nullable(Of Boolean)
		Get
			Return Me._delAD
		End Get
		Set
			If (Me._delAD.Equals(value) = false) Then
				Me._delAD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property driverName() As String
		Get
			Return Me._driverName
		End Get
		Set
			If (String.Equals(Me._driverName, value) = false) Then
				Me._driverName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_carNo", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property carNo() As String
		Get
			Return Me._carNo
		End Get
		Set
			If (String.Equals(Me._carNo, value) = false) Then
				Me._carNo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepAStrDet")>  _
Partial Public Class V_RepAStrDet
	
	Private _trkASDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkASReq As Decimal
	
	Private _delASDet As System.Nullable(Of Boolean)
	
	Private _cropName As String
	
	Private _unitName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkASDet() As Decimal
		Get
			Return Me._trkASDet
		End Get
		Set
			If ((Me._trkASDet = value)  _
						= false) Then
				Me._trkASDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me._aStock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASReq", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkASReq() As Decimal
		Get
			Return Me._trkASReq
		End Get
		Set
			If ((Me._trkASReq = value)  _
						= false) Then
				Me._trkASReq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delASDet", DbType:="Bit")>  _
	Public Property delASDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delASDet
		End Get
		Set
			If (Me._delASDet.Equals(value) = false) Then
				Me._delASDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepOutPrd")>  _
Partial Public Class V_RepOutPrd
	
	Private _trkPrdDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _amount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkOutPrd As Decimal
	
	Private _delPrd As System.Nullable(Of Boolean)
	
	Private _unitName As String
	
	Private _cropName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrdDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrdDet() As Decimal
		Get
			Return Me._trkPrdDet
		End Get
		Set
			If ((Me._trkPrdDet = value)  _
						= false) Then
				Me._trkPrdDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkOutPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkOutPrd() As Decimal
		Get
			Return Me._trkOutPrd
		End Get
		Set
			If ((Me._trkOutPrd = value)  _
						= false) Then
				Me._trkOutPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPrd", DbType:="Bit")>  _
	Public Property delPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delPrd
		End Get
		Set
			If (Me._delPrd.Equals(value) = false) Then
				Me._delPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepToPrd")>  _
Partial Public Class V_RepToPrd
	
	Private _trkToDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _amount As Double
	
	Private _weight As Double
	
	Private _trkUnit As Decimal
	
	Private _trkToPrd As Decimal
	
	Private _delToDet As System.Nullable(Of Boolean)
	
	Private _prodName As String
	
	Private _unitName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToDet() As Decimal
		Get
			Return Me._trkToDet
		End Get
		Set
			If ((Me._trkToDet = value)  _
						= false) Then
				Me._trkToDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delToDet", DbType:="Bit")>  _
	Public Property delToDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delToDet
		End Get
		Set
			If (Me._delToDet.Equals(value) = false) Then
				Me._delToDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepRecvDet")>  _
Partial Public Class V_RepRecvDet
	
	Private _trkRecvDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _amount As Decimal
	
	Private _trkUnit As Decimal
	
	Private _weight As Decimal
	
	Private _trkRecv As Decimal
	
	Private _delRecDet As Boolean
	
	Private _prodName As String
	
	Private _unitName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecvDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkRecvDet() As Decimal
		Get
			Return Me._trkRecvDet
		End Get
		Set
			If ((Me._trkRecvDet = value)  _
						= false) Then
				Me._trkRecvDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property amount() As Decimal
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property weight() As Decimal
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecv", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkRecv() As Decimal
		Get
			Return Me._trkRecv
		End Get
		Set
			If ((Me._trkRecv = value)  _
						= false) Then
				Me._trkRecv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delRecDet", DbType:="Bit NOT NULL")>  _
	Public Property delRecDet() As Boolean
		Get
			Return Me._delRecDet
		End Get
		Set
			If ((Me._delRecDet = value)  _
						= false) Then
				Me._delRecDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepExShpDet")>  _
Partial Public Class V_RepExShpDet
	
	Private _trkExpShipDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _storeAmount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkDriver As Decimal
	
	Private _trkCar As Decimal
	
	Private _trkExpShip As Decimal
	
	Private _delExShDet As System.Nullable(Of Boolean)
	
	Private _prodName As String
	
	Private _driverName As String
	
	Private _unitName As String
	
	Private _carNo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShipDet() As Decimal
		Get
			Return Me._trkExpShipDet
		End Get
		Set
			If ((Me._trkExpShipDet = value)  _
						= false) Then
				Me._trkExpShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkDriver", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkDriver() As Decimal
		Get
			Return Me._trkDriver
		End Get
		Set
			If ((Me._trkDriver = value)  _
						= false) Then
				Me._trkDriver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCar", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCar() As Decimal
		Get
			Return Me._trkCar
		End Get
		Set
			If ((Me._trkCar = value)  _
						= false) Then
				Me._trkCar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me._trkExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExShDet", DbType:="Bit")>  _
	Public Property delExShDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delExShDet
		End Get
		Set
			If (Me._delExShDet.Equals(value) = false) Then
				Me._delExShDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property driverName() As String
		Get
			Return Me._driverName
		End Get
		Set
			If (String.Equals(Me._driverName, value) = false) Then
				Me._driverName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_carNo", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property carNo() As String
		Get
			Return Me._carNo
		End Get
		Set
			If (String.Equals(Me._carNo, value) = false) Then
				Me._carNo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepArExDet")>  _
Partial Public Class V_RepArExDet
	
	Private _trkArExDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _storeAmount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkDriver As Decimal
	
	Private _trkCar As Decimal
	
	Private _trkArExp As Decimal
	
	Private _delArExDt As System.Nullable(Of Boolean)
	
	Private _prodName As String
	
	Private _unitName As String
	
	Private _driverName As String
	
	Private _carNo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArExDet() As Decimal
		Get
			Return Me._trkArExDet
		End Get
		Set
			If ((Me._trkArExDet = value)  _
						= false) Then
				Me._trkArExDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkDriver", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkDriver() As Decimal
		Get
			Return Me._trkDriver
		End Get
		Set
			If ((Me._trkDriver = value)  _
						= false) Then
				Me._trkDriver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCar", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCar() As Decimal
		Get
			Return Me._trkCar
		End Get
		Set
			If ((Me._trkCar = value)  _
						= false) Then
				Me._trkCar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExp", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArExp() As Decimal
		Get
			Return Me._trkArExp
		End Get
		Set
			If ((Me._trkArExp = value)  _
						= false) Then
				Me._trkArExp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delArExDt", DbType:="Bit")>  _
	Public Property delArExDt() As System.Nullable(Of Boolean)
		Get
			Return Me._delArExDt
		End Get
		Set
			If (Me._delArExDt.Equals(value) = false) Then
				Me._delArExDt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property driverName() As String
		Get
			Return Me._driverName
		End Get
		Set
			If (String.Equals(Me._driverName, value) = false) Then
				Me._driverName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_carNo", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property carNo() As String
		Get
			Return Me._carNo
		End Get
		Set
			If (String.Equals(Me._carNo, value) = false) Then
				Me._carNo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepExpStk")>  _
Partial Public Class V_RepExpStk
	
	Private _trkExpStkDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkExpStk As Decimal
	
	Private _delExStkDet As System.Nullable(Of Boolean)
	
	Private _unitName As String
	
	Private _prodName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStkDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStkDet() As Decimal
		Get
			Return Me._trkExpStkDet
		End Get
		Set
			If ((Me._trkExpStkDet = value)  _
						= false) Then
				Me._trkExpStkDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me._aStock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStk", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStk() As Decimal
		Get
			Return Me._trkExpStk
		End Get
		Set
			If ((Me._trkExpStk = value)  _
						= false) Then
				Me._trkExpStk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExStkDet", DbType:="Bit")>  _
	Public Property delExStkDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delExStkDet
		End Get
		Set
			If (Me._delExStkDet.Equals(value) = false) Then
				Me._delExStkDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RepGood")>  _
Partial Public Class V_RepGood
	
	Private _trkGoodDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _shipDet As String
	
	Private _trkGood As Decimal
	
	Private _delGoodDet As System.Nullable(Of Boolean)
	
	Private _prodName As String
	
	Private _unitName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGoodDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkGoodDet() As Decimal
		Get
			Return Me._trkGoodDet
		End Get
		Set
			If ((Me._trkGoodDet = value)  _
						= false) Then
				Me._trkGoodDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me._aStock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipDet", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property shipDet() As String
		Get
			Return Me._shipDet
		End Get
		Set
			If (String.Equals(Me._shipDet, value) = false) Then
				Me._shipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGood", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkGood() As Decimal
		Get
			Return Me._trkGood
		End Get
		Set
			If ((Me._trkGood = value)  _
						= false) Then
				Me._trkGood = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delGoodDet", DbType:="Bit")>  _
	Public Property delGoodDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delGoodDet
		End Get
		Set
			If (Me._delGoodDet.Equals(value) = false) Then
				Me._delGoodDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_expDetOfShp")>  _
Partial Public Class V_expDetOfShp
	
	Private _trkExpShipDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _storeAmount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkDriver As Decimal
	
	Private _trkCar As Decimal
	
	Private _trkExpShip As Decimal
	
	Private _delExShDet As System.Nullable(Of Boolean)
	
	Private _prodName As String
	
	Private _driverName As String
	
	Private _carNo As String
	
	Private _unitName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShipDet() As Decimal
		Get
			Return Me._trkExpShipDet
		End Get
		Set
			If ((Me._trkExpShipDet = value)  _
						= false) Then
				Me._trkExpShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkDriver", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkDriver() As Decimal
		Get
			Return Me._trkDriver
		End Get
		Set
			If ((Me._trkDriver = value)  _
						= false) Then
				Me._trkDriver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCar", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCar() As Decimal
		Get
			Return Me._trkCar
		End Get
		Set
			If ((Me._trkCar = value)  _
						= false) Then
				Me._trkCar = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me._trkExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExShDet", DbType:="Bit")>  _
	Public Property delExShDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delExShDet
		End Get
		Set
			If (Me._delExShDet.Equals(value) = false) Then
				Me._delExShDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_driverName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property driverName() As String
		Get
			Return Me._driverName
		End Get
		Set
			If (String.Equals(Me._driverName, value) = false) Then
				Me._driverName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_carNo", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property carNo() As String
		Get
			Return Me._carNo
		End Get
		Set
			If (String.Equals(Me._carNo, value) = false) Then
				Me._carNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_FinalStock")>  _
Partial Public Class V_FinalStock
	
	Private _trkBuyLoc As Decimal
	
	Private _buyLoc As String
	
	Private _trkBStore As Decimal
	
	Private _bStore As String
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oShip As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tShip As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me._bStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oShip", DbType:="Float NOT NULL")>  _
	Public Property oShip() As Double
		Get
			Return Me._oShip
		End Get
		Set
			If ((Me._oShip = value)  _
						= false) Then
				Me._oShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tShip", DbType:="Float NOT NULL")>  _
	Public Property tShip() As Double
		Get
			Return Me._tShip
		End Get
		Set
			If ((Me._tShip = value)  _
						= false) Then
				Me._tShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_FinalOutStk")>  _
Partial Public Class V_FinalOutStk
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkAStore As Decimal
	
	Private _AStore As String
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oOut As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tOut As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me._trkAStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oOut", DbType:="Float NOT NULL")>  _
	Public Property oOut() As Double
		Get
			Return Me._oOut
		End Get
		Set
			If ((Me._oOut = value)  _
						= false) Then
				Me._oOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tOut", DbType:="Float NOT NULL")>  _
	Public Property tOut() As Double
		Get
			Return Me._tOut
		End Get
		Set
			If ((Me._tOut = value)  _
						= false) Then
				Me._tOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ArvStk")>  _
Partial Public Class V_ArvStk
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkAStore As Decimal
	
	Private _AStore As String
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oOut As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tOut As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me._trkAStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oOut", DbType:="Float NOT NULL")>  _
	Public Property oOut() As Double
		Get
			Return Me._oOut
		End Get
		Set
			If ((Me._oOut = value)  _
						= false) Then
				Me._oOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tOut", DbType:="Float NOT NULL")>  _
	Public Property tOut() As Double
		Get
			Return Me._tOut
		End Get
		Set
			If ((Me._tOut = value)  _
						= false) Then
				Me._tOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_BuyStk")>  _
Partial Public Class V_BuyStk
	
	Private _trkBuyLoc As Decimal
	
	Private _buyLoc As String
	
	Private _trkBStore As Decimal
	
	Private _bStore As String
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oShip As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tShip As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me._bStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oShip", DbType:="Float NOT NULL")>  _
	Public Property oShip() As Double
		Get
			Return Me._oShip
		End Get
		Set
			If ((Me._oShip = value)  _
						= false) Then
				Me._oShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tShip", DbType:="Float NOT NULL")>  _
	Public Property tShip() As Double
		Get
			Return Me._tShip
		End Get
		Set
			If ((Me._tShip = value)  _
						= false) Then
				Me._tShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_FstExpShipStk")>  _
Partial Public Class V_FstExpShipStk
	
	Private _trkArival As Decimal
	
	Private _trkAPrdStr As Decimal
	
	Private _trkProd As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oOut As Double
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tOut As Double
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oOut", DbType:="Float NOT NULL")>  _
	Public Property oOut() As Double
		Get
			Return Me._oOut
		End Get
		Set
			If ((Me._oOut = value)  _
						= false) Then
				Me._oOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tOut", DbType:="Float NOT NULL")>  _
	Public Property tOut() As Double
		Get
			Return Me._tOut
		End Get
		Set
			If ((Me._tOut = value)  _
						= false) Then
				Me._tOut = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PrdStk")>  _
Partial Public Class V_PrdStk
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkAPrdStr As Decimal
	
	Private _APrdStr As String
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oOut As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tOut As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oOut", DbType:="Float NOT NULL")>  _
	Public Property oOut() As Double
		Get
			Return Me._oOut
		End Get
		Set
			If ((Me._oOut = value)  _
						= false) Then
				Me._oOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tOut", DbType:="Float NOT NULL")>  _
	Public Property tOut() As Double
		Get
			Return Me._tOut
		End Get
		Set
			If ((Me._tOut = value)  _
						= false) Then
				Me._tOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.headImg")>  _
Partial Public Class headImg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkUpld As Decimal
	
	Private _imgExt As String
	
	Private _actv As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkUpldChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUpldChanged()
    End Sub
    Partial Private Sub OnimgExtChanging(value As String)
    End Sub
    Partial Private Sub OnimgExtChanged()
    End Sub
    Partial Private Sub OnactvChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnactvChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUpld", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkUpld() As Decimal
		Get
			Return Me._trkUpld
		End Get
		Set
			If ((Me._trkUpld = value)  _
						= false) Then
				Me.OntrkUpldChanging(value)
				Me.SendPropertyChanging
				Me._trkUpld = value
				Me.SendPropertyChanged("trkUpld")
				Me.OntrkUpldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_imgExt", DbType:="NVarChar(MAX)")>  _
	Public Property imgExt() As String
		Get
			Return Me._imgExt
		End Get
		Set
			If (String.Equals(Me._imgExt, value) = false) Then
				Me.OnimgExtChanging(value)
				Me.SendPropertyChanging
				Me._imgExt = value
				Me.SendPropertyChanged("imgExt")
				Me.OnimgExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_actv", DbType:="Bit")>  _
	Public Property actv() As System.Nullable(Of Boolean)
		Get
			Return Me._actv
		End Get
		Set
			If (Me._actv.Equals(value) = false) Then
				Me.OnactvChanging(value)
				Me.SendPropertyChanging
				Me._actv = value
				Me.SendPropertyChanged("actv")
				Me.OnactvChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.waterImg")>  _
Partial Public Class waterImg
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkWtr As Decimal
	
	Private _imgExt As String
	
	Private _actv As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkWtrChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkWtrChanged()
    End Sub
    Partial Private Sub OnimgExtChanging(value As String)
    End Sub
    Partial Private Sub OnimgExtChanged()
    End Sub
    Partial Private Sub OnactvChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnactvChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkWtr", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkWtr() As Decimal
		Get
			Return Me._trkWtr
		End Get
		Set
			If ((Me._trkWtr = value)  _
						= false) Then
				Me.OntrkWtrChanging(value)
				Me.SendPropertyChanging
				Me._trkWtr = value
				Me.SendPropertyChanged("trkWtr")
				Me.OntrkWtrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_imgExt", DbType:="NVarChar(MAX)")>  _
	Public Property imgExt() As String
		Get
			Return Me._imgExt
		End Get
		Set
			If (String.Equals(Me._imgExt, value) = false) Then
				Me.OnimgExtChanging(value)
				Me.SendPropertyChanging
				Me._imgExt = value
				Me.SendPropertyChanged("imgExt")
				Me.OnimgExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_actv", DbType:="Bit")>  _
	Public Property actv() As System.Nullable(Of Boolean)
		Get
			Return Me._actv
		End Get
		Set
			If (Me._actv.Equals(value) = false) Then
				Me.OnactvChanging(value)
				Me.SendPropertyChanging
				Me._actv = value
				Me.SendPropertyChanged("actv")
				Me.OnactvChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_FinalToStk")>  _
Partial Public Class V_FinalToStk
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oOut As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tOut As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oOut", DbType:="Float NOT NULL")>  _
	Public Property oOut() As Double
		Get
			Return Me._oOut
		End Get
		Set
			If ((Me._oOut = value)  _
						= false) Then
				Me._oOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tOut", DbType:="Float NOT NULL")>  _
	Public Property tOut() As Double
		Get
			Return Me._tOut
		End Get
		Set
			If ((Me._tOut = value)  _
						= false) Then
				Me._tOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_InPeeler")>  _
Partial Public Class V_InPeeler
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oOut As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tOut As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oOut", DbType:="Float NOT NULL")>  _
	Public Property oOut() As Double
		Get
			Return Me._oOut
		End Get
		Set
			If ((Me._oOut = value)  _
						= false) Then
				Me._oOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tOut", DbType:="Float NOT NULL")>  _
	Public Property tOut() As Double
		Get
			Return Me._tOut
		End Get
		Set
			If ((Me._tOut = value)  _
						= false) Then
				Me._tOut = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClientArLoc")>  _
Partial Public Class V_ClientArLoc
	
	Private _trkClntAr As Decimal
	
	Private _clntName As String
	
	Private _trkArival As Decimal
	
	Private _clntTel As System.Nullable(Of Decimal)
	
	Private _clntInfo As String
	
	Private _delClnt As System.Nullable(Of Boolean)
	
	Private _arivalName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntAr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClntAr() As Decimal
		Get
			Return Me._trkClntAr
		End Get
		Set
			If ((Me._trkClntAr = value)  _
						= false) Then
				Me._trkClntAr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntName() As String
		Get
			Return Me._clntName
		End Get
		Set
			If (String.Equals(Me._clntName, value) = false) Then
				Me._clntName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntTel", DbType:="Decimal(18,0)")>  _
	Public Property clntTel() As System.Nullable(Of Decimal)
		Get
			Return Me._clntTel
		End Get
		Set
			If (Me._clntTel.Equals(value) = false) Then
				Me._clntTel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntInfo", DbType:="NVarChar(MAX)")>  _
	Public Property clntInfo() As String
		Get
			Return Me._clntInfo
		End Get
		Set
			If (String.Equals(Me._clntInfo, value) = false) Then
				Me._clntInfo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delClnt", DbType:="Bit")>  _
	Public Property delClnt() As System.Nullable(Of Boolean)
		Get
			Return Me._delClnt
		End Get
		Set
			If (Me._delClnt.Equals(value) = false) Then
				Me._delClnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.clientAr")>  _
Partial Public Class clientAr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkClntAr As Decimal
	
	Private _clntName As String
	
	Private _trkArival As Decimal
	
	Private _clntTel As System.Nullable(Of Decimal)
	
	Private _clntInfo As String
	
	Private _delClnt As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkClntArChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkClntArChanged()
    End Sub
    Partial Private Sub OnclntNameChanging(value As String)
    End Sub
    Partial Private Sub OnclntNameChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OnclntTelChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnclntTelChanged()
    End Sub
    Partial Private Sub OnclntInfoChanging(value As String)
    End Sub
    Partial Private Sub OnclntInfoChanged()
    End Sub
    Partial Private Sub OndelClntChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelClntChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntAr", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkClntAr() As Decimal
		Get
			Return Me._trkClntAr
		End Get
		Set
			If ((Me._trkClntAr = value)  _
						= false) Then
				Me.OntrkClntArChanging(value)
				Me.SendPropertyChanging
				Me._trkClntAr = value
				Me.SendPropertyChanged("trkClntAr")
				Me.OntrkClntArChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntName() As String
		Get
			Return Me._clntName
		End Get
		Set
			If (String.Equals(Me._clntName, value) = false) Then
				Me.OnclntNameChanging(value)
				Me.SendPropertyChanging
				Me._clntName = value
				Me.SendPropertyChanged("clntName")
				Me.OnclntNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntTel", DbType:="Decimal(18,0)")>  _
	Public Property clntTel() As System.Nullable(Of Decimal)
		Get
			Return Me._clntTel
		End Get
		Set
			If (Me._clntTel.Equals(value) = false) Then
				Me.OnclntTelChanging(value)
				Me.SendPropertyChanging
				Me._clntTel = value
				Me.SendPropertyChanged("clntTel")
				Me.OnclntTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntInfo", DbType:="NVarChar(MAX)")>  _
	Public Property clntInfo() As String
		Get
			Return Me._clntInfo
		End Get
		Set
			If (String.Equals(Me._clntInfo, value) = false) Then
				Me.OnclntInfoChanging(value)
				Me.SendPropertyChanging
				Me._clntInfo = value
				Me.SendPropertyChanged("clntInfo")
				Me.OnclntInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delClnt", DbType:="Bit")>  _
	Public Property delClnt() As System.Nullable(Of Boolean)
		Get
			Return Me._delClnt
		End Get
		Set
			If (Me._delClnt.Equals(value) = false) Then
				Me.OndelClntChanging(value)
				Me.SendPropertyChanging
				Me._delClnt = value
				Me.SendPropertyChanged("delClnt")
				Me.OndelClntChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ArivalPrdStore")>  _
Partial Public Class V_ArivalPrdStore
	
	Private _trkAPrdStr As Decimal
	
	Private _APrdStr As String
	
	Private _trkArival As Decimal
	
	Private _delAPrd As Boolean
	
	Private _arivalName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAPrd", DbType:="Bit NOT NULL")>  _
	Public Property delAPrd() As Boolean
		Get
			Return Me._delAPrd
		End Get
		Set
			If ((Me._delAPrd = value)  _
						= false) Then
				Me._delAPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PrdExp")>  _
Partial Public Class V_PrdExp
	
	Private _trkToPrd As System.Nullable(Of Decimal)
	
	Private _trkProd As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0)")>  _
	Public Property trkToPrd() As System.Nullable(Of Decimal)
		Get
			Return Me._trkToPrd
		End Get
		Set
			If (Me._trkToPrd.Equals(value) = false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_PrdSal")>  _
Partial Public Class V_PrdSal
	
	Private _trkToPrd As Decimal
	
	Private _trkProd As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_StkGood")>  _
Partial Public Class V_StkGood
	
	Private _trkExpLok As Decimal
	
	Private _expName As String
	
	Private _trkExpStore As Decimal
	
	Private _expStore As String
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _totalOne As System.Nullable(Of Double)
	
	Private _oGood As Double
	
	Private _StkOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _totalTwo As System.Nullable(Of Double)
	
	Private _tGood As Double
	
	Private _StkTwo As System.Nullable(Of Double)
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLok", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLok() As Decimal
		Get
			Return Me._trkExpLok
		End Get
		Set
			If ((Me._trkExpLok = value)  _
						= false) Then
				Me._trkExpLok = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStore() As Decimal
		Get
			Return Me._trkExpStore
		End Get
		Set
			If ((Me._trkExpStore = value)  _
						= false) Then
				Me._trkExpStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expStore() As String
		Get
			Return Me._expStore
		End Get
		Set
			If (String.Equals(Me._expStore, value) = false) Then
				Me._expStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalOne", DbType:="Float")>  _
	Public Property totalOne() As System.Nullable(Of Double)
		Get
			Return Me._totalOne
		End Get
		Set
			If (Me._totalOne.Equals(value) = false) Then
				Me._totalOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oGood", DbType:="Float NOT NULL")>  _
	Public Property oGood() As Double
		Get
			Return Me._oGood
		End Get
		Set
			If ((Me._oGood = value)  _
						= false) Then
				Me._oGood = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkOne", DbType:="Float")>  _
	Public Property StkOne() As System.Nullable(Of Double)
		Get
			Return Me._StkOne
		End Get
		Set
			If (Me._StkOne.Equals(value) = false) Then
				Me._StkOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalTwo", DbType:="Float")>  _
	Public Property totalTwo() As System.Nullable(Of Double)
		Get
			Return Me._totalTwo
		End Get
		Set
			If (Me._totalTwo.Equals(value) = false) Then
				Me._totalTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tGood", DbType:="Float NOT NULL")>  _
	Public Property tGood() As Double
		Get
			Return Me._tGood
		End Get
		Set
			If ((Me._tGood = value)  _
						= false) Then
				Me._tGood = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StkTwo", DbType:="Float")>  _
	Public Property StkTwo() As System.Nullable(Of Double)
		Get
			Return Me._StkTwo
		End Get
		Set
			If (Me._StkTwo.Equals(value) = false) Then
				Me._StkTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClientLoc")>  _
Partial Public Class V_ClientLoc
	
	Private _trkClient As Decimal
	
	Private _clientName As String
	
	Private _trkBuyLoc As Decimal
	
	Private _clientTel As System.Nullable(Of Decimal)
	
	Private _clientInfo As String
	
	Private _delClient As System.Nullable(Of Boolean)
	
	Private _buyLoc As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClient() As Decimal
		Get
			Return Me._trkClient
		End Get
		Set
			If ((Me._trkClient = value)  _
						= false) Then
				Me._trkClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clientName() As String
		Get
			Return Me._clientName
		End Get
		Set
			If (String.Equals(Me._clientName, value) = false) Then
				Me._clientName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientTel", DbType:="Decimal(18,0)")>  _
	Public Property clientTel() As System.Nullable(Of Decimal)
		Get
			Return Me._clientTel
		End Get
		Set
			If (Me._clientTel.Equals(value) = false) Then
				Me._clientTel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientInfo", DbType:="NVarChar(MAX)")>  _
	Public Property clientInfo() As String
		Get
			Return Me._clientInfo
		End Get
		Set
			If (String.Equals(Me._clientInfo, value) = false) Then
				Me._clientInfo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delClient", DbType:="Bit")>  _
	Public Property delClient() As System.Nullable(Of Boolean)
		Get
			Return Me._delClient
		End Get
		Set
			If (Me._delClient.Equals(value) = false) Then
				Me._delClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_cropUnit")>  _
Partial Public Class V_cropUnit
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _trkUnit As System.Nullable(Of Decimal)
	
	Private _unitName As String
	
	Private _delCrop As System.Nullable(Of Boolean)
	
	Private _delCU As System.Nullable(Of Boolean)
	
	Private _delUn As System.Nullable(Of Boolean)
	
	Private _trk As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0)")>  _
	Public Property trkUnit() As System.Nullable(Of Decimal)
		Get
			Return Me._trkUnit
		End Get
		Set
			If (Me._trkUnit.Equals(value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50)")>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delCrop", DbType:="Bit")>  _
	Public Property delCrop() As System.Nullable(Of Boolean)
		Get
			Return Me._delCrop
		End Get
		Set
			If (Me._delCrop.Equals(value) = false) Then
				Me._delCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delCU", DbType:="Bit")>  _
	Public Property delCU() As System.Nullable(Of Boolean)
		Get
			Return Me._delCU
		End Get
		Set
			If (Me._delCU.Equals(value) = false) Then
				Me._delCU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delUn", DbType:="Bit")>  _
	Public Property delUn() As System.Nullable(Of Boolean)
		Get
			Return Me._delUn
		End Get
		Set
			If (Me._delUn.Equals(value) = false) Then
				Me._delUn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trk", DbType:="Decimal(18,0)")>  _
	Public Property trk() As System.Nullable(Of Decimal)
		Get
			Return Me._trk
		End Get
		Set
			If (Me._trk.Equals(value) = false) Then
				Me._trk = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_prdUnit")>  _
Partial Public Class V_prdUnit
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _cropName As String
	
	Private _delPrd As System.Nullable(Of Boolean)
	
	Private _trkUnit As System.Nullable(Of Decimal)
	
	Private _unitName As String
	
	Private _delPU As System.Nullable(Of Boolean)
	
	Private _delUn As System.Nullable(Of Boolean)
	
	Private _trkCrop As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPrd", DbType:="Bit")>  _
	Public Property delPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delPrd
		End Get
		Set
			If (Me._delPrd.Equals(value) = false) Then
				Me._delPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0)")>  _
	Public Property trkUnit() As System.Nullable(Of Decimal)
		Get
			Return Me._trkUnit
		End Get
		Set
			If (Me._trkUnit.Equals(value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50)")>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPU", DbType:="Bit")>  _
	Public Property delPU() As System.Nullable(Of Boolean)
		Get
			Return Me._delPU
		End Get
		Set
			If (Me._delPU.Equals(value) = false) Then
				Me._delPU = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delUn", DbType:="Bit")>  _
	Public Property delUn() As System.Nullable(Of Boolean)
		Get
			Return Me._delUn
		End Get
		Set
			If (Me._delUn.Equals(value) = false) Then
				Me._delUn = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ExpDShp")>  _
Partial Public Class V_ExpDShp
	
	Private _trkExpShipDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _storeAmount As Double
	
	Private _trkExpShip As Decimal
	
	Private _trkArival As Decimal
	
	Private _trkAPrdStr As System.Nullable(Of Decimal)
	
	Private _theFlag As System.Nullable(Of Decimal)
	
	Private _expShipDate As Date
	
	Private _delExpShip As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShipDet() As Decimal
		Get
			Return Me._trkExpShipDet
		End Get
		Set
			If ((Me._trkExpShipDet = value)  _
						= false) Then
				Me._trkExpShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me._trkExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0)")>  _
	Public Property trkAPrdStr() As System.Nullable(Of Decimal)
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If (Me._trkAPrdStr.Equals(value) = false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_theFlag", DbType:="Decimal(18,0)")>  _
	Public Property theFlag() As System.Nullable(Of Decimal)
		Get
			Return Me._theFlag
		End Get
		Set
			If (Me._theFlag.Equals(value) = false) Then
				Me._theFlag = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShipDate", DbType:="Date NOT NULL")>  _
	Public Property expShipDate() As Date
		Get
			Return Me._expShipDate
		End Get
		Set
			If ((Me._expShipDate = value)  _
						= false) Then
				Me._expShipDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExpShip", DbType:="Bit")>  _
	Public Property delExpShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delExpShip
		End Get
		Set
			If (Me._delExpShip.Equals(value) = false) Then
				Me._delExpShip = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ClntCrpArv")>  _
Partial Public Class V_ClntCrpArv
	
	Private _trkClntCrp As Decimal
	
	Private _clntCrpName As String
	
	Private _trkArival As Decimal
	
	Private _clntCrpTel As System.Nullable(Of Decimal)
	
	Private _clntCrpInfo As String
	
	Private _arivalName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClntCrp() As Decimal
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If ((Me._trkClntCrp = value)  _
						= false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpTel", DbType:="Decimal(18,0)")>  _
	Public Property clntCrpTel() As System.Nullable(Of Decimal)
		Get
			Return Me._clntCrpTel
		End Get
		Set
			If (Me._clntCrpTel.Equals(value) = false) Then
				Me._clntCrpTel = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpInfo", DbType:="NVarChar(MAX)")>  _
	Public Property clntCrpInfo() As String
		Get
			Return Me._clntCrpInfo
		End Get
		Set
			If (String.Equals(Me._clntCrpInfo, value) = false) Then
				Me._clntCrpInfo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.clientCrp")>  _
Partial Public Class clientCrp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkClntCrp As Decimal
	
	Private _clntCrpName As String
	
	Private _trkArival As Decimal
	
	Private _clntCrpTel As System.Nullable(Of Decimal)
	
	Private _clntCrpInfo As String
	
	Private _delClntCrp As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkClntCrpChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkClntCrpChanged()
    End Sub
    Partial Private Sub OnclntCrpNameChanging(value As String)
    End Sub
    Partial Private Sub OnclntCrpNameChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OnclntCrpTelChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnclntCrpTelChanged()
    End Sub
    Partial Private Sub OnclntCrpInfoChanging(value As String)
    End Sub
    Partial Private Sub OnclntCrpInfoChanged()
    End Sub
    Partial Private Sub OndelClntCrpChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelClntCrpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkClntCrp() As Decimal
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If ((Me._trkClntCrp = value)  _
						= false) Then
				Me.OntrkClntCrpChanging(value)
				Me.SendPropertyChanging
				Me._trkClntCrp = value
				Me.SendPropertyChanged("trkClntCrp")
				Me.OntrkClntCrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me.OnclntCrpNameChanging(value)
				Me.SendPropertyChanging
				Me._clntCrpName = value
				Me.SendPropertyChanged("clntCrpName")
				Me.OnclntCrpNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpTel", DbType:="Decimal(18,0)")>  _
	Public Property clntCrpTel() As System.Nullable(Of Decimal)
		Get
			Return Me._clntCrpTel
		End Get
		Set
			If (Me._clntCrpTel.Equals(value) = false) Then
				Me.OnclntCrpTelChanging(value)
				Me.SendPropertyChanging
				Me._clntCrpTel = value
				Me.SendPropertyChanged("clntCrpTel")
				Me.OnclntCrpTelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpInfo", DbType:="NVarChar(MAX)")>  _
	Public Property clntCrpInfo() As String
		Get
			Return Me._clntCrpInfo
		End Get
		Set
			If (String.Equals(Me._clntCrpInfo, value) = false) Then
				Me.OnclntCrpInfoChanging(value)
				Me.SendPropertyChanging
				Me._clntCrpInfo = value
				Me.SendPropertyChanged("clntCrpInfo")
				Me.OnclntCrpInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delClntCrp", DbType:="Bit")>  _
	Public Property delClntCrp() As System.Nullable(Of Boolean)
		Get
			Return Me._delClntCrp
		End Get
		Set
			If (Me._delClntCrp.Equals(value) = false) Then
				Me.OndelClntCrpChanging(value)
				Me.SendPropertyChanging
				Me._delClntCrp = value
				Me.SendPropertyChanged("delClntCrp")
				Me.OndelClntCrpChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.processBuy")>  _
Partial Public Class processBuy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OnprsNameChanging(value As String)
    End Sub
    Partial Private Sub OnprsNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me.OnprsNameChanging(value)
				Me.SendPropertyChanging
				Me._prsName = value
				Me.SendPropertyChanged("prsName")
				Me.OnprsNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.processArv")>  _
Partial Public Class processArv
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OnprsNameChanging(value As String)
    End Sub
    Partial Private Sub OnprsNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me.OnprsNameChanging(value)
				Me.SendPropertyChanging
				Me._prsName = value
				Me.SendPropertyChanged("prsName")
				Me.OnprsNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.processRcv")>  _
Partial Public Class processRcv
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OnprsNameChanging(value As String)
    End Sub
    Partial Private Sub OnprsNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me.OnprsNameChanging(value)
				Me.SendPropertyChanging
				Me._prsName = value
				Me.SendPropertyChanged("prsName")
				Me.OnprsNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.processExp")>  _
Partial Public Class processExp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OnprsNameChanging(value As String)
    End Sub
    Partial Private Sub OnprsNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me.OnprsNameChanging(value)
				Me.SendPropertyChanging
				Me._prsName = value
				Me.SendPropertyChanged("prsName")
				Me.OnprsNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ExpShp")>  _
Partial Public Class V_ExpShp
	
	Private _trkExpShip As Decimal
	
	Private _expShipDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAPrdStr As System.Nullable(Of Decimal)
	
	Private _trkPeeler As System.Nullable(Of Decimal)
	
	Private _trkPStore As System.Nullable(Of Decimal)
	
	Private _trkToPrd As System.Nullable(Of Decimal)
	
	Private _trkExpLoc As Decimal
	
	Private _delExpShip As System.Nullable(Of Boolean)
	
	Private _arivalName As String
	
	Private _APrdStr As String
	
	Private _expName As String
	
	Private _expShpInf As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me._trkExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShipDate", DbType:="Date NOT NULL")>  _
	Public Property expShipDate() As Date
		Get
			Return Me._expShipDate
		End Get
		Set
			If ((Me._expShipDate = value)  _
						= false) Then
				Me._expShipDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0)")>  _
	Public Property trkAPrdStr() As System.Nullable(Of Decimal)
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If (Me._trkAPrdStr.Equals(value) = false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0)")>  _
	Public Property trkPeeler() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPeeler
		End Get
		Set
			If (Me._trkPeeler.Equals(value) = false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPStore", DbType:="Decimal(18,0)")>  _
	Public Property trkPStore() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPStore
		End Get
		Set
			If (Me._trkPStore.Equals(value) = false) Then
				Me._trkPStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0)")>  _
	Public Property trkToPrd() As System.Nullable(Of Decimal)
		Get
			Return Me._trkToPrd
		End Get
		Set
			If (Me._trkToPrd.Equals(value) = false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me._trkExpLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExpShip", DbType:="Bit")>  _
	Public Property delExpShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delExpShip
		End Get
		Set
			If (Me._delExpShip.Equals(value) = false) Then
				Me._delExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShpInf", DbType:="NVarChar(MAX)")>  _
	Public Property expShpInf() As String
		Get
			Return Me._expShpInf
		End Get
		Set
			If (String.Equals(Me._expShpInf, value) = false) Then
				Me._expShpInf = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ExpShpPlr")>  _
Partial Public Class V_ExpShpPlr
	
	Private _trkExpShip As Decimal
	
	Private _expShipDate As Date
	
	Private _trkPeeler As System.Nullable(Of Decimal)
	
	Private _trkToPrd As System.Nullable(Of Decimal)
	
	Private _delExpShip As System.Nullable(Of Boolean)
	
	Private _expName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me._trkExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShipDate", DbType:="Date NOT NULL")>  _
	Public Property expShipDate() As Date
		Get
			Return Me._expShipDate
		End Get
		Set
			If ((Me._expShipDate = value)  _
						= false) Then
				Me._expShipDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0)")>  _
	Public Property trkPeeler() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPeeler
		End Get
		Set
			If (Me._trkPeeler.Equals(value) = false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0)")>  _
	Public Property trkToPrd() As System.Nullable(Of Decimal)
		Get
			Return Me._trkToPrd
		End Get
		Set
			If (Me._trkToPrd.Equals(value) = false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExpShip", DbType:="Bit")>  _
	Public Property delExpShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delExpShip
		End Get
		Set
			If (Me._delExpShip.Equals(value) = false) Then
				Me._delExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.buy")>  _
Partial Public Class buy
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkBuyClient As Decimal
	
	Private _buyDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkBStore As Decimal
	
	Private _buyInfo As String
	
	Private _trkPrs As Decimal
	
	Private _delBuy As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkBuyClientChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyClientChanged()
    End Sub
    Partial Private Sub OnbuyDateChanging(value As Date)
    End Sub
    Partial Private Sub OnbuyDateChanged()
    End Sub
    Partial Private Sub OntrkBuyLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyLocChanged()
    End Sub
    Partial Private Sub OntrkBStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBStoreChanged()
    End Sub
    Partial Private Sub OnbuyInfoChanging(value As String)
    End Sub
    Partial Private Sub OnbuyInfoChanged()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OndelBuyChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelBuyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyClient", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkBuyClient() As Decimal
		Get
			Return Me._trkBuyClient
		End Get
		Set
			If ((Me._trkBuyClient = value)  _
						= false) Then
				Me.OntrkBuyClientChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyClient = value
				Me.SendPropertyChanged("trkBuyClient")
				Me.OntrkBuyClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyDate", DbType:="Date NOT NULL")>  _
	Public Property buyDate() As Date
		Get
			Return Me._buyDate
		End Get
		Set
			If ((Me._buyDate = value)  _
						= false) Then
				Me.OnbuyDateChanging(value)
				Me.SendPropertyChanging
				Me._buyDate = value
				Me.SendPropertyChanged("buyDate")
				Me.OnbuyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me.OntrkBuyLocChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyLoc = value
				Me.SendPropertyChanged("trkBuyLoc")
				Me.OntrkBuyLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me.OntrkBStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkBStore = value
				Me.SendPropertyChanged("trkBStore")
				Me.OntrkBStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyInfo", DbType:="NVarChar(MAX)")>  _
	Public Property buyInfo() As String
		Get
			Return Me._buyInfo
		End Get
		Set
			If (String.Equals(Me._buyInfo, value) = false) Then
				Me.OnbuyInfoChanging(value)
				Me.SendPropertyChanging
				Me._buyInfo = value
				Me.SendPropertyChanged("buyInfo")
				Me.OnbuyInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delBuy", DbType:="Bit")>  _
	Public Property delBuy() As System.Nullable(Of Boolean)
		Get
			Return Me._delBuy
		End Get
		Set
			If (Me._delBuy.Equals(value) = false) Then
				Me.OndelBuyChanging(value)
				Me.SendPropertyChanging
				Me._delBuy = value
				Me.SendPropertyChanged("delBuy")
				Me.OndelBuyChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.buyDetail")>  _
Partial Public Class buyDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkBuyDet As Decimal
	
	Private _trkBuyClient As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As Double
	
	Private _cropPrice As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkClient As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delBDet As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkBuyDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyDetChanged()
    End Sub
    Partial Private Sub OntrkBuyClientChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyClientChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OnstoreAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnstoreAmountChanged()
    End Sub
    Partial Private Sub OncropPriceChanging(value As Double)
    End Sub
    Partial Private Sub OncropPriceChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OntrkClientChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkClientChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelBDetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelBDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkBuyDet() As Decimal
		Get
			Return Me._trkBuyDet
		End Get
		Set
			If ((Me._trkBuyDet = value)  _
						= false) Then
				Me.OntrkBuyDetChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyDet = value
				Me.SendPropertyChanged("trkBuyDet")
				Me.OntrkBuyDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyClient() As Decimal
		Get
			Return Me._trkBuyClient
		End Get
		Set
			If ((Me._trkBuyClient = value)  _
						= false) Then
				Me.OntrkBuyClientChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyClient = value
				Me.SendPropertyChanged("trkBuyClient")
				Me.OntrkBuyClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me.OnstoreAmountChanging(value)
				Me.SendPropertyChanging
				Me._storeAmount = value
				Me.SendPropertyChanged("storeAmount")
				Me.OnstoreAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropPrice", DbType:="Float NOT NULL")>  _
	Public Property cropPrice() As Double
		Get
			Return Me._cropPrice
		End Get
		Set
			If ((Me._cropPrice = value)  _
						= false) Then
				Me.OncropPriceChanging(value)
				Me.SendPropertyChanging
				Me._cropPrice = value
				Me.SendPropertyChanged("cropPrice")
				Me.OncropPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClient() As Decimal
		Get
			Return Me._trkClient
		End Get
		Set
			If ((Me._trkClient = value)  _
						= false) Then
				Me.OntrkClientChanging(value)
				Me.SendPropertyChanging
				Me._trkClient = value
				Me.SendPropertyChanged("trkClient")
				Me.OntrkClientChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delBDet", DbType:="Bit")>  _
	Public Property delBDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delBDet
		End Get
		Set
			If (Me._delBDet.Equals(value) = false) Then
				Me.OndelBDetChanging(value)
				Me.SendPropertyChanging
				Me._delBDet = value
				Me.SendPropertyChanged("delBDet")
				Me.OndelBDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_buy")>  _
Partial Public Class V_buy
	
	Private _trkBuyClient As Decimal
	
	Private _buyDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkBStore As Decimal
	
	Private _delBuy As System.Nullable(Of Boolean)
	
	Private _buyLoc As String
	
	Private _bStore As String
	
	Private _buyInfo As String
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyClient() As Decimal
		Get
			Return Me._trkBuyClient
		End Get
		Set
			If ((Me._trkBuyClient = value)  _
						= false) Then
				Me._trkBuyClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyDate", DbType:="Date NOT NULL")>  _
	Public Property buyDate() As Date
		Get
			Return Me._buyDate
		End Get
		Set
			If ((Me._buyDate = value)  _
						= false) Then
				Me._buyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delBuy", DbType:="Bit")>  _
	Public Property delBuy() As System.Nullable(Of Boolean)
		Get
			Return Me._delBuy
		End Get
		Set
			If (Me._delBuy.Equals(value) = false) Then
				Me._delBuy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me._bStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyInfo", DbType:="NVarChar(MAX)")>  _
	Public Property buyInfo() As String
		Get
			Return Me._buyInfo
		End Get
		Set
			If (String.Equals(Me._buyInfo, value) = false) Then
				Me._buyInfo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me._trkPrs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me._prsName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_buyDetail")>  _
Partial Public Class V_buyDetail
	
	Private _trkBuyDet As Decimal
	
	Private _trkBuyClient As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As Double
	
	Private _cropPrice As Double
	
	Private _trkClient As Decimal
	
	Private _delBDet As System.Nullable(Of Boolean)
	
	Private _clientName As String
	
	Private _cropName As String
	
	Private _unitName As String
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _buyDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkBStore As Decimal
	
	Private _buyLoc As String
	
	Private _bStore As String
	
	Private _oneName As String
	
	Private _twoName As String
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
	Private _buyInfo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyDet() As Decimal
		Get
			Return Me._trkBuyDet
		End Get
		Set
			If ((Me._trkBuyDet = value)  _
						= false) Then
				Me._trkBuyDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyClient() As Decimal
		Get
			Return Me._trkBuyClient
		End Get
		Set
			If ((Me._trkBuyClient = value)  _
						= false) Then
				Me._trkBuyClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropPrice", DbType:="Float NOT NULL")>  _
	Public Property cropPrice() As Double
		Get
			Return Me._cropPrice
		End Get
		Set
			If ((Me._cropPrice = value)  _
						= false) Then
				Me._cropPrice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClient", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClient() As Decimal
		Get
			Return Me._trkClient
		End Get
		Set
			If ((Me._trkClient = value)  _
						= false) Then
				Me._trkClient = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delBDet", DbType:="Bit")>  _
	Public Property delBDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delBDet
		End Get
		Set
			If (Me._delBDet.Equals(value) = false) Then
				Me._delBDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clientName", DbType:="NVarChar(50)")>  _
	Public Property clientName() As String
		Get
			Return Me._clientName
		End Get
		Set
			If (String.Equals(Me._clientName, value) = false) Then
				Me._clientName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyDate", DbType:="Date NOT NULL")>  _
	Public Property buyDate() As Date
		Get
			Return Me._buyDate
		End Get
		Set
			If ((Me._buyDate = value)  _
						= false) Then
				Me._buyDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me._bStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me._trkPrs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me._prsName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyInfo", DbType:="NVarChar(MAX)")>  _
	Public Property buyInfo() As String
		Get
			Return Me._buyInfo
		End Get
		Set
			If (String.Equals(Me._buyInfo, value) = false) Then
				Me._buyInfo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.shipment")>  _
Partial Public Class shipment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkShip As Decimal
	
	Private _shipDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkBStore As Decimal
	
	Private _trkArival As Decimal
	
	Private _shpInfo As String
	
	Private _delShip As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkShipChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkShipChanged()
    End Sub
    Partial Private Sub OnshipDateChanging(value As Date)
    End Sub
    Partial Private Sub OnshipDateChanged()
    End Sub
    Partial Private Sub OntrkBuyLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyLocChanged()
    End Sub
    Partial Private Sub OntrkBStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBStoreChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OnshpInfoChanging(value As String)
    End Sub
    Partial Private Sub OnshpInfoChanged()
    End Sub
    Partial Private Sub OndelShipChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelShipChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShip", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkShip() As Decimal
		Get
			Return Me._trkShip
		End Get
		Set
			If ((Me._trkShip = value)  _
						= false) Then
				Me.OntrkShipChanging(value)
				Me.SendPropertyChanging
				Me._trkShip = value
				Me.SendPropertyChanged("trkShip")
				Me.OntrkShipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipDate", DbType:="Date NOT NULL")>  _
	Public Property shipDate() As Date
		Get
			Return Me._shipDate
		End Get
		Set
			If ((Me._shipDate = value)  _
						= false) Then
				Me.OnshipDateChanging(value)
				Me.SendPropertyChanging
				Me._shipDate = value
				Me.SendPropertyChanged("shipDate")
				Me.OnshipDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me.OntrkBuyLocChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyLoc = value
				Me.SendPropertyChanged("trkBuyLoc")
				Me.OntrkBuyLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me.OntrkBStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkBStore = value
				Me.SendPropertyChanged("trkBStore")
				Me.OntrkBStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shpInfo", DbType:="NVarChar(MAX)")>  _
	Public Property shpInfo() As String
		Get
			Return Me._shpInfo
		End Get
		Set
			If (String.Equals(Me._shpInfo, value) = false) Then
				Me.OnshpInfoChanging(value)
				Me.SendPropertyChanging
				Me._shpInfo = value
				Me.SendPropertyChanged("shpInfo")
				Me.OnshpInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delShip", DbType:="Bit")>  _
	Public Property delShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delShip
		End Get
		Set
			If (Me._delShip.Equals(value) = false) Then
				Me.OndelShipChanging(value)
				Me.SendPropertyChanging
				Me._delShip = value
				Me.SendPropertyChanged("delShip")
				Me.OndelShipChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Ship")>  _
Partial Public Class V_Ship
	
	Private _trkShip As Decimal
	
	Private _shipDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkBStore As Decimal
	
	Private _trkArival As Decimal
	
	Private _delShip As System.Nullable(Of Boolean)
	
	Private _buyLoc As String
	
	Private _bStore As String
	
	Private _arivalName As String
	
	Private _shpInfo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShip() As Decimal
		Get
			Return Me._trkShip
		End Get
		Set
			If ((Me._trkShip = value)  _
						= false) Then
				Me._trkShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipDate", DbType:="Date NOT NULL")>  _
	Public Property shipDate() As Date
		Get
			Return Me._shipDate
		End Get
		Set
			If ((Me._shipDate = value)  _
						= false) Then
				Me._shipDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delShip", DbType:="Bit")>  _
	Public Property delShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delShip
		End Get
		Set
			If (Me._delShip.Equals(value) = false) Then
				Me._delShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me._bStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shpInfo", DbType:="NVarChar(MAX)")>  _
	Public Property shpInfo() As String
		Get
			Return Me._shpInfo
		End Get
		Set
			If (String.Equals(Me._shpInfo, value) = false) Then
				Me._shpInfo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.arrive")>  _
Partial Public Class arrive
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkAr As Decimal
	
	Private _arDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkArival As Decimal
	
	Private _delAr As System.Nullable(Of Boolean)
	
	Private _arInfo As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkArChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArChanged()
    End Sub
    Partial Private Sub OnarDateChanging(value As Date)
    End Sub
    Partial Private Sub OnarDateChanged()
    End Sub
    Partial Private Sub OntrkBuyLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkBuyLocChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OndelArChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelArChanged()
    End Sub
    Partial Private Sub OnarInfoChanging(value As String)
    End Sub
    Partial Private Sub OnarInfoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAr", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkAr() As Decimal
		Get
			Return Me._trkAr
		End Get
		Set
			If ((Me._trkAr = value)  _
						= false) Then
				Me.OntrkArChanging(value)
				Me.SendPropertyChanging
				Me._trkAr = value
				Me.SendPropertyChanged("trkAr")
				Me.OntrkArChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arDate", DbType:="Date NOT NULL")>  _
	Public Property arDate() As Date
		Get
			Return Me._arDate
		End Get
		Set
			If ((Me._arDate = value)  _
						= false) Then
				Me.OnarDateChanging(value)
				Me.SendPropertyChanging
				Me._arDate = value
				Me.SendPropertyChanged("arDate")
				Me.OnarDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me.OntrkBuyLocChanging(value)
				Me.SendPropertyChanging
				Me._trkBuyLoc = value
				Me.SendPropertyChanged("trkBuyLoc")
				Me.OntrkBuyLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAr", DbType:="Bit")>  _
	Public Property delAr() As System.Nullable(Of Boolean)
		Get
			Return Me._delAr
		End Get
		Set
			If (Me._delAr.Equals(value) = false) Then
				Me.OndelArChanging(value)
				Me.SendPropertyChanging
				Me._delAr = value
				Me.SendPropertyChanged("delAr")
				Me.OndelArChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arInfo", DbType:="NVarChar(MAX)")>  _
	Public Property arInfo() As String
		Get
			Return Me._arInfo
		End Get
		Set
			If (String.Equals(Me._arInfo, value) = false) Then
				Me.OnarInfoChanging(value)
				Me.SendPropertyChanging
				Me._arInfo = value
				Me.SendPropertyChanged("arInfo")
				Me.OnarInfoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Arrive")>  _
Partial Public Class V_Arrive
	
	Private _trkAr As Decimal
	
	Private _arDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkArival As Decimal
	
	Private _delAr As System.Nullable(Of Boolean)
	
	Private _buyLoc As String
	
	Private _arivalName As String
	
	Private _arInfo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAr() As Decimal
		Get
			Return Me._trkAr
		End Get
		Set
			If ((Me._trkAr = value)  _
						= false) Then
				Me._trkAr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arDate", DbType:="Date NOT NULL")>  _
	Public Property arDate() As Date
		Get
			Return Me._arDate
		End Get
		Set
			If ((Me._arDate = value)  _
						= false) Then
				Me._arDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAr", DbType:="Bit")>  _
	Public Property delAr() As System.Nullable(Of Boolean)
		Get
			Return Me._delAr
		End Get
		Set
			If (Me._delAr.Equals(value) = false) Then
				Me._delAr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arInfo", DbType:="NVarChar(MAX)")>  _
	Public Property arInfo() As String
		Get
			Return Me._arInfo
		End Get
		Set
			If (String.Equals(Me._arInfo, value) = false) Then
				Me._arInfo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.aStoreReq")>  _
Partial Public Class aStoreReq
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkASReq As Decimal
	
	Private _SArDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAStore As Decimal
	
	Private _aStrDet As String
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _trkPrs As Decimal
	
	Private _delAS As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkASReqChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkASReqChanged()
    End Sub
    Partial Private Sub OnSArDateChanging(value As Date)
    End Sub
    Partial Private Sub OnSArDateChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OntrkAStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkAStoreChanged()
    End Sub
    Partial Private Sub OnaStrDetChanging(value As String)
    End Sub
    Partial Private Sub OnaStrDetChanged()
    End Sub
    Partial Private Sub OnisLocalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnisLocalChanged()
    End Sub
    Partial Private Sub OntrkClntCrpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkClntCrpChanged()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OndelASChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelASChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASReq", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkASReq() As Decimal
		Get
			Return Me._trkASReq
		End Get
		Set
			If ((Me._trkASReq = value)  _
						= false) Then
				Me.OntrkASReqChanging(value)
				Me.SendPropertyChanging
				Me._trkASReq = value
				Me.SendPropertyChanged("trkASReq")
				Me.OntrkASReqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SArDate", DbType:="Date NOT NULL")>  _
	Public Property SArDate() As Date
		Get
			Return Me._SArDate
		End Get
		Set
			If ((Me._SArDate = value)  _
						= false) Then
				Me.OnSArDateChanging(value)
				Me.SendPropertyChanging
				Me._SArDate = value
				Me.SendPropertyChanged("SArDate")
				Me.OnSArDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me.OntrkAStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkAStore = value
				Me.SendPropertyChanged("trkAStore")
				Me.OntrkAStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStrDet", DbType:="NVarChar(MAX)")>  _
	Public Property aStrDet() As String
		Get
			Return Me._aStrDet
		End Get
		Set
			If (String.Equals(Me._aStrDet, value) = false) Then
				Me.OnaStrDetChanging(value)
				Me.SendPropertyChanging
				Me._aStrDet = value
				Me.SendPropertyChanged("aStrDet")
				Me.OnaStrDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me.OnisLocalChanging(value)
				Me.SendPropertyChanging
				Me._isLocal = value
				Me.SendPropertyChanged("isLocal")
				Me.OnisLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me.OntrkClntCrpChanging(value)
				Me.SendPropertyChanging
				Me._trkClntCrp = value
				Me.SendPropertyChanged("trkClntCrp")
				Me.OntrkClntCrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAS", DbType:="Bit")>  _
	Public Property delAS() As System.Nullable(Of Boolean)
		Get
			Return Me._delAS
		End Get
		Set
			If (Me._delAS.Equals(value) = false) Then
				Me.OndelASChanging(value)
				Me.SendPropertyChanging
				Me._delAS = value
				Me.SendPropertyChanged("delAS")
				Me.OndelASChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.aStoreDet")>  _
Partial Public Class aStoreDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkASDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkASReq As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delASDet As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkASDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkASDetChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OnaStockChanging(value As Double)
    End Sub
    Partial Private Sub OnaStockChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OntrkASReqChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkASReqChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelASDetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelASDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkASDet() As Decimal
		Get
			Return Me._trkASDet
		End Get
		Set
			If ((Me._trkASDet = value)  _
						= false) Then
				Me.OntrkASDetChanging(value)
				Me.SendPropertyChanging
				Me._trkASDet = value
				Me.SendPropertyChanged("trkASDet")
				Me.OntrkASDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me.OnaStockChanging(value)
				Me.SendPropertyChanging
				Me._aStock = value
				Me.SendPropertyChanged("aStock")
				Me.OnaStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASReq", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkASReq() As Decimal
		Get
			Return Me._trkASReq
		End Get
		Set
			If ((Me._trkASReq = value)  _
						= false) Then
				Me.OntrkASReqChanging(value)
				Me.SendPropertyChanging
				Me._trkASReq = value
				Me.SendPropertyChanged("trkASReq")
				Me.OntrkASReqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delASDet", DbType:="Bit")>  _
	Public Property delASDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delASDet
		End Get
		Set
			If (Me._delASDet.Equals(value) = false) Then
				Me.OndelASDetChanging(value)
				Me.SendPropertyChanging
				Me._delASDet = value
				Me.SendPropertyChanged("delASDet")
				Me.OndelASDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_aStoreReq")>  _
Partial Public Class V_aStoreReq
	
	Private _trkASReq As Decimal
	
	Private _SArDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAStore As Decimal
	
	Private _delAS As System.Nullable(Of Boolean)
	
	Private _arivalName As String
	
	Private _AStore As String
	
	Private _aStrDet As String
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _clntCrpName As String
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASReq", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkASReq() As Decimal
		Get
			Return Me._trkASReq
		End Get
		Set
			If ((Me._trkASReq = value)  _
						= false) Then
				Me._trkASReq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SArDate", DbType:="Date NOT NULL")>  _
	Public Property SArDate() As Date
		Get
			Return Me._SArDate
		End Get
		Set
			If ((Me._SArDate = value)  _
						= false) Then
				Me._SArDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me._trkAStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAS", DbType:="Bit")>  _
	Public Property delAS() As System.Nullable(Of Boolean)
		Get
			Return Me._delAS
		End Get
		Set
			If (Me._delAS.Equals(value) = false) Then
				Me._delAS = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStrDet", DbType:="NVarChar(MAX)")>  _
	Public Property aStrDet() As String
		Get
			Return Me._aStrDet
		End Get
		Set
			If (String.Equals(Me._aStrDet, value) = false) Then
				Me._aStrDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me._trkPrs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me._prsName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ArvStr")>  _
Partial Public Class V_ArvStr
	
	Private _trkASDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _trkASReq As Decimal
	
	Private _SArDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAStore As Decimal
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _weight As Double
	
	Private _cropName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _clntName As String
	
	Private _arivalName As String
	
	Private _AStore As String
	
	Private _unitName As String
	
	Private _trkPrs As Decimal
	
	Private _clntCrpName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkASDet() As Decimal
		Get
			Return Me._trkASDet
		End Get
		Set
			If ((Me._trkASDet = value)  _
						= false) Then
				Me._trkASDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me._aStock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkASReq", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkASReq() As Decimal
		Get
			Return Me._trkASReq
		End Get
		Set
			If ((Me._trkASReq = value)  _
						= false) Then
				Me._trkASReq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SArDate", DbType:="Date NOT NULL")>  _
	Public Property SArDate() As Date
		Get
			Return Me._SArDate
		End Get
		Set
			If ((Me._SArDate = value)  _
						= false) Then
				Me._SArDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me._trkAStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntName() As String
		Get
			Return Me._clntName
		End Get
		Set
			If (String.Equals(Me._clntName, value) = false) Then
				Me._clntName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me._trkPrs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.outPrd")>  _
Partial Public Class outPrd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkOutPrd As Decimal
	
	Private _oPrdDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAStore As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _outInfo As String
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _delOPrd As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkOutPrdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkOutPrdChanged()
    End Sub
    Partial Private Sub OnoPrdDateChanging(value As Date)
    End Sub
    Partial Private Sub OnoPrdDateChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OntrkAStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkAStoreChanged()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OnoutInfoChanging(value As String)
    End Sub
    Partial Private Sub OnoutInfoChanged()
    End Sub
    Partial Private Sub OnisLocalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnisLocalChanged()
    End Sub
    Partial Private Sub OntrkClntCrpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkClntCrpChanged()
    End Sub
    Partial Private Sub OndelOPrdChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelOPrdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkOutPrd", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkOutPrd() As Decimal
		Get
			Return Me._trkOutPrd
		End Get
		Set
			If ((Me._trkOutPrd = value)  _
						= false) Then
				Me.OntrkOutPrdChanging(value)
				Me.SendPropertyChanging
				Me._trkOutPrd = value
				Me.SendPropertyChanged("trkOutPrd")
				Me.OntrkOutPrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oPrdDate", DbType:="Date NOT NULL")>  _
	Public Property oPrdDate() As Date
		Get
			Return Me._oPrdDate
		End Get
		Set
			If ((Me._oPrdDate = value)  _
						= false) Then
				Me.OnoPrdDateChanging(value)
				Me.SendPropertyChanging
				Me._oPrdDate = value
				Me.SendPropertyChanged("oPrdDate")
				Me.OnoPrdDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me.OntrkAStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkAStore = value
				Me.SendPropertyChanged("trkAStore")
				Me.OntrkAStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_outInfo", DbType:="NVarChar(MAX)")>  _
	Public Property outInfo() As String
		Get
			Return Me._outInfo
		End Get
		Set
			If (String.Equals(Me._outInfo, value) = false) Then
				Me.OnoutInfoChanging(value)
				Me.SendPropertyChanging
				Me._outInfo = value
				Me.SendPropertyChanged("outInfo")
				Me.OnoutInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me.OnisLocalChanging(value)
				Me.SendPropertyChanging
				Me._isLocal = value
				Me.SendPropertyChanged("isLocal")
				Me.OnisLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me.OntrkClntCrpChanging(value)
				Me.SendPropertyChanging
				Me._trkClntCrp = value
				Me.SendPropertyChanged("trkClntCrp")
				Me.OntrkClntCrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delOPrd", DbType:="Bit")>  _
	Public Property delOPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delOPrd
		End Get
		Set
			If (Me._delOPrd.Equals(value) = false) Then
				Me.OndelOPrdChanging(value)
				Me.SendPropertyChanging
				Me._delOPrd = value
				Me.SendPropertyChanged("delOPrd")
				Me.OndelOPrdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.outPrdDet")>  _
Partial Public Class outPrdDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkPrdDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _amount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkOutPrd As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delPrd As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkPrdDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrdDetChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As Double)
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OntrkOutPrdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkOutPrdChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelPrdChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelPrdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrdDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkPrdDet() As Decimal
		Get
			Return Me._trkPrdDet
		End Get
		Set
			If ((Me._trkPrdDet = value)  _
						= false) Then
				Me.OntrkPrdDetChanging(value)
				Me.SendPropertyChanging
				Me._trkPrdDet = value
				Me.SendPropertyChanged("trkPrdDet")
				Me.OntrkPrdDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkOutPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkOutPrd() As Decimal
		Get
			Return Me._trkOutPrd
		End Get
		Set
			If ((Me._trkOutPrd = value)  _
						= false) Then
				Me.OntrkOutPrdChanging(value)
				Me.SendPropertyChanging
				Me._trkOutPrd = value
				Me.SendPropertyChanged("trkOutPrd")
				Me.OntrkOutPrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delPrd", DbType:="Bit")>  _
	Public Property delPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delPrd
		End Get
		Set
			If (Me._delPrd.Equals(value) = false) Then
				Me.OndelPrdChanging(value)
				Me.SendPropertyChanging
				Me._delPrd = value
				Me.SendPropertyChanged("delPrd")
				Me.OndelPrdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_OutPrd")>  _
Partial Public Class V_OutPrd
	
	Private _trkOutPrd As Decimal
	
	Private _oPrdDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAStore As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _delOPrd As System.Nullable(Of Boolean)
	
	Private _arivalName As String
	
	Private _AStore As String
	
	Private _peelerName As String
	
	Private _outInfo As String
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _clntCrpName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkOutPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkOutPrd() As Decimal
		Get
			Return Me._trkOutPrd
		End Get
		Set
			If ((Me._trkOutPrd = value)  _
						= false) Then
				Me._trkOutPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oPrdDate", DbType:="Date NOT NULL")>  _
	Public Property oPrdDate() As Date
		Get
			Return Me._oPrdDate
		End Get
		Set
			If ((Me._oPrdDate = value)  _
						= false) Then
				Me._oPrdDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me._trkAStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delOPrd", DbType:="Bit")>  _
	Public Property delOPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delOPrd
		End Get
		Set
			If (Me._delOPrd.Equals(value) = false) Then
				Me._delOPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_outInfo", DbType:="NVarChar(MAX)")>  _
	Public Property outInfo() As String
		Get
			Return Me._outInfo
		End Get
		Set
			If (String.Equals(Me._outInfo, value) = false) Then
				Me._outInfo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.toPrd")>  _
Partial Public Class toPrd
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkToPrd As Decimal
	
	Private _toPrdDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _trkCrop As Decimal
	
	Private _cropAmt As Double
	
	Private _trashAmt As System.Nullable(Of Double)
	
	Private _cropUnit As Decimal
	
	Private _toInfo As String
	
	Private _crpUntOne As System.Nullable(Of Decimal)
	
	Private _crpAmtOne As System.Nullable(Of Double)
	
	Private _crpUntTwo As System.Nullable(Of Decimal)
	
	Private _crpAmtTwo As System.Nullable(Of Double)
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _delToPrd As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkToPrdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkToPrdChanged()
    End Sub
    Partial Private Sub OntoPrdDateChanging(value As Date)
    End Sub
    Partial Private Sub OntoPrdDateChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OncropAmtChanging(value As Double)
    End Sub
    Partial Private Sub OncropAmtChanged()
    End Sub
    Partial Private Sub OntrashAmtChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OntrashAmtChanged()
    End Sub
    Partial Private Sub OncropUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OncropUnitChanged()
    End Sub
    Partial Private Sub OntoInfoChanging(value As String)
    End Sub
    Partial Private Sub OntoInfoChanged()
    End Sub
    Partial Private Sub OncrpUntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncrpUntOneChanged()
    End Sub
    Partial Private Sub OncrpAmtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OncrpAmtOneChanged()
    End Sub
    Partial Private Sub OncrpUntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncrpUntTwoChanged()
    End Sub
    Partial Private Sub OncrpAmtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OncrpAmtTwoChanged()
    End Sub
    Partial Private Sub OnisLocalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnisLocalChanged()
    End Sub
    Partial Private Sub OntrkClntCrpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkClntCrpChanged()
    End Sub
    Partial Private Sub OndelToPrdChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelToPrdChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me.OntrkToPrdChanging(value)
				Me.SendPropertyChanging
				Me._trkToPrd = value
				Me.SendPropertyChanged("trkToPrd")
				Me.OntrkToPrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_toPrdDate", DbType:="Date NOT NULL")>  _
	Public Property toPrdDate() As Date
		Get
			Return Me._toPrdDate
		End Get
		Set
			If ((Me._toPrdDate = value)  _
						= false) Then
				Me.OntoPrdDateChanging(value)
				Me.SendPropertyChanging
				Me._toPrdDate = value
				Me.SendPropertyChanged("toPrdDate")
				Me.OntoPrdDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropAmt", DbType:="Float NOT NULL")>  _
	Public Property cropAmt() As Double
		Get
			Return Me._cropAmt
		End Get
		Set
			If ((Me._cropAmt = value)  _
						= false) Then
				Me.OncropAmtChanging(value)
				Me.SendPropertyChanging
				Me._cropAmt = value
				Me.SendPropertyChanged("cropAmt")
				Me.OncropAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trashAmt", DbType:="Float")>  _
	Public Property trashAmt() As System.Nullable(Of Double)
		Get
			Return Me._trashAmt
		End Get
		Set
			If (Me._trashAmt.Equals(value) = false) Then
				Me.OntrashAmtChanging(value)
				Me.SendPropertyChanging
				Me._trashAmt = value
				Me.SendPropertyChanged("trashAmt")
				Me.OntrashAmtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property cropUnit() As Decimal
		Get
			Return Me._cropUnit
		End Get
		Set
			If ((Me._cropUnit = value)  _
						= false) Then
				Me.OncropUnitChanging(value)
				Me.SendPropertyChanging
				Me._cropUnit = value
				Me.SendPropertyChanged("cropUnit")
				Me.OncropUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_toInfo", DbType:="NVarChar(MAX)")>  _
	Public Property toInfo() As String
		Get
			Return Me._toInfo
		End Get
		Set
			If (String.Equals(Me._toInfo, value) = false) Then
				Me.OntoInfoChanging(value)
				Me.SendPropertyChanging
				Me._toInfo = value
				Me.SendPropertyChanged("toInfo")
				Me.OntoInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpUntOne", DbType:="Decimal(18,0)")>  _
	Public Property crpUntOne() As System.Nullable(Of Decimal)
		Get
			Return Me._crpUntOne
		End Get
		Set
			If (Me._crpUntOne.Equals(value) = false) Then
				Me.OncrpUntOneChanging(value)
				Me.SendPropertyChanging
				Me._crpUntOne = value
				Me.SendPropertyChanged("crpUntOne")
				Me.OncrpUntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpAmtOne", DbType:="Float")>  _
	Public Property crpAmtOne() As System.Nullable(Of Double)
		Get
			Return Me._crpAmtOne
		End Get
		Set
			If (Me._crpAmtOne.Equals(value) = false) Then
				Me.OncrpAmtOneChanging(value)
				Me.SendPropertyChanging
				Me._crpAmtOne = value
				Me.SendPropertyChanged("crpAmtOne")
				Me.OncrpAmtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpUntTwo", DbType:="Decimal(18,0)")>  _
	Public Property crpUntTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._crpUntTwo
		End Get
		Set
			If (Me._crpUntTwo.Equals(value) = false) Then
				Me.OncrpUntTwoChanging(value)
				Me.SendPropertyChanging
				Me._crpUntTwo = value
				Me.SendPropertyChanged("crpUntTwo")
				Me.OncrpUntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpAmtTwo", DbType:="Float")>  _
	Public Property crpAmtTwo() As System.Nullable(Of Double)
		Get
			Return Me._crpAmtTwo
		End Get
		Set
			If (Me._crpAmtTwo.Equals(value) = false) Then
				Me.OncrpAmtTwoChanging(value)
				Me.SendPropertyChanging
				Me._crpAmtTwo = value
				Me.SendPropertyChanged("crpAmtTwo")
				Me.OncrpAmtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me.OnisLocalChanging(value)
				Me.SendPropertyChanging
				Me._isLocal = value
				Me.SendPropertyChanged("isLocal")
				Me.OnisLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me.OntrkClntCrpChanging(value)
				Me.SendPropertyChanging
				Me._trkClntCrp = value
				Me.SendPropertyChanged("trkClntCrp")
				Me.OntrkClntCrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delToPrd", DbType:="Bit")>  _
	Public Property delToPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delToPrd
		End Get
		Set
			If (Me._delToPrd.Equals(value) = false) Then
				Me.OndelToPrdChanging(value)
				Me.SendPropertyChanging
				Me._delToPrd = value
				Me.SendPropertyChanged("delToPrd")
				Me.OndelToPrdChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.toPrdDet")>  _
Partial Public Class toPrdDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkToDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _amount As Double
	
	Private _weight As Double
	
	Private _trkUnit As Decimal
	
	Private _trkToPrd As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delToDet As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkToDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkToDetChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As Double)
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OntrkToPrdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkToPrdChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelToDetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelToDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkToDet() As Decimal
		Get
			Return Me._trkToDet
		End Get
		Set
			If ((Me._trkToDet = value)  _
						= false) Then
				Me.OntrkToDetChanging(value)
				Me.SendPropertyChanging
				Me._trkToDet = value
				Me.SendPropertyChanged("trkToDet")
				Me.OntrkToDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me.OntrkToPrdChanging(value)
				Me.SendPropertyChanging
				Me._trkToPrd = value
				Me.SendPropertyChanged("trkToPrd")
				Me.OntrkToPrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delToDet", DbType:="Bit")>  _
	Public Property delToDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delToDet
		End Get
		Set
			If (Me._delToDet.Equals(value) = false) Then
				Me.OndelToDetChanging(value)
				Me.SendPropertyChanging
				Me._delToDet = value
				Me.SendPropertyChanged("delToDet")
				Me.OndelToDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_toPrdDet")>  _
Partial Public Class V_toPrdDet
	
	Private _trkToDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _amount As Double
	
	Private _trkUnit As Decimal
	
	Private _trkToPrd As Decimal
	
	Private _delToDet As System.Nullable(Of Boolean)
	
	Private _prodName As String
	
	Private _unitName As String
	
	Private _toPrdDate As Date
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _clntCrpName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToDet() As Decimal
		Get
			Return Me._trkToDet
		End Get
		Set
			If ((Me._trkToDet = value)  _
						= false) Then
				Me._trkToDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delToDet", DbType:="Bit")>  _
	Public Property delToDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delToDet
		End Get
		Set
			If (Me._delToDet.Equals(value) = false) Then
				Me._delToDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_toPrdDate", DbType:="Date NOT NULL")>  _
	Public Property toPrdDate() As Date
		Get
			Return Me._toPrdDate
		End Get
		Set
			If ((Me._toPrdDate = value)  _
						= false) Then
				Me._toPrdDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.saleDet")>  _
Partial Public Class saleDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkSaleDet As Decimal
	
	Private _trkSale As Decimal
	
	Private _trkProd As Decimal
	
	Private _Amount As Double
	
	Private _trkUnit As Decimal
	
	Private _price As Double
	
	Private _Weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delSaleDet As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkSaleDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkSaleDetChanged()
    End Sub
    Partial Private Sub OntrkSaleChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkSaleChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnAmountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnpriceChanging(value As Double)
    End Sub
    Partial Private Sub OnpriceChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As Double)
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelSaleDetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelSaleDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSaleDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkSaleDet() As Decimal
		Get
			Return Me._trkSaleDet
		End Get
		Set
			If ((Me._trkSaleDet = value)  _
						= false) Then
				Me.OntrkSaleDetChanging(value)
				Me.SendPropertyChanging
				Me._trkSaleDet = value
				Me.SendPropertyChanged("trkSaleDet")
				Me.OntrkSaleDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSale", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkSale() As Decimal
		Get
			Return Me._trkSale
		End Get
		Set
			If ((Me._trkSale = value)  _
						= false) Then
				Me.OntrkSaleChanging(value)
				Me.SendPropertyChanging
				Me._trkSale = value
				Me.SendPropertyChanged("trkSale")
				Me.OntrkSaleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Float NOT NULL")>  _
	Public Property Amount() As Double
		Get
			Return Me._Amount
		End Get
		Set
			If ((Me._Amount = value)  _
						= false) Then
				Me.OnAmountChanging(value)
				Me.SendPropertyChanging
				Me._Amount = value
				Me.SendPropertyChanged("Amount")
				Me.OnAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Float NOT NULL")>  _
	Public Property price() As Double
		Get
			Return Me._price
		End Get
		Set
			If ((Me._price = value)  _
						= false) Then
				Me.OnpriceChanging(value)
				Me.SendPropertyChanging
				Me._price = value
				Me.SendPropertyChanged("price")
				Me.OnpriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Float NOT NULL")>  _
	Public Property Weight() As Double
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me.OnWeightChanging(value)
				Me.SendPropertyChanging
				Me._Weight = value
				Me.SendPropertyChanged("Weight")
				Me.OnWeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSaleDet", DbType:="Bit")>  _
	Public Property delSaleDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delSaleDet
		End Get
		Set
			If (Me._delSaleDet.Equals(value) = false) Then
				Me.OndelSaleDetChanging(value)
				Me.SendPropertyChanging
				Me._delSaleDet = value
				Me.SendPropertyChanged("delSaleDet")
				Me.OndelSaleDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.receive")>  _
Partial Public Class receive
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkRecv As Decimal
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _recvDate As Date
	
	Private _trkAPrdStr As Decimal
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _trkToPrd As Decimal
	
	Private _trkPrs As Decimal
	
	Private _recvInf As String
	
	Private _delRecv As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkRecvChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkRecvChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OnrecvDateChanging(value As Date)
    End Sub
    Partial Private Sub OnrecvDateChanged()
    End Sub
    Partial Private Sub OntrkAPrdStrChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkAPrdStrChanged()
    End Sub
    Partial Private Sub OnisLocalChanging(value As Boolean)
    End Sub
    Partial Private Sub OnisLocalChanged()
    End Sub
    Partial Private Sub OntrkClntCrpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkClntCrpChanged()
    End Sub
    Partial Private Sub OntrkToPrdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkToPrdChanged()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OnrecvInfChanging(value As String)
    End Sub
    Partial Private Sub OnrecvInfChanged()
    End Sub
    Partial Private Sub OndelRecvChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelRecvChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecv", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkRecv() As Decimal
		Get
			Return Me._trkRecv
		End Get
		Set
			If ((Me._trkRecv = value)  _
						= false) Then
				Me.OntrkRecvChanging(value)
				Me.SendPropertyChanging
				Me._trkRecv = value
				Me.SendPropertyChanged("trkRecv")
				Me.OntrkRecvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recvDate", DbType:="Date NOT NULL")>  _
	Public Property recvDate() As Date
		Get
			Return Me._recvDate
		End Get
		Set
			If ((Me._recvDate = value)  _
						= false) Then
				Me.OnrecvDateChanging(value)
				Me.SendPropertyChanging
				Me._recvDate = value
				Me.SendPropertyChanged("recvDate")
				Me.OnrecvDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me.OntrkAPrdStrChanging(value)
				Me.SendPropertyChanging
				Me._trkAPrdStr = value
				Me.SendPropertyChanged("trkAPrdStr")
				Me.OntrkAPrdStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me.OnisLocalChanging(value)
				Me.SendPropertyChanging
				Me._isLocal = value
				Me.SendPropertyChanged("isLocal")
				Me.OnisLocalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me.OntrkClntCrpChanging(value)
				Me.SendPropertyChanging
				Me._trkClntCrp = value
				Me.SendPropertyChanged("trkClntCrp")
				Me.OntrkClntCrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me.OntrkToPrdChanging(value)
				Me.SendPropertyChanging
				Me._trkToPrd = value
				Me.SendPropertyChanged("trkToPrd")
				Me.OntrkToPrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recvInf", DbType:="NVarChar(MAX)")>  _
	Public Property recvInf() As String
		Get
			Return Me._recvInf
		End Get
		Set
			If (String.Equals(Me._recvInf, value) = false) Then
				Me.OnrecvInfChanging(value)
				Me.SendPropertyChanging
				Me._recvInf = value
				Me.SendPropertyChanged("recvInf")
				Me.OnrecvInfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delRecv", DbType:="Bit NOT NULL")>  _
	Public Property delRecv() As Boolean
		Get
			Return Me._delRecv
		End Get
		Set
			If ((Me._delRecv = value)  _
						= false) Then
				Me.OndelRecvChanging(value)
				Me.SendPropertyChanging
				Me._delRecv = value
				Me.SendPropertyChanged("delRecv")
				Me.OndelRecvChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.receiveDet")>  _
Partial Public Class receiveDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkRecvDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _amount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkRecv As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delRecDet As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkRecvDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkRecvDetChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As Double)
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OntrkRecvChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkRecvChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelRecDetChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelRecDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecvDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkRecvDet() As Decimal
		Get
			Return Me._trkRecvDet
		End Get
		Set
			If ((Me._trkRecvDet = value)  _
						= false) Then
				Me.OntrkRecvDetChanging(value)
				Me.SendPropertyChanging
				Me._trkRecvDet = value
				Me.SendPropertyChanged("trkRecvDet")
				Me.OntrkRecvDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecv", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkRecv() As Decimal
		Get
			Return Me._trkRecv
		End Get
		Set
			If ((Me._trkRecv = value)  _
						= false) Then
				Me.OntrkRecvChanging(value)
				Me.SendPropertyChanging
				Me._trkRecv = value
				Me.SendPropertyChanged("trkRecv")
				Me.OntrkRecvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delRecDet", DbType:="Bit NOT NULL")>  _
	Public Property delRecDet() As Boolean
		Get
			Return Me._delRecDet
		End Get
		Set
			If ((Me._delRecDet = value)  _
						= false) Then
				Me.OndelRecDetChanging(value)
				Me.SendPropertyChanging
				Me._delRecDet = value
				Me.SendPropertyChanged("delRecDet")
				Me.OndelRecDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Receive")>  _
Partial Public Class V_Receive
	
	Private _trkRecv As Decimal
	
	Private _trkArival As Decimal
	
	Private _recvDate As Date
	
	Private _trkAPrdStr As Decimal
	
	Private _delRecv As Boolean
	
	Private _arivalName As String
	
	Private _APrdStr As String
	
	Private _recvInf As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _clntCrpName As String
	
	Private _trkToPrd As Decimal
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecv", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkRecv() As Decimal
		Get
			Return Me._trkRecv
		End Get
		Set
			If ((Me._trkRecv = value)  _
						= false) Then
				Me._trkRecv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recvDate", DbType:="Date NOT NULL")>  _
	Public Property recvDate() As Date
		Get
			Return Me._recvDate
		End Get
		Set
			If ((Me._recvDate = value)  _
						= false) Then
				Me._recvDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delRecv", DbType:="Bit NOT NULL")>  _
	Public Property delRecv() As Boolean
		Get
			Return Me._delRecv
		End Get
		Set
			If ((Me._delRecv = value)  _
						= false) Then
				Me._delRecv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50)")>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recvInf", DbType:="NVarChar(MAX)")>  _
	Public Property recvInf() As String
		Get
			Return Me._recvInf
		End Get
		Set
			If (String.Equals(Me._recvInf, value) = false) Then
				Me._recvInf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me._trkPrs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me._prsName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RecvDet")>  _
Partial Public Class V_RecvDet
	
	Private _trkRecvDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _amount As Double
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _trkRecv As Decimal
	
	Private _recvDate As Date
	
	Private _trkUnit As Decimal
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _prodName As String
	
	Private _unitName As String
	
	Private _weight As Double
	
	Private _clntCrpName As String
	
	Private _arivalName As String
	
	Private _trkAPrdStr As Decimal
	
	Private _APrdStr As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _trkToPrd As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecvDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkRecvDet() As Decimal
		Get
			Return Me._trkRecvDet
		End Get
		Set
			If ((Me._trkRecvDet = value)  _
						= false) Then
				Me._trkRecvDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecv", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkRecv() As Decimal
		Get
			Return Me._trkRecv
		End Get
		Set
			If ((Me._trkRecv = value)  _
						= false) Then
				Me._trkRecv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_recvDate", DbType:="Date NOT NULL")>  _
	Public Property recvDate() As Date
		Get
			Return Me._recvDate
		End Get
		Set
			If ((Me._recvDate = value)  _
						= false) Then
				Me._recvDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50)")>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50)")>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50)")>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.expShip")>  _
Partial Public Class expShip
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkExpShip As Decimal
	
	Private _expShipDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAPrdStr As System.Nullable(Of Decimal)
	
	Private _trkPeeler As System.Nullable(Of Decimal)
	
	Private _trkPStore As System.Nullable(Of Decimal)
	
	Private _trkToPrd As System.Nullable(Of Decimal)
	
	Private _trkExpLoc As Decimal
	
	Private _expShpInf As String
	
	Private _delExpShip As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkExpShipChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpShipChanged()
    End Sub
    Partial Private Sub OnexpShipDateChanging(value As Date)
    End Sub
    Partial Private Sub OnexpShipDateChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OntrkAPrdStrChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkAPrdStrChanged()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OntrkPStoreChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkPStoreChanged()
    End Sub
    Partial Private Sub OntrkToPrdChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkToPrdChanged()
    End Sub
    Partial Private Sub OntrkExpLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpLocChanged()
    End Sub
    Partial Private Sub OnexpShpInfChanging(value As String)
    End Sub
    Partial Private Sub OnexpShpInfChanged()
    End Sub
    Partial Private Sub OndelExpShipChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelExpShipChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me.OntrkExpShipChanging(value)
				Me.SendPropertyChanging
				Me._trkExpShip = value
				Me.SendPropertyChanged("trkExpShip")
				Me.OntrkExpShipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShipDate", DbType:="Date NOT NULL")>  _
	Public Property expShipDate() As Date
		Get
			Return Me._expShipDate
		End Get
		Set
			If ((Me._expShipDate = value)  _
						= false) Then
				Me.OnexpShipDateChanging(value)
				Me.SendPropertyChanging
				Me._expShipDate = value
				Me.SendPropertyChanged("expShipDate")
				Me.OnexpShipDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0)")>  _
	Public Property trkAPrdStr() As System.Nullable(Of Decimal)
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If (Me._trkAPrdStr.Equals(value) = false) Then
				Me.OntrkAPrdStrChanging(value)
				Me.SendPropertyChanging
				Me._trkAPrdStr = value
				Me.SendPropertyChanged("trkAPrdStr")
				Me.OntrkAPrdStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0)")>  _
	Public Property trkPeeler() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPeeler
		End Get
		Set
			If (Me._trkPeeler.Equals(value) = false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPStore", DbType:="Decimal(18,0)")>  _
	Public Property trkPStore() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPStore
		End Get
		Set
			If (Me._trkPStore.Equals(value) = false) Then
				Me.OntrkPStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkPStore = value
				Me.SendPropertyChanged("trkPStore")
				Me.OntrkPStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0)")>  _
	Public Property trkToPrd() As System.Nullable(Of Decimal)
		Get
			Return Me._trkToPrd
		End Get
		Set
			If (Me._trkToPrd.Equals(value) = false) Then
				Me.OntrkToPrdChanging(value)
				Me.SendPropertyChanging
				Me._trkToPrd = value
				Me.SendPropertyChanged("trkToPrd")
				Me.OntrkToPrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me.OntrkExpLocChanging(value)
				Me.SendPropertyChanging
				Me._trkExpLoc = value
				Me.SendPropertyChanged("trkExpLoc")
				Me.OntrkExpLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShpInf", DbType:="NVarChar(MAX)")>  _
	Public Property expShpInf() As String
		Get
			Return Me._expShpInf
		End Get
		Set
			If (String.Equals(Me._expShpInf, value) = false) Then
				Me.OnexpShpInfChanging(value)
				Me.SendPropertyChanging
				Me._expShpInf = value
				Me.SendPropertyChanged("expShpInf")
				Me.OnexpShpInfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExpShip", DbType:="Bit")>  _
	Public Property delExpShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delExpShip
		End Get
		Set
			If (Me._delExpShip.Equals(value) = false) Then
				Me.OndelExpShipChanging(value)
				Me.SendPropertyChanging
				Me._delExpShip = value
				Me.SendPropertyChanged("delExpShip")
				Me.OndelExpShipChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_expShip")>  _
Partial Public Class V_expShip
	
	Private _trkExpShip As Decimal
	
	Private _expShipDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkAPrdStr As System.Nullable(Of Decimal)
	
	Private _trkPeeler As System.Nullable(Of Decimal)
	
	Private _trkPStore As System.Nullable(Of Decimal)
	
	Private _trkToPrd As System.Nullable(Of Decimal)
	
	Private _trkExpLoc As Decimal
	
	Private _delExpShip As System.Nullable(Of Boolean)
	
	Private _arivalName As String
	
	Private _peelerName As String
	
	Private _expName As String
	
	Private _expShpInf As String
	
	Private _APrdStr As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me._trkExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShipDate", DbType:="Date NOT NULL")>  _
	Public Property expShipDate() As Date
		Get
			Return Me._expShipDate
		End Get
		Set
			If ((Me._expShipDate = value)  _
						= false) Then
				Me._expShipDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0)")>  _
	Public Property trkAPrdStr() As System.Nullable(Of Decimal)
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If (Me._trkAPrdStr.Equals(value) = false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0)")>  _
	Public Property trkPeeler() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPeeler
		End Get
		Set
			If (Me._trkPeeler.Equals(value) = false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPStore", DbType:="Decimal(18,0)")>  _
	Public Property trkPStore() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPStore
		End Get
		Set
			If (Me._trkPStore.Equals(value) = false) Then
				Me._trkPStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0)")>  _
	Public Property trkToPrd() As System.Nullable(Of Decimal)
		Get
			Return Me._trkToPrd
		End Get
		Set
			If (Me._trkToPrd.Equals(value) = false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me._trkExpLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExpShip", DbType:="Bit")>  _
	Public Property delExpShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delExpShip
		End Get
		Set
			If (Me._delExpShip.Equals(value) = false) Then
				Me._delExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShpInf", DbType:="NVarChar(MAX)")>  _
	Public Property expShpInf() As String
		Get
			Return Me._expShpInf
		End Get
		Set
			If (String.Equals(Me._expShpInf, value) = false) Then
				Me._expShpInf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.receiveClnt")>  _
Partial Public Class receiveClnt
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkClntRecv As Decimal
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _ClntRecvDate As Date
	
	Private _trkAPrdStr As Decimal
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _trkToPrd As Decimal
	
	Private _ClntRecvInf As String
	
	Private _delClntRecv As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkClntRecvChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkClntRecvChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OnClntRecvDateChanging(value As Date)
    End Sub
    Partial Private Sub OnClntRecvDateChanged()
    End Sub
    Partial Private Sub OntrkAPrdStrChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkAPrdStrChanged()
    End Sub
    Partial Private Sub OntrkClntCrpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntrkClntCrpChanged()
    End Sub
    Partial Private Sub OntrkToPrdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkToPrdChanged()
    End Sub
    Partial Private Sub OnClntRecvInfChanging(value As String)
    End Sub
    Partial Private Sub OnClntRecvInfChanged()
    End Sub
    Partial Private Sub OndelClntRecvChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelClntRecvChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntRecv", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkClntRecv() As Decimal
		Get
			Return Me._trkClntRecv
		End Get
		Set
			If ((Me._trkClntRecv = value)  _
						= false) Then
				Me.OntrkClntRecvChanging(value)
				Me.SendPropertyChanging
				Me._trkClntRecv = value
				Me.SendPropertyChanged("trkClntRecv")
				Me.OntrkClntRecvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntRecvDate", DbType:="Date NOT NULL")>  _
	Public Property ClntRecvDate() As Date
		Get
			Return Me._ClntRecvDate
		End Get
		Set
			If ((Me._ClntRecvDate = value)  _
						= false) Then
				Me.OnClntRecvDateChanging(value)
				Me.SendPropertyChanging
				Me._ClntRecvDate = value
				Me.SendPropertyChanged("ClntRecvDate")
				Me.OnClntRecvDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me.OntrkAPrdStrChanging(value)
				Me.SendPropertyChanging
				Me._trkAPrdStr = value
				Me.SendPropertyChanged("trkAPrdStr")
				Me.OntrkAPrdStrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me.OntrkClntCrpChanging(value)
				Me.SendPropertyChanging
				Me._trkClntCrp = value
				Me.SendPropertyChanged("trkClntCrp")
				Me.OntrkClntCrpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me.OntrkToPrdChanging(value)
				Me.SendPropertyChanging
				Me._trkToPrd = value
				Me.SendPropertyChanged("trkToPrd")
				Me.OntrkToPrdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntRecvInf", DbType:="NVarChar(MAX)")>  _
	Public Property ClntRecvInf() As String
		Get
			Return Me._ClntRecvInf
		End Get
		Set
			If (String.Equals(Me._ClntRecvInf, value) = false) Then
				Me.OnClntRecvInfChanging(value)
				Me.SendPropertyChanging
				Me._ClntRecvInf = value
				Me.SendPropertyChanged("ClntRecvInf")
				Me.OnClntRecvInfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delClntRecv", DbType:="Bit NOT NULL")>  _
	Public Property delClntRecv() As Boolean
		Get
			Return Me._delClntRecv
		End Get
		Set
			If ((Me._delClntRecv = value)  _
						= false) Then
				Me.OndelClntRecvChanging(value)
				Me.SendPropertyChanging
				Me._delClntRecv = value
				Me.SendPropertyChanged("delClntRecv")
				Me.OndelClntRecvChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.recvClntDet")>  _
Partial Public Class recvClntDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkRecvClntDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _amount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkClntRecv As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delRecDet As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkRecvClntDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkRecvClntDetChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As Double)
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OntrkClntRecvChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkClntRecvChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelRecDetChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelRecDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecvClntDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkRecvClntDet() As Decimal
		Get
			Return Me._trkRecvClntDet
		End Get
		Set
			If ((Me._trkRecvClntDet = value)  _
						= false) Then
				Me.OntrkRecvClntDetChanging(value)
				Me.SendPropertyChanging
				Me._trkRecvClntDet = value
				Me.SendPropertyChanged("trkRecvClntDet")
				Me.OntrkRecvClntDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntRecv", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClntRecv() As Decimal
		Get
			Return Me._trkClntRecv
		End Get
		Set
			If ((Me._trkClntRecv = value)  _
						= false) Then
				Me.OntrkClntRecvChanging(value)
				Me.SendPropertyChanging
				Me._trkClntRecv = value
				Me.SendPropertyChanged("trkClntRecv")
				Me.OntrkClntRecvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delRecDet", DbType:="Bit NOT NULL")>  _
	Public Property delRecDet() As Boolean
		Get
			Return Me._delRecDet
		End Get
		Set
			If ((Me._delRecDet = value)  _
						= false) Then
				Me.OndelRecDetChanging(value)
				Me.SendPropertyChanging
				Me._delRecDet = value
				Me.SendPropertyChanged("delRecDet")
				Me.OndelRecDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RecvClnt")>  _
Partial Public Class V_RecvClnt
	
	Private _trkClntRecv As Decimal
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _ClntRecvDate As Date
	
	Private _trkAPrdStr As Decimal
	
	Private _APrdStr As String
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _clntCrpName As String
	
	Private _trkToPrd As Decimal
	
	Private _ClntRecvInf As String
	
	Private _delClntRecv As Boolean
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntRecv", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClntRecv() As Decimal
		Get
			Return Me._trkClntRecv
		End Get
		Set
			If ((Me._trkClntRecv = value)  _
						= false) Then
				Me._trkClntRecv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntRecvDate", DbType:="Date NOT NULL")>  _
	Public Property ClntRecvDate() As Date
		Get
			Return Me._ClntRecvDate
		End Get
		Set
			If ((Me._ClntRecvDate = value)  _
						= false) Then
				Me._ClntRecvDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntRecvInf", DbType:="NVarChar(MAX)")>  _
	Public Property ClntRecvInf() As String
		Get
			Return Me._ClntRecvInf
		End Get
		Set
			If (String.Equals(Me._ClntRecvInf, value) = false) Then
				Me._ClntRecvInf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delClntRecv", DbType:="Bit NOT NULL")>  _
	Public Property delClntRecv() As Boolean
		Get
			Return Me._delClntRecv
		End Get
		Set
			If ((Me._delClntRecv = value)  _
						= false) Then
				Me._delClntRecv = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_RecvClntDet")>  _
Partial Public Class V_RecvClntDet
	
	Private _trkClntRecv As Decimal
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _ClntRecvDate As Date
	
	Private _trkAPrdStr As Decimal
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _APrdStr As String
	
	Private _trkToPrd As Decimal
	
	Private _ClntRecvInf As String
	
	Private _trkRecvClntDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _amount As Double
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _clntCrpName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntRecv", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkClntRecv() As Decimal
		Get
			Return Me._trkClntRecv
		End Get
		Set
			If ((Me._trkClntRecv = value)  _
						= false) Then
				Me._trkClntRecv = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntRecvDate", DbType:="Date NOT NULL")>  _
	Public Property ClntRecvDate() As Date
		Get
			Return Me._ClntRecvDate
		End Get
		Set
			If ((Me._ClntRecvDate = value)  _
						= false) Then
				Me._ClntRecvDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAPrdStr() As Decimal
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If ((Me._trkAPrdStr = value)  _
						= false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntRecvInf", DbType:="NVarChar(MAX)")>  _
	Public Property ClntRecvInf() As String
		Get
			Return Me._ClntRecvInf
		End Get
		Set
			If (String.Equals(Me._ClntRecvInf, value) = false) Then
				Me._ClntRecvInf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkRecvClntDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkRecvClntDet() As Decimal
		Get
			Return Me._trkRecvClntDet
		End Get
		Set
			If ((Me._trkRecvClntDet = value)  _
						= false) Then
				Me._trkRecvClntDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.arriveExp")>  _
Partial Public Class arriveExp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkArExp As Decimal
	
	Private _arExpDate As Date
	
	Private _trkExpLoc As Decimal
	
	Private _trkArival As Decimal
	
	Private _arvExpInf As String
	
	Private _delArExp As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkArExpChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArExpChanged()
    End Sub
    Partial Private Sub OnarExpDateChanging(value As Date)
    End Sub
    Partial Private Sub OnarExpDateChanged()
    End Sub
    Partial Private Sub OntrkExpLocChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpLocChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OnarvExpInfChanging(value As String)
    End Sub
    Partial Private Sub OnarvExpInfChanged()
    End Sub
    Partial Private Sub OndelArExpChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelArExpChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExp", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkArExp() As Decimal
		Get
			Return Me._trkArExp
		End Get
		Set
			If ((Me._trkArExp = value)  _
						= false) Then
				Me.OntrkArExpChanging(value)
				Me.SendPropertyChanging
				Me._trkArExp = value
				Me.SendPropertyChanged("trkArExp")
				Me.OntrkArExpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arExpDate", DbType:="Date NOT NULL")>  _
	Public Property arExpDate() As Date
		Get
			Return Me._arExpDate
		End Get
		Set
			If ((Me._arExpDate = value)  _
						= false) Then
				Me.OnarExpDateChanging(value)
				Me.SendPropertyChanging
				Me._arExpDate = value
				Me.SendPropertyChanged("arExpDate")
				Me.OnarExpDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me.OntrkExpLocChanging(value)
				Me.SendPropertyChanging
				Me._trkExpLoc = value
				Me.SendPropertyChanged("trkExpLoc")
				Me.OntrkExpLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arvExpInf", DbType:="NVarChar(MAX)")>  _
	Public Property arvExpInf() As String
		Get
			Return Me._arvExpInf
		End Get
		Set
			If (String.Equals(Me._arvExpInf, value) = false) Then
				Me.OnarvExpInfChanging(value)
				Me.SendPropertyChanging
				Me._arvExpInf = value
				Me.SendPropertyChanged("arvExpInf")
				Me.OnarvExpInfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delArExp", DbType:="Bit")>  _
	Public Property delArExp() As System.Nullable(Of Boolean)
		Get
			Return Me._delArExp
		End Get
		Set
			If (Me._delArExp.Equals(value) = false) Then
				Me.OndelArExpChanging(value)
				Me.SendPropertyChanging
				Me._delArExp = value
				Me.SendPropertyChanged("delArExp")
				Me.OndelArExpChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_arriveExp")>  _
Partial Public Class V_arriveExp
	
	Private _trkArExp As Decimal
	
	Private _arExpDate As Date
	
	Private _trkExpLoc As Decimal
	
	Private _trkArival As Decimal
	
	Private _delArExp As System.Nullable(Of Boolean)
	
	Private _arivalName As String
	
	Private _expName As String
	
	Private _arvExpInf As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExp", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArExp() As Decimal
		Get
			Return Me._trkArExp
		End Get
		Set
			If ((Me._trkArExp = value)  _
						= false) Then
				Me._trkArExp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arExpDate", DbType:="Date NOT NULL")>  _
	Public Property arExpDate() As Date
		Get
			Return Me._arExpDate
		End Get
		Set
			If ((Me._arExpDate = value)  _
						= false) Then
				Me._arExpDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me._trkExpLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delArExp", DbType:="Bit")>  _
	Public Property delArExp() As System.Nullable(Of Boolean)
		Get
			Return Me._delArExp
		End Get
		Set
			If (Me._delArExp.Equals(value) = false) Then
				Me._delArExp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arvExpInf", DbType:="NVarChar(MAX)")>  _
	Public Property arvExpInf() As String
		Get
			Return Me._arvExpInf
		End Get
		Set
			If (String.Equals(Me._arvExpInf, value) = false) Then
				Me._arvExpInf = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.expStock")>  _
Partial Public Class expStock
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkExpStk As Decimal
	
	Private _exStkDate As Date
	
	Private _trkExpLok As Decimal
	
	Private _trkExpStore As Decimal
	
	Private _expStkInf As String
	
	Private _trkPrs As Decimal
	
	Private _delExpStk As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkExpStkChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpStkChanged()
    End Sub
    Partial Private Sub OnexStkDateChanging(value As Date)
    End Sub
    Partial Private Sub OnexStkDateChanged()
    End Sub
    Partial Private Sub OntrkExpLokChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpLokChanged()
    End Sub
    Partial Private Sub OntrkExpStoreChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpStoreChanged()
    End Sub
    Partial Private Sub OnexpStkInfChanging(value As String)
    End Sub
    Partial Private Sub OnexpStkInfChanged()
    End Sub
    Partial Private Sub OntrkPrsChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPrsChanged()
    End Sub
    Partial Private Sub OndelExpStkChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelExpStkChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStk", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkExpStk() As Decimal
		Get
			Return Me._trkExpStk
		End Get
		Set
			If ((Me._trkExpStk = value)  _
						= false) Then
				Me.OntrkExpStkChanging(value)
				Me.SendPropertyChanging
				Me._trkExpStk = value
				Me.SendPropertyChanged("trkExpStk")
				Me.OntrkExpStkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exStkDate", DbType:="Date NOT NULL")>  _
	Public Property exStkDate() As Date
		Get
			Return Me._exStkDate
		End Get
		Set
			If ((Me._exStkDate = value)  _
						= false) Then
				Me.OnexStkDateChanging(value)
				Me.SendPropertyChanging
				Me._exStkDate = value
				Me.SendPropertyChanged("exStkDate")
				Me.OnexStkDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLok", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLok() As Decimal
		Get
			Return Me._trkExpLok
		End Get
		Set
			If ((Me._trkExpLok = value)  _
						= false) Then
				Me.OntrkExpLokChanging(value)
				Me.SendPropertyChanging
				Me._trkExpLok = value
				Me.SendPropertyChanged("trkExpLok")
				Me.OntrkExpLokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStore() As Decimal
		Get
			Return Me._trkExpStore
		End Get
		Set
			If ((Me._trkExpStore = value)  _
						= false) Then
				Me.OntrkExpStoreChanging(value)
				Me.SendPropertyChanging
				Me._trkExpStore = value
				Me.SendPropertyChanged("trkExpStore")
				Me.OntrkExpStoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expStkInf", DbType:="NVarChar(MAX)")>  _
	Public Property expStkInf() As String
		Get
			Return Me._expStkInf
		End Get
		Set
			If (String.Equals(Me._expStkInf, value) = false) Then
				Me.OnexpStkInfChanging(value)
				Me.SendPropertyChanging
				Me._expStkInf = value
				Me.SendPropertyChanged("expStkInf")
				Me.OnexpStkInfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me.OntrkPrsChanging(value)
				Me.SendPropertyChanging
				Me._trkPrs = value
				Me.SendPropertyChanged("trkPrs")
				Me.OntrkPrsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExpStk", DbType:="Bit")>  _
	Public Property delExpStk() As System.Nullable(Of Boolean)
		Get
			Return Me._delExpStk
		End Get
		Set
			If (Me._delExpStk.Equals(value) = false) Then
				Me.OndelExpStkChanging(value)
				Me.SendPropertyChanging
				Me._delExpStk = value
				Me.SendPropertyChanged("delExpStk")
				Me.OndelExpStkChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.expStockDet")>  _
Partial Public Class expStockDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkExpStkDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _trkExpStk As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delExStkDet As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkExpStkDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpStkDetChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnaStockChanging(value As Double)
    End Sub
    Partial Private Sub OnaStockChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OntrkExpStkChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpStkChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelExStkDetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelExStkDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStkDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkExpStkDet() As Decimal
		Get
			Return Me._trkExpStkDet
		End Get
		Set
			If ((Me._trkExpStkDet = value)  _
						= false) Then
				Me.OntrkExpStkDetChanging(value)
				Me.SendPropertyChanging
				Me._trkExpStkDet = value
				Me.SendPropertyChanged("trkExpStkDet")
				Me.OntrkExpStkDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me.OnaStockChanging(value)
				Me.SendPropertyChanging
				Me._aStock = value
				Me.SendPropertyChanged("aStock")
				Me.OnaStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStk", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStk() As Decimal
		Get
			Return Me._trkExpStk
		End Get
		Set
			If ((Me._trkExpStk = value)  _
						= false) Then
				Me.OntrkExpStkChanging(value)
				Me.SendPropertyChanging
				Me._trkExpStk = value
				Me.SendPropertyChanged("trkExpStk")
				Me.OntrkExpStkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExStkDet", DbType:="Bit")>  _
	Public Property delExStkDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delExStkDet
		End Get
		Set
			If (Me._delExStkDet.Equals(value) = false) Then
				Me.OndelExStkDetChanging(value)
				Me.SendPropertyChanging
				Me._delExStkDet = value
				Me.SendPropertyChanged("delExStkDet")
				Me.OndelExStkDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_expStock")>  _
Partial Public Class V_expStock
	
	Private _trkExpStk As Decimal
	
	Private _exStkDate As Date
	
	Private _trkExpLok As Decimal
	
	Private _trkExpStore As Decimal
	
	Private _delExpStk As System.Nullable(Of Boolean)
	
	Private _expName As String
	
	Private _expStore As String
	
	Private _expStkInf As String
	
	Private _trkPrs As Decimal
	
	Private _prsName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStk", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStk() As Decimal
		Get
			Return Me._trkExpStk
		End Get
		Set
			If ((Me._trkExpStk = value)  _
						= false) Then
				Me._trkExpStk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exStkDate", DbType:="Date NOT NULL")>  _
	Public Property exStkDate() As Date
		Get
			Return Me._exStkDate
		End Get
		Set
			If ((Me._exStkDate = value)  _
						= false) Then
				Me._exStkDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLok", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLok() As Decimal
		Get
			Return Me._trkExpLok
		End Get
		Set
			If ((Me._trkExpLok = value)  _
						= false) Then
				Me._trkExpLok = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStore() As Decimal
		Get
			Return Me._trkExpStore
		End Get
		Set
			If ((Me._trkExpStore = value)  _
						= false) Then
				Me._trkExpStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExpStk", DbType:="Bit")>  _
	Public Property delExpStk() As System.Nullable(Of Boolean)
		Get
			Return Me._delExpStk
		End Get
		Set
			If (Me._delExpStk.Equals(value) = false) Then
				Me._delExpStk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expStore() As String
		Get
			Return Me._expStore
		End Get
		Set
			If (String.Equals(Me._expStore, value) = false) Then
				Me._expStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expStkInf", DbType:="NVarChar(MAX)")>  _
	Public Property expStkInf() As String
		Get
			Return Me._expStkInf
		End Get
		Set
			If (String.Equals(Me._expStkInf, value) = false) Then
				Me._expStkInf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me._trkPrs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prsName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prsName() As String
		Get
			Return Me._prsName
		End Get
		Set
			If (String.Equals(Me._prsName, value) = false) Then
				Me._prsName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ExpStkDet")>  _
Partial Public Class V_ExpStkDet
	
	Private _trkExpStkDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _trkExpStk As Decimal
	
	Private _exStkDate As Date
	
	Private _trkExpLok As Decimal
	
	Private _prodName As String
	
	Private _weight As Double
	
	Private _unitName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _expName As String
	
	Private _trkExpStore As Decimal
	
	Private _expStore As String
	
	Private _trkPrs As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStkDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStkDet() As Decimal
		Get
			Return Me._trkExpStkDet
		End Get
		Set
			If ((Me._trkExpStkDet = value)  _
						= false) Then
				Me._trkExpStkDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me._aStock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStk", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStk() As Decimal
		Get
			Return Me._trkExpStk
		End Get
		Set
			If ((Me._trkExpStk = value)  _
						= false) Then
				Me._trkExpStk = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_exStkDate", DbType:="Date NOT NULL")>  _
	Public Property exStkDate() As Date
		Get
			Return Me._exStkDate
		End Get
		Set
			If ((Me._exStkDate = value)  _
						= false) Then
				Me._exStkDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLok", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLok() As Decimal
		Get
			Return Me._trkExpLok
		End Get
		Set
			If ((Me._trkExpLok = value)  _
						= false) Then
				Me._trkExpLok = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpStore() As Decimal
		Get
			Return Me._trkExpStore
		End Get
		Set
			If ((Me._trkExpStore = value)  _
						= false) Then
				Me._trkExpStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expStore() As String
		Get
			Return Me._expStore
		End Get
		Set
			If (String.Equals(Me._expStore, value) = false) Then
				Me._expStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrs", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrs() As Decimal
		Get
			Return Me._trkPrs
		End Get
		Set
			If ((Me._trkPrs = value)  _
						= false) Then
				Me._trkPrs = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.shipDetail")>  _
Partial Public Class shipDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkShipDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As System.Nullable(Of Double)
	
	Private _trkUnit As String
	
	Private _weight As Double
	
	Private _Driver As String
	
	Private _Car As String
	
	Private _trkShip As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delSD As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkShipDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkShipDetChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OnstoreAmountChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnstoreAmountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As String)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OnDriverChanging(value As String)
    End Sub
    Partial Private Sub OnDriverChanged()
    End Sub
    Partial Private Sub OnCarChanging(value As String)
    End Sub
    Partial Private Sub OnCarChanged()
    End Sub
    Partial Private Sub OntrkShipChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkShipChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelSDChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelSDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShipDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkShipDet() As Decimal
		Get
			Return Me._trkShipDet
		End Get
		Set
			If ((Me._trkShipDet = value)  _
						= false) Then
				Me.OntrkShipDetChanging(value)
				Me.SendPropertyChanging
				Me._trkShipDet = value
				Me.SendPropertyChanged("trkShipDet")
				Me.OntrkShipDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float")>  _
	Public Property storeAmount() As System.Nullable(Of Double)
		Get
			Return Me._storeAmount
		End Get
		Set
			If (Me._storeAmount.Equals(value) = false) Then
				Me.OnstoreAmountChanging(value)
				Me.SendPropertyChanging
				Me._storeAmount = value
				Me.SendPropertyChanged("storeAmount")
				Me.OnstoreAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property trkUnit() As String
		Get
			Return Me._trkUnit
		End Get
		Set
			If (String.Equals(Me._trkUnit, value) = false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me.OnDriverChanging(value)
				Me.SendPropertyChanging
				Me._Driver = value
				Me.SendPropertyChanged("Driver")
				Me.OnDriverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me.OnCarChanging(value)
				Me.SendPropertyChanging
				Me._Car = value
				Me.SendPropertyChanged("Car")
				Me.OnCarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShip() As Decimal
		Get
			Return Me._trkShip
		End Get
		Set
			If ((Me._trkShip = value)  _
						= false) Then
				Me.OntrkShipChanging(value)
				Me.SendPropertyChanging
				Me._trkShip = value
				Me.SendPropertyChanged("trkShip")
				Me.OntrkShipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSD", DbType:="Bit")>  _
	Public Property delSD() As System.Nullable(Of Boolean)
		Get
			Return Me._delSD
		End Get
		Set
			If (Me._delSD.Equals(value) = false) Then
				Me.OndelSDChanging(value)
				Me.SendPropertyChanging
				Me._delSD = value
				Me.SendPropertyChanged("delSD")
				Me.OndelSDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_shipDetail")>  _
Partial Public Class V_shipDetail
	
	Private _trkShip As Decimal
	
	Private _shipDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkBStore As Decimal
	
	Private _trkCrop As Decimal
	
	Private _delShip As System.Nullable(Of Boolean)
	
	Private _delSD As System.Nullable(Of Boolean)
	
	Private _trkShipDet As Decimal
	
	Private _storeAmount As System.Nullable(Of Double)
	
	Private _trkUnit As String
	
	Private _unitName As String
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Private _cropName As String
	
	Private _Driver As String
	
	Private _Car As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShip() As Decimal
		Get
			Return Me._trkShip
		End Get
		Set
			If ((Me._trkShip = value)  _
						= false) Then
				Me._trkShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipDate", DbType:="Date NOT NULL")>  _
	Public Property shipDate() As Date
		Get
			Return Me._shipDate
		End Get
		Set
			If ((Me._shipDate = value)  _
						= false) Then
				Me._shipDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBStore() As Decimal
		Get
			Return Me._trkBStore
		End Get
		Set
			If ((Me._trkBStore = value)  _
						= false) Then
				Me._trkBStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delShip", DbType:="Bit")>  _
	Public Property delShip() As System.Nullable(Of Boolean)
		Get
			Return Me._delShip
		End Get
		Set
			If (Me._delShip.Equals(value) = false) Then
				Me._delShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSD", DbType:="Bit")>  _
	Public Property delSD() As System.Nullable(Of Boolean)
		Get
			Return Me._delSD
		End Get
		Set
			If (Me._delSD.Equals(value) = false) Then
				Me._delSD = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkShipDet() As Decimal
		Get
			Return Me._trkShipDet
		End Get
		Set
			If ((Me._trkShipDet = value)  _
						= false) Then
				Me._trkShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float")>  _
	Public Property storeAmount() As System.Nullable(Of Double)
		Get
			Return Me._storeAmount
		End Get
		Set
			If (Me._storeAmount.Equals(value) = false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property trkUnit() As String
		Get
			Return Me._trkUnit
		End Get
		Set
			If (String.Equals(Me._trkUnit, value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me._Driver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me._Car = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.arriveDetail")>  _
Partial Public Class arriveDetail
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkArDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _storeAmount As Double
	
	Private _trkUnit As String
	
	Private _weight As Double
	
	Private _Driver As String
	
	Private _Car As String
	
	Private _trkAr As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delAD As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkArDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArDetChanged()
    End Sub
    Partial Private Sub OntrkCropChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkCropChanged()
    End Sub
    Partial Private Sub OnstoreAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnstoreAmountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As String)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OnDriverChanging(value As String)
    End Sub
    Partial Private Sub OnDriverChanged()
    End Sub
    Partial Private Sub OnCarChanging(value As String)
    End Sub
    Partial Private Sub OnCarChanged()
    End Sub
    Partial Private Sub OntrkArChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelADChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelADChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkArDet() As Decimal
		Get
			Return Me._trkArDet
		End Get
		Set
			If ((Me._trkArDet = value)  _
						= false) Then
				Me.OntrkArDetChanging(value)
				Me.SendPropertyChanging
				Me._trkArDet = value
				Me.SendPropertyChanged("trkArDet")
				Me.OntrkArDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me.OntrkCropChanging(value)
				Me.SendPropertyChanging
				Me._trkCrop = value
				Me.SendPropertyChanged("trkCrop")
				Me.OntrkCropChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me.OnstoreAmountChanging(value)
				Me.SendPropertyChanging
				Me._storeAmount = value
				Me.SendPropertyChanged("storeAmount")
				Me.OnstoreAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property trkUnit() As String
		Get
			Return Me._trkUnit
		End Get
		Set
			If (String.Equals(Me._trkUnit, value) = false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me.OnDriverChanging(value)
				Me.SendPropertyChanging
				Me._Driver = value
				Me.SendPropertyChanged("Driver")
				Me.OnDriverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me.OnCarChanging(value)
				Me.SendPropertyChanging
				Me._Car = value
				Me.SendPropertyChanged("Car")
				Me.OnCarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAr() As Decimal
		Get
			Return Me._trkAr
		End Get
		Set
			If ((Me._trkAr = value)  _
						= false) Then
				Me.OntrkArChanging(value)
				Me.SendPropertyChanging
				Me._trkAr = value
				Me.SendPropertyChanged("trkAr")
				Me.OntrkArChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delAD", DbType:="Bit")>  _
	Public Property delAD() As System.Nullable(Of Boolean)
		Get
			Return Me._delAD
		End Get
		Set
			If (Me._delAD.Equals(value) = false) Then
				Me.OndelADChanging(value)
				Me.SendPropertyChanging
				Me._delAD = value
				Me.SendPropertyChanged("delAD")
				Me.OndelADChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_arriveDet")>  _
Partial Public Class V_arriveDet
	
	Private _trkAr As Decimal
	
	Private _arDate As Date
	
	Private _trkBuyLoc As Decimal
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkArDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _cropName As String
	
	Private _storeAmount As Double
	
	Private _trkUnit As String
	
	Private _unitName As String
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _Driver As String
	
	Private _Car As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAr", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAr() As Decimal
		Get
			Return Me._trkAr
		End Get
		Set
			If ((Me._trkAr = value)  _
						= false) Then
				Me._trkAr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arDate", DbType:="Date NOT NULL")>  _
	Public Property arDate() As Date
		Get
			Return Me._arDate
		End Get
		Set
			If ((Me._arDate = value)  _
						= false) Then
				Me._arDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkBuyLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkBuyLoc() As Decimal
		Get
			Return Me._trkBuyLoc
		End Get
		Set
			If ((Me._trkBuyLoc = value)  _
						= false) Then
				Me._trkBuyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArDet() As Decimal
		Get
			Return Me._trkArDet
		End Get
		Set
			If ((Me._trkArDet = value)  _
						= false) Then
				Me._trkArDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property trkUnit() As String
		Get
			Return Me._trkUnit
		End Get
		Set
			If (String.Equals(Me._trkUnit, value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me._Driver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me._Car = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_expShipDet")>  _
Partial Public Class V_expShipDet
	
	Private _trkExpShipDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _storeAmount As Double
	
	Private _trkArival As Decimal
	
	Private _trkAPrdStr As System.Nullable(Of Decimal)
	
	Private _trkExpShip As Decimal
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _prodName As String
	
	Private _expShipDate As Date
	
	Private _arivalName As String
	
	Private _APrdStr As String
	
	Private _trkPeeler As System.Nullable(Of Decimal)
	
	Private _peelerName As String
	
	Private _trkExpLoc As Decimal
	
	Private _expName As String
	
	Private _Driver As String
	
	Private _Car As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShipDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShipDet() As Decimal
		Get
			Return Me._trkExpShipDet
		End Get
		Set
			If ((Me._trkExpShipDet = value)  _
						= false) Then
				Me._trkExpShipDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAPrdStr", DbType:="Decimal(18,0)")>  _
	Public Property trkAPrdStr() As System.Nullable(Of Decimal)
		Get
			Return Me._trkAPrdStr
		End Get
		Set
			If (Me._trkAPrdStr.Equals(value) = false) Then
				Me._trkAPrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me._trkExpShip = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expShipDate", DbType:="Date NOT NULL")>  _
	Public Property expShipDate() As Date
		Get
			Return Me._expShipDate
		End Get
		Set
			If ((Me._expShipDate = value)  _
						= false) Then
				Me._expShipDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0)")>  _
	Public Property trkPeeler() As System.Nullable(Of Decimal)
		Get
			Return Me._trkPeeler
		End Get
		Set
			If (Me._trkPeeler.Equals(value) = false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me._trkExpLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me._Driver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me._Car = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.expShipDet")>  _
Partial Public Class expShipDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkExpShipDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _storeAmount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _Driver As String
	
	Private _Car As String
	
	Private _trkExpShip As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delExShDet As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkExpShipDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpShipDetChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnstoreAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnstoreAmountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OnDriverChanging(value As String)
    End Sub
    Partial Private Sub OnDriverChanged()
    End Sub
    Partial Private Sub OnCarChanging(value As String)
    End Sub
    Partial Private Sub OnCarChanged()
    End Sub
    Partial Private Sub OntrkExpShipChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpShipChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelExShDetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelExShDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShipDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkExpShipDet() As Decimal
		Get
			Return Me._trkExpShipDet
		End Get
		Set
			If ((Me._trkExpShipDet = value)  _
						= false) Then
				Me.OntrkExpShipDetChanging(value)
				Me.SendPropertyChanging
				Me._trkExpShipDet = value
				Me.SendPropertyChanged("trkExpShipDet")
				Me.OntrkExpShipDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me.OnstoreAmountChanging(value)
				Me.SendPropertyChanging
				Me._storeAmount = value
				Me.SendPropertyChanged("storeAmount")
				Me.OnstoreAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me.OnDriverChanging(value)
				Me.SendPropertyChanging
				Me._Driver = value
				Me.SendPropertyChanged("Driver")
				Me.OnDriverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me.OnCarChanging(value)
				Me.SendPropertyChanging
				Me._Car = value
				Me.SendPropertyChanged("Car")
				Me.OnCarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpShip", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpShip() As Decimal
		Get
			Return Me._trkExpShip
		End Get
		Set
			If ((Me._trkExpShip = value)  _
						= false) Then
				Me.OntrkExpShipChanging(value)
				Me.SendPropertyChanging
				Me._trkExpShip = value
				Me.SendPropertyChanged("trkExpShip")
				Me.OntrkExpShipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delExShDet", DbType:="Bit")>  _
	Public Property delExShDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delExShDet
		End Get
		Set
			If (Me._delExShDet.Equals(value) = false) Then
				Me.OndelExShDetChanging(value)
				Me.SendPropertyChanging
				Me._delExShDet = value
				Me.SendPropertyChanged("delExShDet")
				Me.OndelExShDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.arriveExpDet")>  _
Partial Public Class arriveExpDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkArExDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _storeAmount As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _Driver As String
	
	Private _Car As String
	
	Private _trkArExp As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delArExDt As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkArExDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArExDetChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnstoreAmountChanging(value As Double)
    End Sub
    Partial Private Sub OnstoreAmountChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OnDriverChanging(value As String)
    End Sub
    Partial Private Sub OnDriverChanged()
    End Sub
    Partial Private Sub OnCarChanging(value As String)
    End Sub
    Partial Private Sub OnCarChanged()
    End Sub
    Partial Private Sub OntrkArExpChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArExpChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelArExDtChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelArExDtChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkArExDet() As Decimal
		Get
			Return Me._trkArExDet
		End Get
		Set
			If ((Me._trkArExDet = value)  _
						= false) Then
				Me.OntrkArExDetChanging(value)
				Me.SendPropertyChanging
				Me._trkArExDet = value
				Me.SendPropertyChanged("trkArExDet")
				Me.OntrkArExDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me.OnstoreAmountChanging(value)
				Me.SendPropertyChanging
				Me._storeAmount = value
				Me.SendPropertyChanged("storeAmount")
				Me.OnstoreAmountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me.OnDriverChanging(value)
				Me.SendPropertyChanging
				Me._Driver = value
				Me.SendPropertyChanged("Driver")
				Me.OnDriverChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me.OnCarChanging(value)
				Me.SendPropertyChanging
				Me._Car = value
				Me.SendPropertyChanged("Car")
				Me.OnCarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExp", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArExp() As Decimal
		Get
			Return Me._trkArExp
		End Get
		Set
			If ((Me._trkArExp = value)  _
						= false) Then
				Me.OntrkArExpChanging(value)
				Me.SendPropertyChanging
				Me._trkArExp = value
				Me.SendPropertyChanged("trkArExp")
				Me.OntrkArExpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delArExDt", DbType:="Bit")>  _
	Public Property delArExDt() As System.Nullable(Of Boolean)
		Get
			Return Me._delArExDt
		End Get
		Set
			If (Me._delArExDt.Equals(value) = false) Then
				Me.OndelArExDtChanging(value)
				Me.SendPropertyChanging
				Me._delArExDt = value
				Me.SendPropertyChanged("delArExDt")
				Me.OndelArExDtChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ArvExpDet")>  _
Partial Public Class V_ArvExpDet
	
	Private _trkArExp As Decimal
	
	Private _arExpDate As Date
	
	Private _trkExpLoc As Decimal
	
	Private _expName As String
	
	Private _trkArExDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _storeAmount As Double
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delArExDt As System.Nullable(Of Boolean)
	
	Private _Driver As String
	
	Private _Car As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExp", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArExp() As Decimal
		Get
			Return Me._trkArExp
		End Get
		Set
			If ((Me._trkArExp = value)  _
						= false) Then
				Me._trkArExp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arExpDate", DbType:="Date NOT NULL")>  _
	Public Property arExpDate() As Date
		Get
			Return Me._arExpDate
		End Get
		Set
			If ((Me._arExpDate = value)  _
						= false) Then
				Me._arExpDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLoc", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLoc() As Decimal
		Get
			Return Me._trkExpLoc
		End Get
		Set
			If ((Me._trkExpLoc = value)  _
						= false) Then
				Me._trkExpLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArExDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArExDet() As Decimal
		Get
			Return Me._trkArExDet
		End Get
		Set
			If ((Me._trkArExDet = value)  _
						= false) Then
				Me._trkArExDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_storeAmount", DbType:="Float NOT NULL")>  _
	Public Property storeAmount() As Double
		Get
			Return Me._storeAmount
		End Get
		Set
			If ((Me._storeAmount = value)  _
						= false) Then
				Me._storeAmount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delArExDt", DbType:="Bit")>  _
	Public Property delArExDt() As System.Nullable(Of Boolean)
		Get
			Return Me._delArExDt
		End Get
		Set
			If (Me._delArExDt.Equals(value) = false) Then
				Me._delArExDt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Driver", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Driver() As String
		Get
			Return Me._Driver
		End Get
		Set
			If (String.Equals(Me._Driver, value) = false) Then
				Me._Driver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Car", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Car() As String
		Get
			Return Me._Car
		End Get
		Set
			If (String.Equals(Me._Car, value) = false) Then
				Me._Car = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.sale")>  _
Partial Public Class sale
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkSale As Decimal
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _saleDate As Date
	
	Private _delSale As Boolean
	
	Private _ClntAr As String
	
	Private _saleInf As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkSaleChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkSaleChanged()
    End Sub
    Partial Private Sub OntrkArivalChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkArivalChanged()
    End Sub
    Partial Private Sub OntrkPeelerChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkPeelerChanged()
    End Sub
    Partial Private Sub OnsaleDateChanging(value As Date)
    End Sub
    Partial Private Sub OnsaleDateChanged()
    End Sub
    Partial Private Sub OndelSaleChanging(value As Boolean)
    End Sub
    Partial Private Sub OndelSaleChanged()
    End Sub
    Partial Private Sub OnClntArChanging(value As String)
    End Sub
    Partial Private Sub OnClntArChanged()
    End Sub
    Partial Private Sub OnsaleInfChanging(value As String)
    End Sub
    Partial Private Sub OnsaleInfChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSale", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkSale() As Decimal
		Get
			Return Me._trkSale
		End Get
		Set
			If ((Me._trkSale = value)  _
						= false) Then
				Me.OntrkSaleChanging(value)
				Me.SendPropertyChanging
				Me._trkSale = value
				Me.SendPropertyChanged("trkSale")
				Me.OntrkSaleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me.OntrkArivalChanging(value)
				Me.SendPropertyChanging
				Me._trkArival = value
				Me.SendPropertyChanged("trkArival")
				Me.OntrkArivalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me.OntrkPeelerChanging(value)
				Me.SendPropertyChanging
				Me._trkPeeler = value
				Me.SendPropertyChanged("trkPeeler")
				Me.OntrkPeelerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saleDate", DbType:="Date NOT NULL")>  _
	Public Property saleDate() As Date
		Get
			Return Me._saleDate
		End Get
		Set
			If ((Me._saleDate = value)  _
						= false) Then
				Me.OnsaleDateChanging(value)
				Me.SendPropertyChanging
				Me._saleDate = value
				Me.SendPropertyChanged("saleDate")
				Me.OnsaleDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSale", DbType:="Bit NOT NULL")>  _
	Public Property delSale() As Boolean
		Get
			Return Me._delSale
		End Get
		Set
			If ((Me._delSale = value)  _
						= false) Then
				Me.OndelSaleChanging(value)
				Me.SendPropertyChanging
				Me._delSale = value
				Me.SendPropertyChanged("delSale")
				Me.OndelSaleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntAr", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ClntAr() As String
		Get
			Return Me._ClntAr
		End Get
		Set
			If (String.Equals(Me._ClntAr, value) = false) Then
				Me.OnClntArChanging(value)
				Me.SendPropertyChanging
				Me._ClntAr = value
				Me.SendPropertyChanged("ClntAr")
				Me.OnClntArChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saleInf", DbType:="NVarChar(MAX)")>  _
	Public Property saleInf() As String
		Get
			Return Me._saleInf
		End Get
		Set
			If (String.Equals(Me._saleInf, value) = false) Then
				Me.OnsaleInfChanging(value)
				Me.SendPropertyChanging
				Me._saleInf = value
				Me.SendPropertyChanged("saleInf")
				Me.OnsaleInfChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_Sale")>  _
Partial Public Class V_Sale
	
	Private _trkSale As Decimal
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _saleDate As Date
	
	Private _delSale As Boolean
	
	Private _saleInf As String
	
	Private _ClntAr As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSale", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkSale() As Decimal
		Get
			Return Me._trkSale
		End Get
		Set
			If ((Me._trkSale = value)  _
						= false) Then
				Me._trkSale = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saleDate", DbType:="Date NOT NULL")>  _
	Public Property saleDate() As Date
		Get
			Return Me._saleDate
		End Get
		Set
			If ((Me._saleDate = value)  _
						= false) Then
				Me._saleDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSale", DbType:="Bit NOT NULL")>  _
	Public Property delSale() As Boolean
		Get
			Return Me._delSale
		End Get
		Set
			If ((Me._delSale = value)  _
						= false) Then
				Me._delSale = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saleInf", DbType:="NVarChar(MAX)")>  _
	Public Property saleInf() As String
		Get
			Return Me._saleInf
		End Get
		Set
			If (String.Equals(Me._saleInf, value) = false) Then
				Me._saleInf = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntAr", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ClntAr() As String
		Get
			Return Me._ClntAr
		End Get
		Set
			If (String.Equals(Me._ClntAr, value) = false) Then
				Me._ClntAr = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_SaleDet")>  _
Partial Public Class V_SaleDet
	
	Private _trkSaleDet As Decimal
	
	Private _trkSale As Decimal
	
	Private _trkProd As Decimal
	
	Private _prodName As String
	
	Private _Amount As Double
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _price As Double
	
	Private _Weight As Double
	
	Private _delSaleDet As System.Nullable(Of Boolean)
	
	Private _totalPrs As Double
	
	Private _trkArival As Decimal
	
	Private _arivalName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _saleDate As Date
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _ClntAr As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSaleDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkSaleDet() As Decimal
		Get
			Return Me._trkSaleDet
		End Get
		Set
			If ((Me._trkSaleDet = value)  _
						= false) Then
				Me._trkSaleDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkSale", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkSale() As Decimal
		Get
			Return Me._trkSale
		End Get
		Set
			If ((Me._trkSale = value)  _
						= false) Then
				Me._trkSale = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50)")>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Amount", DbType:="Float NOT NULL")>  _
	Public Property Amount() As Double
		Get
			Return Me._Amount
		End Get
		Set
			If ((Me._Amount = value)  _
						= false) Then
				Me._Amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Float NOT NULL")>  _
	Public Property price() As Double
		Get
			Return Me._price
		End Get
		Set
			If ((Me._price = value)  _
						= false) Then
				Me._price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Float NOT NULL")>  _
	Public Property Weight() As Double
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me._Weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delSaleDet", DbType:="Bit")>  _
	Public Property delSaleDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delSaleDet
		End Get
		Set
			If (Me._delSaleDet.Equals(value) = false) Then
				Me._delSaleDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalPrs", DbType:="Float NOT NULL")>  _
	Public Property totalPrs() As Double
		Get
			Return Me._totalPrs
		End Get
		Set
			If ((Me._totalPrs = value)  _
						= false) Then
				Me._totalPrs = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50)")>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_saleDate", DbType:="Date NOT NULL")>  _
	Public Property saleDate() As Date
		Get
			Return Me._saleDate
		End Get
		Set
			If ((Me._saleDate = value)  _
						= false) Then
				Me._saleDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClntAr", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property ClntAr() As String
		Get
			Return Me._ClntAr
		End Get
		Set
			If (String.Equals(Me._ClntAr, value) = false) Then
				Me._ClntAr = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.goodShp")>  _
Partial Public Class goodShp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkGood As Decimal
	
	Private _trkExpLok As Decimal
	
	Private _ship As String
	
	Private _goodDate As Date
	
	Private _goodInf As String
	
	Private _delGood As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkGoodChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkGoodChanged()
    End Sub
    Partial Private Sub OntrkExpLokChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkExpLokChanged()
    End Sub
    Partial Private Sub OnshipChanging(value As String)
    End Sub
    Partial Private Sub OnshipChanged()
    End Sub
    Partial Private Sub OngoodDateChanging(value As Date)
    End Sub
    Partial Private Sub OngoodDateChanged()
    End Sub
    Partial Private Sub OngoodInfChanging(value As String)
    End Sub
    Partial Private Sub OngoodInfChanged()
    End Sub
    Partial Private Sub OndelGoodChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelGoodChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGood", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkGood() As Decimal
		Get
			Return Me._trkGood
		End Get
		Set
			If ((Me._trkGood = value)  _
						= false) Then
				Me.OntrkGoodChanging(value)
				Me.SendPropertyChanging
				Me._trkGood = value
				Me.SendPropertyChanged("trkGood")
				Me.OntrkGoodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLok", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLok() As Decimal
		Get
			Return Me._trkExpLok
		End Get
		Set
			If ((Me._trkExpLok = value)  _
						= false) Then
				Me.OntrkExpLokChanging(value)
				Me.SendPropertyChanging
				Me._trkExpLok = value
				Me.SendPropertyChanged("trkExpLok")
				Me.OntrkExpLokChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ship", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property ship() As String
		Get
			Return Me._ship
		End Get
		Set
			If (String.Equals(Me._ship, value) = false) Then
				Me.OnshipChanging(value)
				Me.SendPropertyChanging
				Me._ship = value
				Me.SendPropertyChanged("ship")
				Me.OnshipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_goodDate", DbType:="Date NOT NULL")>  _
	Public Property goodDate() As Date
		Get
			Return Me._goodDate
		End Get
		Set
			If ((Me._goodDate = value)  _
						= false) Then
				Me.OngoodDateChanging(value)
				Me.SendPropertyChanging
				Me._goodDate = value
				Me.SendPropertyChanged("goodDate")
				Me.OngoodDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_goodInf", DbType:="NVarChar(MAX)")>  _
	Public Property goodInf() As String
		Get
			Return Me._goodInf
		End Get
		Set
			If (String.Equals(Me._goodInf, value) = false) Then
				Me.OngoodInfChanging(value)
				Me.SendPropertyChanging
				Me._goodInf = value
				Me.SendPropertyChanged("goodInf")
				Me.OngoodInfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delGood", DbType:="Bit")>  _
	Public Property delGood() As System.Nullable(Of Boolean)
		Get
			Return Me._delGood
		End Get
		Set
			If (Me._delGood.Equals(value) = false) Then
				Me.OndelGoodChanging(value)
				Me.SendPropertyChanging
				Me._delGood = value
				Me.SendPropertyChanged("delGood")
				Me.OndelGoodChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_goodShp")>  _
Partial Public Class V_goodShp
	
	Private _trkGood As Decimal
	
	Private _trkExpLok As Decimal
	
	Private _ship As String
	
	Private _goodDate As Date
	
	Private _delGood As System.Nullable(Of Boolean)
	
	Private _expName As String
	
	Private _goodInf As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGood", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkGood() As Decimal
		Get
			Return Me._trkGood
		End Get
		Set
			If ((Me._trkGood = value)  _
						= false) Then
				Me._trkGood = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLok", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLok() As Decimal
		Get
			Return Me._trkExpLok
		End Get
		Set
			If ((Me._trkExpLok = value)  _
						= false) Then
				Me._trkExpLok = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ship", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property ship() As String
		Get
			Return Me._ship
		End Get
		Set
			If (String.Equals(Me._ship, value) = false) Then
				Me._ship = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_goodDate", DbType:="Date NOT NULL")>  _
	Public Property goodDate() As Date
		Get
			Return Me._goodDate
		End Get
		Set
			If ((Me._goodDate = value)  _
						= false) Then
				Me._goodDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delGood", DbType:="Bit")>  _
	Public Property delGood() As System.Nullable(Of Boolean)
		Get
			Return Me._delGood
		End Get
		Set
			If (Me._delGood.Equals(value) = false) Then
				Me._delGood = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_goodInf", DbType:="NVarChar(MAX)")>  _
	Public Property goodInf() As String
		Get
			Return Me._goodInf
		End Get
		Set
			If (String.Equals(Me._goodInf, value) = false) Then
				Me._goodInf = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.goodShpDet")>  _
Partial Public Class goodShpDet
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkGoodDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _aStock As Double
	
	Private _trkUnit As Decimal
	
	Private _weight As Double
	
	Private _shipDet As String
	
	Private _trkGood As Decimal
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _delGoodDet As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkGoodDetChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkGoodDetChanged()
    End Sub
    Partial Private Sub OntrkProdChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkProdChanged()
    End Sub
    Partial Private Sub OnaStockChanging(value As Double)
    End Sub
    Partial Private Sub OnaStockChanged()
    End Sub
    Partial Private Sub OntrkUnitChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkUnitChanged()
    End Sub
    Partial Private Sub OnweightChanging(value As Double)
    End Sub
    Partial Private Sub OnweightChanged()
    End Sub
    Partial Private Sub OnshipDetChanging(value As String)
    End Sub
    Partial Private Sub OnshipDetChanged()
    End Sub
    Partial Private Sub OntrkGoodChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkGoodChanged()
    End Sub
    Partial Private Sub OnuntOneChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntOneChanged()
    End Sub
    Partial Private Sub OnamtOneChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtOneChanged()
    End Sub
    Partial Private Sub OnuntTwoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnuntTwoChanged()
    End Sub
    Partial Private Sub OnamtTwoChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnamtTwoChanged()
    End Sub
    Partial Private Sub OndelGoodDetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndelGoodDetChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGoodDet", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkGoodDet() As Decimal
		Get
			Return Me._trkGoodDet
		End Get
		Set
			If ((Me._trkGoodDet = value)  _
						= false) Then
				Me.OntrkGoodDetChanging(value)
				Me.SendPropertyChanging
				Me._trkGoodDet = value
				Me.SendPropertyChanged("trkGoodDet")
				Me.OntrkGoodDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me.OntrkProdChanging(value)
				Me.SendPropertyChanging
				Me._trkProd = value
				Me.SendPropertyChanged("trkProd")
				Me.OntrkProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me.OnaStockChanging(value)
				Me.SendPropertyChanging
				Me._aStock = value
				Me.SendPropertyChanged("aStock")
				Me.OnaStockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me.OntrkUnitChanging(value)
				Me.SendPropertyChanging
				Me._trkUnit = value
				Me.SendPropertyChanged("trkUnit")
				Me.OntrkUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me.OnweightChanging(value)
				Me.SendPropertyChanging
				Me._weight = value
				Me.SendPropertyChanged("weight")
				Me.OnweightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipDet", DbType:="NVarChar(MAX)")>  _
	Public Property shipDet() As String
		Get
			Return Me._shipDet
		End Get
		Set
			If (String.Equals(Me._shipDet, value) = false) Then
				Me.OnshipDetChanging(value)
				Me.SendPropertyChanging
				Me._shipDet = value
				Me.SendPropertyChanged("shipDet")
				Me.OnshipDetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGood", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkGood() As Decimal
		Get
			Return Me._trkGood
		End Get
		Set
			If ((Me._trkGood = value)  _
						= false) Then
				Me.OntrkGoodChanging(value)
				Me.SendPropertyChanging
				Me._trkGood = value
				Me.SendPropertyChanged("trkGood")
				Me.OntrkGoodChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me.OnuntOneChanging(value)
				Me.SendPropertyChanging
				Me._untOne = value
				Me.SendPropertyChanged("untOne")
				Me.OnuntOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me.OnamtOneChanging(value)
				Me.SendPropertyChanging
				Me._amtOne = value
				Me.SendPropertyChanged("amtOne")
				Me.OnamtOneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me.OnuntTwoChanging(value)
				Me.SendPropertyChanging
				Me._untTwo = value
				Me.SendPropertyChanged("untTwo")
				Me.OnuntTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me.OnamtTwoChanging(value)
				Me.SendPropertyChanging
				Me._amtTwo = value
				Me.SendPropertyChanged("amtTwo")
				Me.OnamtTwoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delGoodDet", DbType:="Bit")>  _
	Public Property delGoodDet() As System.Nullable(Of Boolean)
		Get
			Return Me._delGoodDet
		End Get
		Set
			If (Me._delGoodDet.Equals(value) = false) Then
				Me.OndelGoodDetChanging(value)
				Me.SendPropertyChanging
				Me._delGoodDet = value
				Me.SendPropertyChanged("delGoodDet")
				Me.OndelGoodDetChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_gdShp")>  _
Partial Public Class V_gdShp
	
	Private _trkGoodDet As Decimal
	
	Private _trkProd As Decimal
	
	Private _aStock As Double
	
	Private _trkGood As Decimal
	
	Private _trkExpLok As Decimal
	
	Private _goodDate As Date
	
	Private _delGood As System.Nullable(Of Boolean)
	
	Private _prodName As String
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _weight As Double
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _expName As String
	
	Private _shipDet As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGoodDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkGoodDet() As Decimal
		Get
			Return Me._trkGoodDet
		End Get
		Set
			If ((Me._trkGoodDet = value)  _
						= false) Then
				Me._trkGoodDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_aStock", DbType:="Float NOT NULL")>  _
	Public Property aStock() As Double
		Get
			Return Me._aStock
		End Get
		Set
			If ((Me._aStock = value)  _
						= false) Then
				Me._aStock = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkGood", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkGood() As Decimal
		Get
			Return Me._trkGood
		End Get
		Set
			If ((Me._trkGood = value)  _
						= false) Then
				Me._trkGood = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkExpLok", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkExpLok() As Decimal
		Get
			Return Me._trkExpLok
		End Get
		Set
			If ((Me._trkExpLok = value)  _
						= false) Then
				Me._trkExpLok = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_goodDate", DbType:="Date NOT NULL")>  _
	Public Property goodDate() As Date
		Get
			Return Me._goodDate
		End Get
		Set
			If ((Me._goodDate = value)  _
						= false) Then
				Me._goodDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delGood", DbType:="Bit")>  _
	Public Property delGood() As System.Nullable(Of Boolean)
		Get
			Return Me._delGood
		End Get
		Set
			If (Me._delGood.Equals(value) = false) Then
				Me._delGood = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipDet", DbType:="NVarChar(MAX) NOT NULL", CanBeNull:=false)>  _
	Public Property shipDet() As String
		Get
			Return Me._shipDet
		End Get
		Set
			If (String.Equals(Me._shipDet, value) = false) Then
				Me._shipDet = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_ToPrd")>  _
Partial Public Class V_ToPrd
	
	Private _trkToPrd As Decimal
	
	Private _toPrdDate As Date
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _arivalName As String
	
	Private _peelerName As String
	
	Private _delToPrd As System.Nullable(Of Boolean)
	
	Private _trkCrop As Decimal
	
	Private _cropAmt As Double
	
	Private _trashAmt As System.Nullable(Of Double)
	
	Private _cropUnit As Decimal
	
	Private _toInfo As String
	
	Private _cropName As String
	
	Private _unitName As String
	
	Private _expName As String
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _clntCrpName As String
	
	Private _crpUntOne As System.Nullable(Of Decimal)
	
	Private _crpAmtOne As System.Nullable(Of Double)
	
	Private _crpUntTwo As System.Nullable(Of Decimal)
	
	Private _crpAmtTwo As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkToPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkToPrd() As Decimal
		Get
			Return Me._trkToPrd
		End Get
		Set
			If ((Me._trkToPrd = value)  _
						= false) Then
				Me._trkToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_toPrdDate", DbType:="Date NOT NULL")>  _
	Public Property toPrdDate() As Date
		Get
			Return Me._toPrdDate
		End Get
		Set
			If ((Me._toPrdDate = value)  _
						= false) Then
				Me._toPrdDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delToPrd", DbType:="Bit")>  _
	Public Property delToPrd() As System.Nullable(Of Boolean)
		Get
			Return Me._delToPrd
		End Get
		Set
			If (Me._delToPrd.Equals(value) = false) Then
				Me._delToPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropAmt", DbType:="Float NOT NULL")>  _
	Public Property cropAmt() As Double
		Get
			Return Me._cropAmt
		End Get
		Set
			If ((Me._cropAmt = value)  _
						= false) Then
				Me._cropAmt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trashAmt", DbType:="Float")>  _
	Public Property trashAmt() As System.Nullable(Of Double)
		Get
			Return Me._trashAmt
		End Get
		Set
			If (Me._trashAmt.Equals(value) = false) Then
				Me._trashAmt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property cropUnit() As Decimal
		Get
			Return Me._cropUnit
		End Get
		Set
			If ((Me._cropUnit = value)  _
						= false) Then
				Me._cropUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_toInfo", DbType:="NVarChar(MAX)")>  _
	Public Property toInfo() As String
		Get
			Return Me._toInfo
		End Get
		Set
			If (String.Equals(Me._toInfo, value) = false) Then
				Me._toInfo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expName", DbType:="NVarChar(50)")>  _
	Public Property expName() As String
		Get
			Return Me._expName
		End Get
		Set
			If (String.Equals(Me._expName, value) = false) Then
				Me._expName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpUntOne", DbType:="Decimal(18,0)")>  _
	Public Property crpUntOne() As System.Nullable(Of Decimal)
		Get
			Return Me._crpUntOne
		End Get
		Set
			If (Me._crpUntOne.Equals(value) = false) Then
				Me._crpUntOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpAmtOne", DbType:="Float")>  _
	Public Property crpAmtOne() As System.Nullable(Of Double)
		Get
			Return Me._crpAmtOne
		End Get
		Set
			If (Me._crpAmtOne.Equals(value) = false) Then
				Me._crpAmtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpUntTwo", DbType:="Decimal(18,0)")>  _
	Public Property crpUntTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._crpUntTwo
		End Get
		Set
			If (Me._crpUntTwo.Equals(value) = false) Then
				Me._crpUntTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_crpAmtTwo", DbType:="Float")>  _
	Public Property crpAmtTwo() As System.Nullable(Of Double)
		Get
			Return Me._crpAmtTwo
		End Get
		Set
			If (Me._crpAmtTwo.Equals(value) = false) Then
				Me._crpAmtTwo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.V_OutPrdDet")>  _
Partial Public Class V_OutPrdDet
	
	Private _trkPrdDet As Decimal
	
	Private _trkCrop As Decimal
	
	Private _amount As Double
	
	Private _trkOutPrd As Decimal
	
	Private _trkArival As Decimal
	
	Private _trkAStore As Decimal
	
	Private _oPrdDate As Date
	
	Private _isLocal As Boolean
	
	Private _trkClntCrp As System.Nullable(Of Decimal)
	
	Private _cropName As String
	
	Private _trkUnit As Decimal
	
	Private _unitName As String
	
	Private _untOne As System.Nullable(Of Decimal)
	
	Private _oneName As String
	
	Private _amtOne As System.Nullable(Of Double)
	
	Private _untTwo As System.Nullable(Of Decimal)
	
	Private _twoName As String
	
	Private _amtTwo As System.Nullable(Of Double)
	
	Private _arivalName As String
	
	Private _AStore As String
	
	Private _clntName As String
	
	Private _trkPeeler As Decimal
	
	Private _peelerName As String
	
	Private _weight As Double
	
	Private _clntCrpName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPrdDet", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPrdDet() As Decimal
		Get
			Return Me._trkPrdDet
		End Get
		Set
			If ((Me._trkPrdDet = value)  _
						= false) Then
				Me._trkPrdDet = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Float NOT NULL")>  _
	Public Property amount() As Double
		Get
			Return Me._amount
		End Get
		Set
			If ((Me._amount = value)  _
						= false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkOutPrd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkOutPrd() As Decimal
		Get
			Return Me._trkOutPrd
		End Get
		Set
			If ((Me._trkOutPrd = value)  _
						= false) Then
				Me._trkOutPrd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkAStore", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkAStore() As Decimal
		Get
			Return Me._trkAStore
		End Get
		Set
			If ((Me._trkAStore = value)  _
						= false) Then
				Me._trkAStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oPrdDate", DbType:="Date NOT NULL")>  _
	Public Property oPrdDate() As Date
		Get
			Return Me._oPrdDate
		End Get
		Set
			If ((Me._oPrdDate = value)  _
						= false) Then
				Me._oPrdDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLocal", DbType:="Bit NOT NULL")>  _
	Public Property isLocal() As Boolean
		Get
			Return Me._isLocal
		End Get
		Set
			If ((Me._isLocal = value)  _
						= false) Then
				Me._isLocal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkClntCrp", DbType:="Decimal(18,0)")>  _
	Public Property trkClntCrp() As System.Nullable(Of Decimal)
		Get
			Return Me._trkClntCrp
		End Get
		Set
			If (Me._trkClntCrp.Equals(value) = false) Then
				Me._trkClntCrp = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkUnit() As Decimal
		Get
			Return Me._trkUnit
		End Get
		Set
			If ((Me._trkUnit = value)  _
						= false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property unitName() As String
		Get
			Return Me._unitName
		End Get
		Set
			If (String.Equals(Me._unitName, value) = false) Then
				Me._unitName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untOne", DbType:="Decimal(18,0)")>  _
	Public Property untOne() As System.Nullable(Of Decimal)
		Get
			Return Me._untOne
		End Get
		Set
			If (Me._untOne.Equals(value) = false) Then
				Me._untOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtOne", DbType:="Float")>  _
	Public Property amtOne() As System.Nullable(Of Double)
		Get
			Return Me._amtOne
		End Get
		Set
			If (Me._amtOne.Equals(value) = false) Then
				Me._amtOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_untTwo", DbType:="Decimal(18,0)")>  _
	Public Property untTwo() As System.Nullable(Of Decimal)
		Get
			Return Me._untTwo
		End Get
		Set
			If (Me._untTwo.Equals(value) = false) Then
				Me._untTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amtTwo", DbType:="Float")>  _
	Public Property amtTwo() As System.Nullable(Of Double)
		Get
			Return Me._amtTwo
		End Get
		Set
			If (Me._amtTwo.Equals(value) = false) Then
				Me._amtTwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntName() As String
		Get
			Return Me._clntName
		End Get
		Set
			If (String.Equals(Me._clntName, value) = false) Then
				Me._clntName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_weight", DbType:="Float NOT NULL")>  _
	Public Property weight() As Double
		Get
			Return Me._weight
		End Get
		Set
			If ((Me._weight = value)  _
						= false) Then
				Me._weight = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.strType")>  _
Partial Public Class strType
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trkStrType As Decimal
	
	Private _typeName As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OntrkStrTypeChanging(value As Decimal)
    End Sub
    Partial Private Sub OntrkStrTypeChanged()
    End Sub
    Partial Private Sub OntypeNameChanging(value As String)
    End Sub
    Partial Private Sub OntypeNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkStrType", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property trkStrType() As Decimal
		Get
			Return Me._trkStrType
		End Get
		Set
			If ((Me._trkStrType = value)  _
						= false) Then
				Me.OntrkStrTypeChanging(value)
				Me.SendPropertyChanging
				Me._trkStrType = value
				Me.SendPropertyChanged("trkStrType")
				Me.OntrkStrTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_typeName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property typeName() As String
		Get
			Return Me._typeName
		End Get
		Set
			If (String.Equals(Me._typeName, value) = false) Then
				Me.OntypeNameChanging(value)
				Me.SendPropertyChanging
				Me._typeName = value
				Me.SendPropertyChanged("typeName")
				Me.OntypeNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.[user]")>  _
Partial Public Class user
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uTrk As Decimal
	
	Private _uName As String
	
	Private _uId As String
	
	Private _uPass As String
	
	Private _uDel As Boolean
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuTrkChanging(value As Decimal)
    End Sub
    Partial Private Sub OnuTrkChanged()
    End Sub
    Partial Private Sub OnuNameChanging(value As String)
    End Sub
    Partial Private Sub OnuNameChanged()
    End Sub
    Partial Private Sub OnuIdChanging(value As String)
    End Sub
    Partial Private Sub OnuIdChanged()
    End Sub
    Partial Private Sub OnuPassChanging(value As String)
    End Sub
    Partial Private Sub OnuPassChanged()
    End Sub
    Partial Private Sub OnuDelChanging(value As Boolean)
    End Sub
    Partial Private Sub OnuDelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uTrk", DbType:="Decimal(18,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property uTrk() As Decimal
		Get
			Return Me._uTrk
		End Get
		Set
			If ((Me._uTrk = value)  _
						= false) Then
				Me.OnuTrkChanging(value)
				Me.SendPropertyChanging
				Me._uTrk = value
				Me.SendPropertyChanged("uTrk")
				Me.OnuTrkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property uName() As String
		Get
			Return Me._uName
		End Get
		Set
			If (String.Equals(Me._uName, value) = false) Then
				Me.OnuNameChanging(value)
				Me.SendPropertyChanging
				Me._uName = value
				Me.SendPropertyChanged("uName")
				Me.OnuNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uId", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property uId() As String
		Get
			Return Me._uId
		End Get
		Set
			If (String.Equals(Me._uId, value) = false) Then
				Me.OnuIdChanging(value)
				Me.SendPropertyChanging
				Me._uId = value
				Me.SendPropertyChanged("uId")
				Me.OnuIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uPass", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property uPass() As String
		Get
			Return Me._uPass
		End Get
		Set
			If (String.Equals(Me._uPass, value) = false) Then
				Me.OnuPassChanging(value)
				Me.SendPropertyChanging
				Me._uPass = value
				Me.SendPropertyChanged("uPass")
				Me.OnuPassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uDel", DbType:="Bit NOT NULL")>  _
	Public Property uDel() As Boolean
		Get
			Return Me._uDel
		End Get
		Set
			If ((Me._uDel = value)  _
						= false) Then
				Me.OnuDelChanging(value)
				Me.SendPropertyChanging
				Me._uDel = value
				Me.SendPropertyChanged("uDel")
				Me.OnuDelChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class ExportTotalResult
	
	Private _prodName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdArvResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdPeelerResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdClntRcvPlrResult
	
	Private _trkProd As Decimal
	
	Private _trkUnit As System.Nullable(Of Decimal)
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0)")>  _
	Public Property trkUnit() As System.Nullable(Of Decimal)
		Get
			Return Me._trkUnit
		End Get
		Set
			If (Me._trkUnit.Equals(value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class ProceRecvClntResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class CrpBuyResult
	
	Private _trkCrop As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class CrpStationResult
	
	Private _trkCrop As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class ProduceRecvResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class ProduceSaleResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class ProduceExpResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdClntPlrResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class ProduceRecvClntResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdClntStrResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdClntRecvResult
	
	Private _trkProd As Decimal
	
	Private _trkUnit As System.Nullable(Of Decimal)
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkUnit", DbType:="Decimal(18,0)")>  _
	Public Property trkUnit() As System.Nullable(Of Decimal)
		Get
			Return Me._trkUnit
		End Get
		Set
			If (Me._trkUnit.Equals(value) = false) Then
				Me._trkUnit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdStationResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdClntTotalResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PrdGoodResult
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class CrpPeelerResult
	
	Private _trkCrop As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class BuyTotalResult
	
	Private _cropName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class ArrivalTotalResult
	
	Private _cropName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class ArvlTotalNoClntResult
	
	Private _cropName As String
	
	Private _clntName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property clntName() As String
		Get
			Return Me._clntName
		End Get
		Set
			If (String.Equals(Me._clntName, value) = false) Then
				Me._clntName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class PeelerClntTotalResult
	
	Private _prodName As String
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class RecvTotalClntResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PeelerTotalResult
	
	Private _prodName As String
	
	Private _trkProd As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class RecvTotalResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class ExpTotalResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class PlrNoClntTotalResult
	
	Private _prodName As String
	
	Private _trkProd As Decimal
	
	Private _clntCrpName As String
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class ArrivalPrdTotalResult
	
	Private _prodName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50)")>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class ArvlPrdTotalClntResult
	
	Private _prodName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50)")>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class ArvlPrdAllClntResult
	
	Private _prodName As String
	
	Private _clntCrpName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50)")>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindCrpBuyResult
	
	Private _buyLoc As String
	
	Private _bStore As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_buyLoc", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property buyLoc() As String
		Get
			Return Me._buyLoc
		End Get
		Set
			If (String.Equals(Me._buyLoc, value) = false) Then
				Me._buyLoc = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property bStore() As String
		Get
			Return Me._bStore
		End Get
		Set
			If (String.Equals(Me._bStore, value) = false) Then
				Me._bStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class CrpArvResult
	
	Private _trkCrop As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkCrop", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkCrop() As Decimal
		Get
			Return Me._trkCrop
		End Get
		Set
			If ((Me._trkCrop = value)  _
						= false) Then
				Me._trkCrop = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindCrpArvResult
	
	Private _arivalName As String
	
	Private _AStore As String
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindCrpClntResult
	
	Private _arivalName As String
	
	Private _AStore As String
	
	Private _clntCrpName As String
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AStore", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property AStore() As String
		Get
			Return Me._AStore
		End Get
		Set
			If (String.Equals(Me._AStore, value) = false) Then
				Me._AStore = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class PlrFindCrpResult
	
	Private _arivalName As String
	
	Private _peelerName As String
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class PlrFindCrpClntResult
	
	Private _arivalName As String
	
	Private _peelerName As String
	
	Private _clntCrpName As String
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50)")>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindPrdArvResult
	
	Private _arivalName As String
	
	Private _APrdStr As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50)")>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindPrdArvClntResult
	
	Private _arivalName As String
	
	Private _APrdStr As String
	
	Private _clntCrpName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50)")>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_APrdStr", DbType:="NVarChar(50)")>  _
	Public Property APrdStr() As String
		Get
			Return Me._APrdStr
		End Get
		Set
			If (String.Equals(Me._APrdStr, value) = false) Then
				Me._APrdStr = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class PeelerCrpTotalResult
	
	Private _cropName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class PeelerCrpNoClntResult
	
	Private _cropName As String
	
	Private _clntCrpName As String
	
	Private _oneUnt As String
	
	Private _twoUnt As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cropName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cropName() As String
		Get
			Return Me._cropName
		End Get
		Set
			If (String.Equals(Me._cropName, value) = false) Then
				Me._cropName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="NVarChar(65)")>  _
	Public Property oneUnt() As String
		Get
			Return Me._oneUnt
		End Get
		Set
			If (String.Equals(Me._oneUnt, value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="NVarChar(65)")>  _
	Public Property twoUnt() As String
		Get
			Return Me._twoUnt
		End Get
		Set
			If (String.Equals(Me._twoUnt, value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindRecvResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindExpResult
	
	Private _trkProd As Decimal
	
	Private _AOne As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _ATwo As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AOne", DbType:="Float")>  _
	Public Property AOne() As System.Nullable(Of Double)
		Get
			Return Me._AOne
		End Get
		Set
			If (Me._AOne.Equals(value) = false) Then
				Me._AOne = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATwo", DbType:="Float")>  _
	Public Property ATwo() As System.Nullable(Of Double)
		Get
			Return Me._ATwo
		End Get
		Set
			If (Me._ATwo.Equals(value) = false) Then
				Me._ATwo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindPrdPlrResult
	
	Private _arivalName As String
	
	Private _peelerName As String
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
End Class

Partial Public Class FindPrdPlrClntResult
	
	Private _prodName As String
	
	Private _trkProd As Decimal
	
	Private _clntCrpName As String
	
	Private _arivalName As String
	
	Private _peelerName As String
	
	Private _trkArival As Decimal
	
	Private _trkPeeler As Decimal
	
	Private _oneUnt As System.Nullable(Of Double)
	
	Private _oneName As String
	
	Private _twoUnt As System.Nullable(Of Double)
	
	Private _twoName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_prodName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property prodName() As String
		Get
			Return Me._prodName
		End Get
		Set
			If (String.Equals(Me._prodName, value) = false) Then
				Me._prodName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkProd", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkProd() As Decimal
		Get
			Return Me._trkProd
		End Get
		Set
			If ((Me._trkProd = value)  _
						= false) Then
				Me._trkProd = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clntCrpName", DbType:="NVarChar(50)")>  _
	Public Property clntCrpName() As String
		Get
			Return Me._clntCrpName
		End Get
		Set
			If (String.Equals(Me._clntCrpName, value) = false) Then
				Me._clntCrpName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_arivalName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property arivalName() As String
		Get
			Return Me._arivalName
		End Get
		Set
			If (String.Equals(Me._arivalName, value) = false) Then
				Me._arivalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_peelerName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property peelerName() As String
		Get
			Return Me._peelerName
		End Get
		Set
			If (String.Equals(Me._peelerName, value) = false) Then
				Me._peelerName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkArival", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkArival() As Decimal
		Get
			Return Me._trkArival
		End Get
		Set
			If ((Me._trkArival = value)  _
						= false) Then
				Me._trkArival = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trkPeeler", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trkPeeler() As Decimal
		Get
			Return Me._trkPeeler
		End Get
		Set
			If ((Me._trkPeeler = value)  _
						= false) Then
				Me._trkPeeler = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneUnt", DbType:="Float")>  _
	Public Property oneUnt() As System.Nullable(Of Double)
		Get
			Return Me._oneUnt
		End Get
		Set
			If (Me._oneUnt.Equals(value) = false) Then
				Me._oneUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oneName", DbType:="NVarChar(50)")>  _
	Public Property oneName() As String
		Get
			Return Me._oneName
		End Get
		Set
			If (String.Equals(Me._oneName, value) = false) Then
				Me._oneName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoUnt", DbType:="Float")>  _
	Public Property twoUnt() As System.Nullable(Of Double)
		Get
			Return Me._twoUnt
		End Get
		Set
			If (Me._twoUnt.Equals(value) = false) Then
				Me._twoUnt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_twoName", DbType:="NVarChar(50)")>  _
	Public Property twoName() As String
		Get
			Return Me._twoName
		End Get
		Set
			If (String.Equals(Me._twoName, value) = false) Then
				Me._twoName = value
			End If
		End Set
	End Property
End Class
